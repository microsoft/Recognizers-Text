---
#ISO 639-2 Code
LangMarker: Ita
CheckBothBeforeAfter: !bool false
TillRegex: !simpleRegex
  def: (?<till>\b(fino\s+a(l(l[aoe'])?|gli|i)?|a(l(l[aoe'])?|gli|i)?|e\s+(il?|l[aoe']|gli))\b|--|-|—|——|~)
RestrictedTillRegex: !simpleRegex
  def: (?<till>\b(fino\s+a(l(l[aoe'])?|gli|i)?)\b|--|-|—|——|~)
RangeConnectorRegex: !nestedRegex
  def: (?<and>\b(e(\s+l[aoe']|gli|i)?|a(l(l[aoe'])?|gli|i)?)\b|{BaseDateTime.RangeConnectorSymbolRegex})
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
RelativeRegex: !simpleRegex
  def: \b(?<order>((il?|l[ae])\s+)?prossim['oaie]|((il?|l[ae])\s+)?seguent[ei]|((il?|l[ae])\s+)?successiv[oaei]|in\s+arrivo|quest['oaie]|(l'|gli\s+|le\s+)?ultim['oaie]|((il?|l[ae])\s+)?passat[oaie]|((il?|l[ae])\s+)?precedent[ei]|((lo|l[ae]|gli)\s+)?scors[oaie]|((il?|l[ae])\s+)?corrent[ei]|quest['oaei]|il?|l[oae']|gli)
StrictRelativeRegex: !simpleRegex
  def: (?<order>prossim['oaie]|seguent[ei]|successiv[oaei]|in\s+arrivo|quest['oaie]|ultim['oaie]|passat[oaie]|precedent[ei]|scors[oaie]|corrent[ei]|quest['oaei])
NextSuffixRegex: !simpleRegex
  def: (?<order>prossim[oaei]|seguent[ei]|successiv[oaei]|imminent[ei]|in\s+arrivo)\b
PastSuffixRegex: !simpleRegex
  def: (?<order>precedent[ei]|scors[oaei]|passat[oaei]|ultim['oaie])\b
ThisPrefixRegex: !simpleRegex
  def: (quest['oa]|corrente)
UpcomingPrefixRegex: !simpleRegex
  def: ((quest[aoei]\s+)?(stess[oaei]|imminent[ei])|in\s+arrivo)
NextPrefixRegex: !nestedRegex
  def: \b(((il?|l[ae])\s+)?successiv[oaei]|((il?|l[ae])\s+)?seguent[ei]|((il?|l[ae])\s+)?prossim[oaei]|{UpcomingPrefixRegex})\b
  references: [ UpcomingPrefixRegex ]
AfterNextSuffixRegex: !simpleRegex
  def: \b(dopo\s+(il|la)\s+prossim[oa])\b
PastPrefixRegex: !simpleRegex
  def: \b(((lo|l[ae]|gli)\s+)?scors[oaei])\b
PreviousPrefixRegex: !nestedRegex
  def: \b(((il?|l[ae])\s+)?passat[oaei]|((il?|l[ae])\s+)?precedent[ei]|(l'|gli\s+|le\s+)?ultim[oaei]|{PastPrefixRegex})\b
  references: [ PastPrefixRegex ]
RangePrefixRegex: !simpleRegex
  def: \b(da(l(l[oae'])?|i|gli)?|tra|fra|entro)(\s+(il|l[aeo']|gli|i))?\b
WrittenOneToNineRegex: !simpleRegex
  def: (uno|due|tre|quattro|cinque|sei|sette|otto|nove)
WrittenElevenToNineteenRegex: !simpleRegex
  def: (undici|dodici|tredici|quattordici|quindici|sedici|diciassette|diciotto|diciannove)
WrittenTensRegex: !simpleRegex
  def: (dieci|venti?|trenta?|quaranta?|cinquanta?|sessanta?|settanta?|o?ttanta?|novanta?)
WrittenNumRegex: !nestedRegex
  def: ({WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|({WrittenTensRegex}{WrittenOneToNineRegex}?))
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
FirstDayRegex: !simpleRegex
   def: (primo(?=\s+(aprile|apr|agosto|ago|dicembre|dic|febbraio|feb|gennaio|gen|luglio|lug|giugno|giu|marzo|mar|maggio|mag|novembre|nov|ottobre|ott|settembre|set|sett)\b))
WrittenDayRegex: !nestedRegex
  def: (?<day>uno|due|tre|quattro|cinque|sei|sette|otto|nove|dieci|undici|dodici|tredici|quattordici|quindici|sedici|diciassette|diciotto|diciannove|venti|ventuno|ventidue|ventitre|ventiquattro|venticinque|ventisei|ventisette|ventotto|ventinove|trenta|trentuno|{FirstDayRegex})
  references: [ FirstDayRegex ]
DayRegex: !simpleRegex
  def: \b((il|l')\s*)?(?<!\d)(?<day>01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)(?!°)(?=\b|t)
MonthNumRegex: !simpleRegex
  def: (?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\b
WeekDayRegex: !simpleRegex
  def: \b(?<weekday>domenica|lunedì|martedì|mercoledì|giovedì|venerdì|sabato|lun|mar|mer|gio|ven|sab|dom)\b
RelativeMonthRegex: !nestedRegex
  def: (?<relmonth>((di|del|dell[o'])\s+)?(({ThisPrefixRegex}\s+mese)|(mese\s+({PastSuffixRegex}|{NextSuffixRegex}))|(({PastSuffixRegex}|{NextSuffixRegex})\s+mese)))\b
  references: [ThisPrefixRegex, PastSuffixRegex, NextSuffixRegex]
MonthRegex: !simpleRegex
  def: (?<month>apr(ile)?|ago(sto)?|dic(embre)?|feb(braio)?|gen(naio)?|lug(lio)?|giu(gno)?|mar(zo)?|mag(gio)?|nov(embre)?|ott(obre)?|set(tembre|t)?)\b
EngMonthRegex: !nestedRegex
  def: (((il\s+)?mese di\s+)?{MonthRegex})
  references: [ MonthRegex ]
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>(in\s+|nel(l['o])?\s*|di\s+|del(l['o])?\s*|a([ld]|ll['o])?\s*|(il|l[o'])\s*)?({RelativeMonthRegex}|{EngMonthRegex}))
  references: [ RelativeMonthRegex, EngMonthRegex ]
SpecialDescRegex: !simpleRegex
  def: ((?<ipm>)p\b)
AmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmDescRegex})
  references: [BaseDateTime.BaseAmDescRegex]
PmDescRegex: !nestedRegex
  def: ({BaseDateTime.BasePmDescRegex})
  references: [BaseDateTime.BasePmDescRegex]
AmPmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmPmDescRegex})
  references: [BaseDateTime.BaseAmPmDescRegex]
DescRegex: !nestedRegex
  def: (?<desc>in punto|{AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex})
  references: [AmDescRegex, PmDescRegex, AmPmDescRegex, SpecialDescRegex]
WrittenCenturyCardinalYearRegex: !simpleRegex
  def: (cento|duecento|trecento|quattrocento|cinquecento|seicento|settecento|ottocento|novecento)
WrittenCenturyOrdinalYearRegex: !simpleRegex
  def: (ventunesimo|ventiduesimo|primo|secondo|terzo|quarto|quinto|sesto|settimo|ottavo|nono|decimo|undicesimo|ventesimo|tredicesimo|quattordicesimo|quindicesimo|sedicesimo|diciassettesimo|diciottesimo|diciannovesimo|ventesimo)(\s+secolo)?
WrittenCenturyFullYearRegex: !nestedRegex
  def: (?<century>(mille|duemila)({WrittenCenturyCardinalYearRegex})?|{WrittenCenturyCardinalYearRegex})
  references: [ WrittenCenturyCardinalYearRegex ]
CenturyRegex: !nestedRegex
  def: \b(?<century>{WrittenCenturyFullYearRegex})\b
  references: [WrittenCenturyFullYearRegex ]
DecadeRegex: !simpleRegex
  def: (?<decade>dieci|venti|trenta|quaranta|cinquanta|sessanta|settanta|o?ttanta|novanta|due mila)
DecadeWithCenturyRegex: !nestedRegex
  def: \b((gli\s+)?anni\s+)(((?<century>\d|1\d|2\d)?(')?(?<decade>\d0)(')?)|(({CenturyRegex})?{DecadeRegex})|{WrittenCenturyFullYearRegex}({DecadeRegex})?)\b
  references: [ CenturyRegex, DecadeRegex, WrittenCenturyFullYearRegex ]
RelativeDecadeRegex: !nestedRegex
  def: \b((((il?|l'|gli)\s*)?{RelativeRegex}\s+((?<number>[\w,]+)\s+)?decennio?)|(((il?|l'|gli)\s*)?((?<number>[\w,]+)\s+)?decennio?\s+{RelativeRegex}))\b
  references: [ RelativeRegex ]
LastTwoYearNumRegex: !nestedRegex
  def: ({WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}({WrittenOneToNineRegex})?)
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
FullTextYearRegex: !nestedRegex
  def: \b((?<firsttwoyearnum>{WrittenCenturyFullYearRegex})(?<lasttwoyearnum>{LastTwoYearNumRegex})?)\b
  references: [ WrittenCenturyFullYearRegex, LastTwoYearNumRegex ]
TwoDigitYearRegex: !nestedRegex
  def: \b(?<![$])(?<year>([0-9]\d))(?!(\s*((\:\d)|{AmDescRegex}|{PmDescRegex}|\.\d)))\b
  references: [ AmDescRegex, PmDescRegex]
#This is a look-behind assertion. Some cases should extract two digits as year like 11/25/16, where 16 means 2016. 
#The assertion determines if not connected with am/pm or hour separator (:), which should be a time.
DateYearRegex: !nestedRegex
  def: (?<year>{BaseDateTime.FourDigitYearRegex}|{TwoDigitYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, TwoDigitYearRegex ]
YearSuffix: !nestedRegex
  def: (,?\s*({DateYearRegex}|{FullTextYearRegex}))
  references: [ DateYearRegex, FullTextYearRegex ]
YearRegex: !nestedRegex
  def: ({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, FullTextYearRegex ]
DateUnitRegex: !simpleRegex
  def: \b(?<unit>decennio|mese|settimana|(ann|giorn)(o|(?<plural>i))|(?<plural>decenni|mesi|settimane))\b
SimpleCasesRegex: !nestedRegex
  def: \b((dal?|[tf]ra)\s+)?({DayRegex})(\s+{MonthSuffixRegex})?\s*{TillRegex}\s*({DayRegex}\s+{MonthSuffixRegex}|{MonthSuffixRegex}\s+{DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: \b((dal?|[tf]ra)\s+)?{MonthSuffixRegex}\s+((dal?|[tf]ra)\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: \b{MonthSuffixRegex}\s+([tf]ra\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, RangeConnectorRegex , YearRegex ]
BetweenRegex: !nestedRegex
  def: \b([tf]ra\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, RangeConnectorRegex , MonthSuffixRegex, YearRegex ]
YearWordRegex: !simpleRegex
  def: \b(?<year>l'anno)\b
MonthWithYear: !nestedRegex
  def: \b({MonthRegex}(\.)?(\s*)[/\\\-\.,]?(((\s+del)?\s+{YearRegex})|((\s+(del|di|il))?\s+(?<order>prossim['o]|passato|quest['o])\s*anno)|((\s+(del)?l')anno\s+(?<order>prossimo|passato))))
  references: [ YearRegex, MonthRegex ]
SpecialYearPrefixes: !simpleRegex
  def: (?<special>fiscale|scolastico)
OneWordPeriodRegex: !nestedRegex
  def: \b((((il|l[o'])\s*)?((mese di\s+)|({RelativeRegex}\s*))?{MonthRegex}(\s+{RelativeRegex})?)|dall'inizio\s+del(l')\s*(mese|anno)|({RelativeRegex}\s*)?(mi[ao]\s+)?(weekend|finesettimana|settimana|mese|anno)(\s+{RelativeRegex})?(?!((\s+di|del)?\s+\d+))(\s+{AfterNextSuffixRegex})?)\b
  references: [ RelativeRegex, MonthRegex, AfterNextSuffixRegex ]
MonthNumWithYear: !nestedRegex
  def: ({YearRegex}[/\-\.]{MonthNumRegex})|({MonthNumRegex}[/\-]{YearRegex})
  references: [ YearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: \b(?<wom>(l[a']\s*)?(?<cardinal>prima|seconda|terza|quarta|quinta|ultima)\s+settimana\s+{MonthSuffixRegex}(\s+{BaseDateTime.FourDigitYearRegex}|{RelativeRegex}\s+year)?)\b
  references: [ MonthSuffixRegex, BaseDateTime.FourDigitYearRegex, RelativeRegex ]
WeekOfYearRegex: !nestedRegex
  def: \b(?<woy>(l[a']\s*)?(?<cardinal>prima|seconda|terza|quarta|quinta|ultima)\s+settimana(\s+(di|del(l[o'])?))?\s*({YearRegex}|({RelativeRegex}\s*anno)|(anno\s+(({NextSuffixRegex})|({PastSuffixRegex})))))
  references: [ YearRegex, RelativeRegex, NextSuffixRegex, PastSuffixRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+([\.,]\d*)?)\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterRegex: !nestedRegex
  def: \b((il|l')\s*)?(?<cardinal>primo|secondo|terzo|quarto|ultimo)\s+trimestre((\s+(di|del(l[o'])?)|\s*,\s*)?\s*({YearRegex}|({RelativeRegex}\s*anno)|(anno\s+(({NextSuffixRegex})|({PastSuffixRegex})))))?
  references: [ YearRegex, RelativeRegex, NextSuffixRegex, PastSuffixRegex ]
QuarterRegexYearFront: !nestedRegex
  def: ({YearRegex}|l'anno\s+({PastSuffixRegex}|{NextSuffixRegex})|{RelativeRegex}\s+anno)\s+((per\s+)?il\s+)?(?<cardinal>primo|secondo|terzo|quarto)\s+trimestre
  references: [ YearRegex, RelativeRegex, PastSuffixRegex, NextSuffixRegex ]
AllHalfYearRegex: !nestedRegex
  def: ((la\s+)?((prima|seconda)\s+metà)(\s+(di|del(l[o'])?)|\s*,\s*)\s*({RelativeRegex}?\s*anno)|(il\s+)?((primo|secondo)\s+semestre)((\s+(di|del(l[o'])?)|\s*,\s*)\s*({RelativeRegex}?\s*anno))?)
  references: [ RelativeRegex ]
EarlyPrefixRegex: !simpleRegex
  def: \b(?<EarlyPrefix>prima|a\s+partire\s+da(l(l[aoe'])?)?|inizio(\s+(di|del(l[ao'])?))?)\b
MidPrefixRegex: !simpleRegex
  def: \b(?<MidPrefix>metà(\s+(di|del(l[ao'])?))?)\b
LaterPrefixRegex: !simpleRegex
  def: \b(?<LatePrefix>fine(\s+(di|del(l[ao'])?))?|(?<RelLate>più\s+tardi(\s+(in|a))?))\b
PrefixPeriodRegex: !nestedRegex
  def: ({EarlyPrefixRegex}|{MidPrefixRegex}|{LaterPrefixRegex})
  references: [EarlyPrefixRegex, MidPrefixRegex, LaterPrefixRegex]
PrefixDayRegex: !simpleRegex
  def: \b(((inizio|metà|fine)((\s+(della\s+)?giornata)|(\s+del\s+giorno)))|((prima|(più\s+tardi))\s+quel\s+giorno))$
CenturySuffixRegex: !simpleRegex
  def: (^secolo)\b
SeasonRegex: !nestedRegex
  def: \b(l[a']|{PrefixPeriodRegex}\s*)?(((<seas>primavera|estate|autunno|inverno)\s*({NextSuffixRegex}|{PastSuffixRegex}))|(?<season>({RelativeRegex}\s*)?(?<seas>primavera|estate|autunno|inverno)((\s+(di|del(l[o'])?)|\s*,\s*)?\s*({YearRegex}|{RelativeRegex}\s*anno))?))\b
  references: [ PrefixPeriodRegex, YearRegex, RelativeRegex, NextSuffixRegex, PastSuffixRegex ]
WhichWeekRegex: !simpleRegex
  def: \b(settimana)(\s*)(?<number>5[0-3]|[1-4]\d|0?[1-9])\b
WeekOfRegex: !simpleRegex
  def: (la\s+)?(settimana)(\s*)(d[i']|del(l[aeo'])?|degli)
MonthOfRegex: !simpleRegex
  def: (il\s+)?(mese)(\s*)(d[i']|del(l[aeo'])?|degli)
OnRegex: !nestedRegex
  def: (?<=\b(il|l')\s*)({DayRegex})\b
  references: [ DayRegex ]
RelaxedOnRegex: !simpleRegex
  def: (?<=\b(il|l'|del(l')?|di|al(l')?|a)\s*)((?<day>10|11|12|13|14|15|16|17|18|19|1°?|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9))(?!°)\b
PrefixWeekDayRegex: !simpleRegex
  def: (\s*((,?\s*(di|il))|[,-—–]))
ThisRegex: !nestedRegex
  def: \b(quest[oa](\s+settimana{PrefixWeekDayRegex}?)?\s*{WeekDayRegex})|({WeekDayRegex}((\s+di)?\s+questa\s+settimana))\b
  references: [ WeekDayRegex, PrefixWeekDayRegex ]
LastDateRegex: !nestedRegex
  def: \b({WeekDayRegex}\s+(del)?la\s+(settimana\s+{PastSuffixRegex}|{PastSuffixRegex}\s+settimana))|(({PastSuffixRegex}\s+settimana|settimana\s+{PastSuffixRegex})(\s*{PrefixWeekDayRegex}?\s*{WeekDayRegex}))|({WeekDayRegex}(\s+(mattina|pomeriggio|sera|notte))?\s+{PastSuffixRegex})|({PastSuffixRegex}\s+{WeekDayRegex})\b
  references: [ PastSuffixRegex, WeekDayRegex, PrefixWeekDayRegex ]
NextDateRegex: !nestedRegex
  def: \b({WeekDayRegex}\s+(del)?la\s+(settimana\s+{NextSuffixRegex}|{NextSuffixRegex}\s+settimana))|(({NextSuffixRegex}\s+settimana|settimana\s+{NextSuffixRegex})({PrefixWeekDayRegex}?\s*{WeekDayRegex})?)|({WeekDayRegex}(\s+(mattina|pomeriggio|sera|notte))?\s+{NextSuffixRegex})|({NextSuffixRegex}\s+{WeekDayRegex})\b
  references: [ NextSuffixRegex, WeekDayRegex, PrefixWeekDayRegex ]
SpecialDayRegex: !nestedRegex
  def: \b((avant'?ieri)|(l'altro\s*ieri)|(ieri\s+l'altro)|(dopo\s*domani)|(il\s+giorno\s+(dopo|seguente|passato|precedente|prima))|ieri|((l')?in)?domani|(quest')?oggi|in\s+giornata|((il|la|l')\s*)?({RelativeRegex}|mi[oa])\s*(giorno|giornata))\b
  references: [ RelativeRegex ]
SpecialDayWithNumRegex: !nestedRegex
  def: \b((?<number>{WrittenNumRegex})\s+giorni\s+da\s+(?<day>ieri|domani|oggi))\b
  references: [ WrittenNumRegex ]
StrictWeekDay: !simpleRegex
  def: \b(?<weekday>domenica|lunedì|martedì|mercoledì|giovedì|venerdì|sabato|lun|mar|mer|gio|ven|sab|dom)\b
RelativeDayRegex: !nestedRegex
  def: \b(((il|l')\s*)?{RelativeRegex}\s+giorno)\b
  references: [ RelativeRegex ]
SetWeekDayRegex: !simpleRegex
  def: \b(?<prefix>(tutt[ei]\s+)?(le|i)\s+)(?<weekday>(?<g0>mattin|ser)|(?<g1>pomerigg)|(?<g2>nott)|(?<g3>luned|marted|mercoled|gioved|venerd)|(?<g4>domenic)|(?<g5>sabat))(e|i|ì|he)\b
WeekDayOfMonthRegex: !nestedRegex
  def: (?<wom>((la|il)\s+)?(?<cardinal>prim[ao]|second[ao]|terz[ao]|quart[ao]|quint[ao]|ultim[ao])\s+{WeekDayRegex}\s+{MonthSuffixRegex})
  references: [ WeekDayRegex, MonthSuffixRegex ]
RelativeWeekDayRegex: !nestedRegex
  def: \b({WrittenNumRegex}\s+{WeekDayRegex}\s+(da\s+ora|dopo))\b
  references: [ WrittenNumRegex, WeekDayRegex ]
SpecialDate: !nestedRegex
  def: (?<=\b(il|l'|al(l')?)\s*){DayRegex}\b
  references: [ DayRegex ]
DateExtractor1: !nestedRegex
  def: \b((quest[oa]\s+)?{WeekDayRegex}\s*[,-]?\s*)?(({MonthRegex}(\.)?\s*[/\\.,-]?\s*{DayRegex})|(\({MonthRegex}\s*[-.]\s*{DayRegex}\))|({DayRegex}\s*[/\\.,-]?\s*{MonthRegex}(\.)?))(\s*\(\s*{WeekDayRegex}\s*\))?
  references: [ WeekDayRegex, MonthRegex, DayRegex ]
DateExtractor2: !nestedRegex
  def: ({DateExtractor1}(\s+|\s*[\-/,.]\s*|\s+del\s+)({DateYearRegex}))\b
  references: [ DateExtractor1, DateYearRegex ]
DateExtractor3: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?({DayRegex}(\.)?(\s*[/,.\- ]\s*|\s+di\s+){MonthRegex}(\.)?(\s*[/,.\- ]\s*{DateYearRegex})?|{BaseDateTime.FourDigitYearRegex}\s*[/,.\- ]\s*{DayRegex}\s*[/,.\- ]\s*{MonthRegex})\b
  references: [ WeekDayRegex, DayRegex, MonthRegex, DateYearRegex, BaseDateTime.FourDigitYearRegex ]
# The final lookahead in DateExtractor4|5|7|A avoids extracting as date "10/1-11" from an input like "10/1-11/2/2017"  
DateExtractor4: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?((il|l')\s*)?{MonthNumRegex}\s*[/\\\-]\s*{DayRegex}(\.)?\s*[/\\\-]\s*{DateYearRegex}(?!\s*[/\\\-\.]\s*\d+)
  references: [ MonthNumRegex, DayRegex, DateYearRegex, WeekDayRegex ]
DateExtractor5: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{DayRegex}\s*[/\\\-]\s*({MonthNumRegex}|{MonthRegex}(\.)?)\s*[/\\\-]\s*{DateYearRegex}(?!\s*[/\\\-\.]\s*\d+)
  references: [ DayRegex, MonthNumRegex, MonthRegex, DateYearRegex, WeekDayRegex ]
DateExtractor6: !nestedRegex
  def: (?<!([\-\.\/]|all[e']\s*|l[e']\s*))\b{MonthNumRegex}[\-\.\/]{DayRegex}{BaseDateTime.CheckDecimalRegex}(?!(%|\s*{DescRegex}))\b
  references: [MonthNumRegex, DayRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor7: !nestedRegex
  def: (?<!\b{DateYearRegex}\s*[/\\\-]\s*)\b{DayRegex}\s*[\/\\-]s*{MonthNumRegex}((\s+|\s*[\/\-\\,]\s*){DateYearRegex})?\b{BaseDateTime.CheckDecimalRegex}(?!\s*[/\\\-\.]\s*\d+)
  references: [ DayRegex, MonthNumRegex, DateYearRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor8: !nestedRegex
  def: (?<!([\-\.\/]|all[e']\s*|l[e']\s*))\b{DayRegex}[\/\\\-]{MonthNumRegex}{BaseDateTime.CheckDecimalRegex}(?!(%|\s*{DescRegex}))\b
  references: [ DayRegex, MonthNumRegex, DescRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor9: !nestedRegex
  def: (?<!\b{DateYearRegex}\s*[/\\\-]\s*)\b{DayRegex}\s*/\s*{MonthNumRegex}((\s+|\s*,\s*|\s+del\s+){DateYearRegex})?{BaseDateTime.CheckDecimalRegex}\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractorA: !nestedRegex
  def: \b({DateYearRegex}\s*[/\\\-]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-]\s*{DayRegex}|{MonthRegex}\s*[/.\-]\s*{BaseDateTime.FourDigitYearRegex}\s*[/.\-]\s*{DayRegex}|{DayRegex}\s*[/.\-]\s*{BaseDateTime.FourDigitYearRegex}\s*[/.\-]\s*{MonthRegex})(?!\s*[/\\\-\.]\s*\d+)
  references: [ DateYearRegex, MonthNumRegex, MonthRegex, DayRegex, BaseDateTime.FourDigitYearRegex ]
OfMonth: !nestedRegex
  def: (^\s*(di\s+)?){MonthRegex}
  references: [ MonthRegex ]
MonthEnd: !nestedRegex
  def: '{MonthRegex}\s*,?\s*(il)?\s*$'
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '(quest[oa]\s+)?{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
WeekDayStart: !simpleRegex
  def: ^[\.]
RangeUnitRegex: !simpleRegex
  def: \b(?<unit>l'anno|ann[oi]?|mes[ei]|settiman[ae])\b
HourNumRegex: !simpleRegex
  def: \b(?<hournum>zero|(?<=l')una|due|tre|quattro|cinque|sei|sette|otto|nove|dieci|undici|dodici|tredici|quattordici|quindici|sedici|diciassette|diciotto|diciannove|venti|ventuno|ventidue|ventitre|ventiquattro)\b
FivesRegex: !simpleRegex
  def: (?<tens>(quindici|venti(\s*cinque)?|trenta(\s*cinque)?|quaranta(\s*cinque)?|cinquanta(\s*cinque)?|dieci|cinque))\b
HourRegex: !nestedRegex
  def: \b{BaseDateTime.HourRegex}
  references: [ BaseDateTime.HourRegex ]
PeriodHourNumRegex: !simpleRegex
  def: \b(?<hour>ventuno|ventidue|ventitre|ventiquattro|zero|(?<=l')una|due|tre|quattro|cinque|sei|sette|otto|nove|dieci|undici|dodici|tredici|quattordici|quindici|sedici|diciassette|diciotto|diciannove|venti)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>uno|due|tre|quattro|cinque|sei|sette|otto|nove|dieci|undici|dodici|tredici|quattordici|quindici|sedici|diciassette|diciotto|diciannove|venti|trenta|quaranta|cinquanta)
DeltaMinuteNumRegex: !simpleRegex
  def: \b(?<deltaminnum>uno|due|tre|quattro|cinque|sei|sette|otto|nove|dieci|undici|dodici|tredici|quattordici|quindici|sedici|diciassette|diciotto|diciannove|venti|trenta|quaranta|cinquanta)\b
OclockRegex: !simpleRegex
  def: (?<oclock>in punto)
OclockPrefix: !simpleRegex
  def: (?<oclock>ore)
PmRegex: !simpleRegex
  def: \b(?<pm>(((di|del|a(l(l')?)?|nel|il|per|verso)\s+(il\s+)?)?(pomeriggio|ora di pranzo))|(((di|della|nella|a|alla|verso|la|per|in)\s+)?(la\s+)?(notte|serata|sera|mezzanotte)))\b
RangePmRegex: !simpleRegex
  def: \b(?<pm>(((di|del|a(l(l')?)?|nel|il|per|verso)\s+(il\s+)?)?(pomeriggio))|(((di|della|nella|a|alla|verso|la|per|in)\s+)?(la\s+)?(notte|serata|sera)))\b
AmRegex: !simpleRegex
  def: \b(?<am>((((la|alla|verso|per|della|di|in)\s+(la\s+)?)?(mattinata|mattina))|(((il|al|verso|per|del|di)\s+(il\s+)?)?(mattino))))\b
LunchRegex: !simpleRegex
  def: \b(ora di pranzo)\b
NightRegex: !simpleRegex
  def: \b(mezzanotte|notte)\b
LessThanOneHour: !nestedRegex
  def: (?<lth>(un\s+quarto|tre quarti?|mezz[oa]|mezz'ora|{BaseDateTime.DeltaMinuteRegex}(\s+(minut[oi]|min))?|{DeltaMinuteNumRegex}(\s+(minut[oi]|min))|(?<=(e|meno)\s+){DeltaMinuteNumRegex}))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
EngTimeRegex: !nestedRegex
  def: (?<engtime>{HourNumRegex}\s+e\s+({MinuteNumRegex}|(?<tens>venti?|trenta?|quaranta?|cinquanta?){MinuteNumRegex}))
  references: [ HourNumRegex, MinuteNumRegex ]
TimePrefix: !nestedRegex
  def: (?<prefix>(e\s+{LessThanOneHour}|{LessThanOneHour}\s+(minut[oi]|min)\s+all[e']|meno {LessThanOneHour}))
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})
  references: [ AmRegex, PmRegex, OclockRegex ]
BasicTime: !nestedRegex
  def: \b(?<basictime>{EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})
  references: [ EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
MidnightRegex: !simpleRegex
  def: (?<midnight>mezzanotte|mezza notte)
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
MorningRegex: !simpleRegex
  def: (?<morning>mattin[oa]|mattinata)
AfternoonRegex: !simpleRegex
  def: (?<afternoon>pomeriggio)
MidmorningRegex: !nestedRegex
  def: (?<midmorning>metà\s*{MorningRegex})
  references: [ MorningRegex ]
MiddayRegex: !simpleRegex
  def: (?<midday>metà\s*giornata|(12\s)?mezzogiorno)
MidafternoonRegex: !nestedRegex
  def: (?<midafternoon>metà\s*{AfternoonRegex})
  references: [ AfternoonRegex ]
MidTimeRegex: !nestedRegex
  def: (?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))
  references: [ MidnightRegex, MidmorningRegex, MidafternoonRegex, MiddayRegex ]
PrepRegex: !simpleRegex
  def: \b((\.|,)(?!\d+)|!|\?|$|circa|presso|vicino|sopra|sotto|lontano|dentro|fuori|di|del(l['oae])?|dei|degli|a|al(l['oae])?|ai|agli|da|dal(l['oae])?|dai|dagli|in|nel(l['oae])?|nei|negli|su|sul(l['oae])?|sui|sugli)\b
AtRegex: !nestedRegex
  def: \b(((?<=\b(a)\s+){MidTimeRegex}|{MidTimeRegex}\b)|((?<=\ball[e']\s*){EngTimeRegex}\b)|((?<=\b\d+\s+all[e']\s*)({HourNumRegex}|{BaseDateTime.HourRegex})\b(?=\s*(e|{DescRegex}|{PrepRegex})\b))|((?<=([^\d\s]|^)\s*\ball[e']\s*)({HourNumRegex}|{BaseDateTime.HourRegex})\b(?![\.,]\d+)))
  references: [ EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex, DescRegex, PrepRegex ]
IshRegex: !nestedRegex
  def: \b(((poco\s+(prima|dopo)(\s+(di|dell[e']))?)|circa(\s+a(ll['e])?)?|più o meno(\s+a(ll['e])?)?)\s*(({BaseDateTime.HourRegex}|{PeriodHourNumRegex})(?!\s*({DescRegex}|[:\.,/e]\s*\d+))|mezzogiorno)|(({BaseDateTime.HourRegex}|{PeriodHourNumRegex})(?!\s*({DescRegex}|[:\.,/e]\s*\d+))(\s+circa)|mezzogiorno(\s+circa)|verso\s+mezzogiorno))\b
  references: [ BaseDateTime.HourRegex, PeriodHourNumRegex, DescRegex ]
TimeUnitRegex: !simpleRegex
  def: (\b\d+([\.,]\d*)?|\b)(?<unit>or(a|(?<plural>e))|(minut|second)(o|(?<plural>i))|h|(hr|min|sec)(?<plural>s)?)\b
RestrictedTimeUnitRegex: !simpleRegex
  def: (?<unit>ore|minuti)\b
ConnectNumRegex: !nestedRegex
  def: '{BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\s*{DescRegex}'
  references: [ BaseDateTime.HourRegex, DescRegex ]
AmbiguousRangeModifierPrefix: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
NumberEndingPattern: !nestedRegex
  def: ^(\s+(?<meeting>riunione|appuntamento|conferenza|chiamata|chiamata skype)\s+all['e]\s*(?<newTime>{PeriodHourNumRegex}|{HourRegex})((\.)?$|(\.,|,|!|\?)))
  references: [PeriodHourNumRegex, HourRegex]
TimeRegex1: !nestedRegex
  def: (((((?<=\b(da|al)?(le|l'|ore)\s*)({EngTimeRegex}))|((?<=\b(da|al)?(le|l'|ore)\s*)({HourNumRegex}|{BaseDateTime.HourRegex})(?![\.,]\d+)(?=\s*({PrepRegex}))))|(({TimePrefix}\s+)({EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}))|(({EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\s+{TimePrefix}))((\s*{DescRegex})|\b))
  references: [ TimePrefix, EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex, PrepRegex ]
TimeRegex2: !nestedRegex
  def: (t)?({BaseDateTime.HourRegex})(\s*)?:(\s*)?{BaseDateTime.MinuteRegex}((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?((\s*{DescRegex})|\b)
  references: [ BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  def: \b{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})(\s+{TimePrefix})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  def: \b({BasicTime}(\s*{DescRegex})?(\s+{TimePrefix})?(\s*{DescRegex})?\s+{TimeSuffix}|{OclockPrefix}\s+{BasicTime}(\s*{DescRegex})?(\s+{TimePrefix})?(\s*{DescRegex})?)\b
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix, OclockPrefix]
TimeRegex5: !nestedRegex
  def: \b(({BasicTime}\s*{DescRegex}(\s+{TimePrefix})?)|({BasicTime}(\s+{TimePrefix})((\s*{DescRegex})|\b))|((?<=\b(da|al)?(le|l'|ore)\s*)(\b(?<basictime>{EngTimeRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?)|\b(?<basictime>{HourNumRegex}|{BaseDateTime.HourRegex})(?![\.,]\d+)(?=\s*({PrepRegex})\b))))
  references: [ TimePrefix, BasicTime, DescRegex, PrepRegex, EngTimeRegex, HourNumRegex,  BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
TimeRegex6: !nestedRegex
  def: '({BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}|{OclockPrefix}\s+{BasicTime}(\s*{DescRegex})?)\b'
  references: [ BasicTime, DescRegex, TimeSuffix, OclockPrefix]
TimeRegex7: !nestedRegex
  def: \b{TimeSuffix}\s+d?all[e']\s*{BasicTime}(\s+{TimePrefix})?((\s*{DescRegex})|\b)
  references: [ TimeSuffix, BasicTime, TimePrefix, DescRegex ]
TimeRegex8: !nestedRegex
  def: \b({TimeSuffix}|{OclockPrefix})\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffix, BasicTime, DescRegex, OclockPrefix ]
TimeRegex9: !nestedRegex
  def: \b{PeriodHourNumRegex}(\s+e)\s+{FivesRegex}((\s*{DescRegex})|\b)
  references: [ PeriodHourNumRegex, FivesRegex, DescRegex ]
TimeRegex10: !nestedRegex
  def: (\b{TimePrefix}\s+)?{BaseDateTime.HourRegex}(\s*h\s*){BaseDateTime.MinuteRegex}(\s*{DescRegex})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegexWithDotConnector: !nestedRegex
  def: ({BaseDateTime.HourRegex}(\s*\.\s*){BaseDateTime.MinuteRegex})
  references: [ BaseDateTime.HourRegex, BaseDateTime.MinuteRegex ]
FirstTimeRegexInTimeRange: !nestedRegex
  def: \b{TimeRegexWithDotConnector}(\s*{DescRegex})?
  references: [ TimeRegexWithDotConnector, DescRegex ]
HourRegex: !nestedRegex
  def: \b{BaseDateTime.HourRegex}
  references: [ BaseDateTime.HourRegex ]
PeriodDescRegex: !simpleRegex
  def: (?<desc>pm|am|p\.m\.|a\.m\.)
PeriodPmRegex: !simpleRegex
  def: \b(?<pm>(nel|questo)\s+pomeriggio|(questa|di)\s+sera|(durante\s+la|in)\s+serata|nella\s+notte)\b
PeriodAmRegex: !simpleRegex
  def: \b(?<am>al mattino|alla mattina|di mattina|in mattinata)\b
PureNumFromTo: !nestedRegex
  def: (((?<leftDesc>{PmRegex}|{AmRegex})\s*da(ll[e'])?\s*({HourRegex}|{PeriodHourNumRegex})\s*{TillRegex}\s*({HourRegex}|{PeriodHourNumRegex}))|((?<!(dell[e']|dal)\s*)|da(ll[e'])?\s*)(({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex}))?\s*{TillRegex}\s*({HourRegex}|{PeriodHourNumRegex})\s*(?<rightDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex})?))
  references: [ HourRegex, PeriodHourNumRegex, PeriodDescRegex, TillRegex, PmRegex, AmRegex ]
PureNumBetweenAnd: !nestedRegex
  def: ([tf]ra(\s+l[e'])?\s*)({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex}))?\s*{RangeConnectorRegex}\s*({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex}))?
  references: [ HourRegex, PeriodHourNumRegex, PeriodDescRegex, PmRegex, AmRegex, RangeConnectorRegex ]
SpecificTimeFromTo: !nestedRegex
  def: (da(ll[e'])?\s*)(?<time1>(({TimeRegex2}|{FirstTimeRegexInTimeRange})|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{TillRegex}\s*(?<time2>(({TimeRegex2}|{TimeRegexWithDotConnector}(?<rightDesc>\s*{DescRegex}))|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?))
  references: [ TimeRegex2, FirstTimeRegexInTimeRange, TimeRegexWithDotConnector, TillRegex, HourRegex, PeriodHourNumRegex, DescRegex ]
SpecificTimeBetweenAnd: !nestedRegex
  def: ([tf]ra(\s+l[e'])?\s*)(?<time1>(({TimeRegex2}|{FirstTimeRegexInTimeRange})|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{RangeConnectorRegex}\s*(?<time2>(({TimeRegex2}|{TimeRegexWithDotConnector}(?<rightDesc>\s*{DescRegex}))|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?))
  references: [ TimeRegex2, FirstTimeRegexInTimeRange, TimeRegexWithDotConnector, RangeConnectorRegex, HourRegex, PeriodHourNumRegex, DescRegex ]
PrepositionRegex: !simpleRegex
  def: (?<prep>^(,\s*)?(a(l(l['e])?)?|il|la|di|del(l[ae'])?)$)
TimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>(((((il|la|in|a(l(la)?)?|nel(la)?|di)\s+)?(((mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata)(?<early>\s+presto)|(?<early>prim[ao]\s+)(mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata))|((mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata)(?<late>\s+(tardi|inoltrat[oa]|fonda))|(?<late>tard[oa]\s+)?(mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata)))))|(in\s+giornata|durante\s+il\s+giorno|(durante\s+le|nelle)\s+ore\s+d[i']\s*ufficio)))\b
SpecificTimeOfDayRegex: !nestedRegex
  def: \b(di\s+)?(({RelativeRegex}\s+{TimeOfDayRegex})|({TimeOfDayRegex}\s*({NextSuffixRegex}|{PastSuffixRegex}))|(stamattina|stasera|stanotte))\b
  references: [ TimeOfDayRegex, RelativeRegex, NextSuffixRegex, PastSuffixRegex ]
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?)\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
NowRegex: !simpleRegex
  def: \b(?<now>(proprio\s+)?(adesso|ora(?!\s+(di|del(l[aeo'])?|degli|\d+|x))|in\s+questo\s+momento)|il prima possibile|asap|recentemente|precedentemente)\b
SuffixRegex: !simpleRegex
  def: ^\s*\b((in|nel(la)?|al(la)?|di)\s+)?(mattin[oa]|mattinata|pomeriggio|sera|serata|notte|nottata)\b
DateTimeTimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>mattin[oa]|mattinata|pomeriggio|sera|serata|notte|nottata)\b
DateTimeSpecificTimeOfDayRegex: !nestedRegex
  def: \b(di\s+)?(({RelativeRegex}\s+{DateTimeTimeOfDayRegex})|({DateTimeTimeOfDayRegex}\s+({NextSuffixRegex}|{PastSuffixRegex}))|stamattina|stasera|stanotte)\b
  references: [ DateTimeTimeOfDayRegex, RelativeRegex, NextSuffixRegex, PastSuffixRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?(in|nel(la)?|di|del(la)?\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ DateTimeSpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: ({DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+((intorno\s+)?(a(ll[e'])?)|verso\s+l[e']))?\s*$)
  references: [ DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: ({HourNumRegex}|{HourRegex})\s*(,\s*)?(in|nel(la)?|di|del(la)?\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ HourNumRegex, HourRegex, DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: ({DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(all['e]|verso\s+l['e]))?\s*({HourNumRegex}|{BaseDateTime.HourRegex}))
  references: [ DateTimeSpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
SpecificEndOfRegex: !simpleRegex
  def: (alla\s+)?fine\s+(di|del(l['a])?)\s*$
UnspecificEndOfRegex: !simpleRegex
  def: (\b(a|((al)?la)\s+))?((fine\s+(della\s+)?giornata))\b
UnspecificEndOfRangeRegex: !simpleRegex
  def: \b(fine\s*(dell')?anno)\b
PeriodTimeOfDayRegex: !simpleRegex
  def: \b(((il|la|in|a(l(la)?)?|nel(la)?|di)\s+)?(((?<timeOfDay>mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata)(?<early>\s+presto)|(?<early>prim[ao]\s+)(?<timeOfDay>mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata))|((?<timeOfDay>mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata)(?<late>\s+(tardi|inoltrat[oa]|fonda))|(?<late>tard[oa]\s+)?(?<timeOfDay>mattin[ao]|mattinata|pomeriggio|sera|serata|notte|nottata))))\b
PeriodSpecificTimeOfDayRegex: !nestedRegex
  def: \b(di\s+)?(({RelativeRegex}\s+{PeriodTimeOfDayRegex})|sta(mattina|sera|notte))\b
  references: [ PeriodTimeOfDayRegex, RelativeRegex ]
PeriodTimeOfDayWithDateRegex: !nestedRegex
 def: \b({TimeOfDayRegex}(\s+(il|l'|del(l')?|di))?)\b
 references: [ TimeOfDayRegex]
LessThanRegex: !simpleRegex
  def: \b(meno\s+di)\b
MoreThanRegex: !simpleRegex
  def: \b(più\s+di)\b
DurationUnitRegex: !nestedRegex
  def: (?<unit>{DateUnitRegex}|or[ae]|hrs?|h|minut[oi]|mins?|second[oi]|secs?)\b
  references: [ DateUnitRegex ]
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*e\s+(un\s+)?(?<suffix_num>mezzo|mezza|quarto))
PeriodicRegex: !simpleRegex
  def: \b(?<periodic>giornalier[oaei]|giornalmente|quotidian[oaei]|quotidianamente|mensil[ei]|mensilmente|settimanal[ei]|settimanalmente|bisettimanal[ei]|annual[ei]|annualmente)\b
EachUnitRegex: !nestedRegex
  def: (?<each>(ogni|tutte\s+le|tutti\s+(gl)?i|una\s+volta\s+(al(l')?|l'))(?<other>\s+altro)?\s*{DurationUnitRegex})
  references: [ DurationUnitRegex ]
EachPrefixRegex: !simpleRegex
  def: \b(?<each>(ogni|tutte\s+le|tutti\s+(gl)?i|una\s+volta\s+(al(l')?|l'))\s*$)
SetEachRegex: !simpleRegex
  def: \b(?<each>(ogni|tutte\s+le|tutti\s+(gl)?i|una\s+volta\s+(al(l')?|l'))\s*)
SetLastRegex: !simpleRegex
  def: (?<last>prossim[oaei]|seguent[ei]|in\s+arrivo|quest[oaei]|ultim[oaei]|passat[oaei]|scors[oaei]|precedent[ei]|corrent[ei])
EachDayRegex: !simpleRegex
  def: ^\s*(ogni|tutti\s+i)\s+giorn[oi]\b
DurationFollowedUnit: !nestedRegex
  def: (^\s*{DurationUnitRegex}\s+{SuffixAndRegex})|(^\s*{SuffixAndRegex}?(\s+|-)?{DurationUnitRegex})
  references: [ SuffixAndRegex, DurationUnitRegex ]
NumberCombinedWithDurationUnit: !nestedRegex
  def: \b(?<num>\d+([\.,]\d*)?)(-)?\s*{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AnUnitRegex: !nestedRegex
  def: (((?<half>mezz[oa]?|metà)[-']?|un[oa']?|un altro|un'altra)\s*{DurationUnitRegex})
  references: [ DurationUnitRegex ]
DuringRegex: !simpleRegex
  def: \b(per|durante)\s+(il|l[a'])\s+(?<unit>anno|mese|settimana|giorno)\b
AllRegex: !simpleRegex
  def: \b(?<all>(tutt[oa](\s+(il|l[a']))?|inter[oa])(\s*|-)(?<unit>anno|mese|settimana|giorno)|(?<unit>anno|mese|settimana|giorno)\s+inter[oa])\b
HalfRegex: !simpleRegex
  def: \b((?<half>(metà|mezz[oa])\s+(?<unit>anno|mese|settimana|giorno|ora))|(?<half>(?<unit>semestr[ei])))\b
ConjunctionRegex: !simpleRegex
  def: \b((e(\s+per)?)|con)\b
HolidayRegex1: !nestedRegex
  def: \b(?<holiday>capodanno cinese|cenone di capodanno|veglione di capodanno|(la )?vigilia di capodanno|capodanno|mercoledì delle ceneri|le ceneri|martedì grasso|primo dell'anno|festa del papà|pesce d'aprile|vigilia di natale|la vigilia|giorno di natale|natale|halloween|domenica di pasqua|pasqua|lunedì dell'angelo)(\s+((del|di)\s+)?({YearRegex}|{RelativeRegex}\s*anno))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex2: !nestedRegex
  def: \b(?<holiday>giorno dei morti|i morti|tutti i santi|i santi|giorno dell'independenza|((giorno|festa) del)?la liberazione|festa della repubblica|festa del lavoro|festa dei lavoratori)(\s+((del|di)\s+)?({YearRegex}|{RelativeRegex}\s*anno))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex3: !nestedRegex
  def: (?<holiday>(giorno\s+((di|del(la)?)\s+)?)?(pasqua|quaresima|memoria|ringraziamento|san patrizio|festa della mamma|festa delle donne|festa della donna|san valentino|ferragosto))(\s+((del|di)\s+)?({YearRegex}|{RelativeRegex}\s*anno))?
  references: [ YearRegex, RelativeRegex ]
DateTokenPrefix: 'il '
TimeTokenPrefix: 'alle '
TokenBeforeDate: 'il '
TokenBeforeTime: 'alle '
AMTimeRegex: !simpleRegex
  def: (?<am>mattin[oa]|mattinata|notte|nottata)
PMTimeRegex: !simpleRegex
  def: \b(?<pm>pomeriggio|sera|serata)\b
BeforeRegex: !simpleRegex
  def: \b(prima(\s+(di|del(l['aoei])?|degli|dei))?|entro\s*(l['aoe]|il?|gli|i)?|(non\s+dopo\s+(il?|l[oae']|gli)|non\s+più\s+tardi\s+(di|del(l['aoei])?|degli|dei)|termina(no)?(\s+con)?(\s+(il?|l[oae']|gli))?|precedente\s+a((l(l['aoe])?)|gli|i)?|fino\s+a((l(l['aoe])?)|gli|i)?))\b
BeforeRegex2: !simpleRegex
  def: \b(entro\s*(l['aoe]|il?|gli|i)?)\b
AfterRegex: !simpleRegex
  def: \b((?<!non\s+)dopo\s+(il?|l[oae']|gli|i)(?!\s+o uguale a)|(?<!non\s+)(dopo|più\s+tardi)\s+d(i|el(l[oae'])?|ei|egli)|(?<!non\s+)dopo(?!\s+o uguale a))\b
SinceRegex: !simpleRegex
  def: \b(a partire\s+da(l(l[aoe'])?|i|gli)?|dopo\s+(il?|l[aoe']|gli)|da(l(l[aoe'])?|i|gli)?(?!(.+(\s+(fino\s+)?a(gli|i|l(l[aoe'])?)?\b)|\s*\d+\s*\-\s*\d+(?!(\s*-))))|(dopo|successiv[oaei])\s+o\s+uguale\s+a((l(l['aoe])?)|gli|i)?)\b
AroundRegex: !simpleRegex
  def: (\b(intorno\s+a(l(l['aoe])?|gli|i)?|verso\s+(il|l[aoe']|gli|i))\s*\b)
AgoPrefixRegex: !simpleRegex
  def: \b(di)\b
LaterRegex: !simpleRegex
  def: \b(dopo|da\s+adesso|da\s+questo\s+momento)\b
AgoRegex: !simpleRegex
  def: \b(fa|prima|addietro)\b
BeforeAfterRegex: !simpleRegex
  def: ^[.]
InConnectorRegex: !simpleRegex
  def: \b(in|tra|fra|a)\b
SinceYearSuffixRegex: !nestedRegex
  def: (^\s*{SinceRegex}\s*(ann[oi]\s*)?({DateYearRegex}|{FullTextYearRegex}))
  references: [ SinceRegex, DateYearRegex, FullTextYearRegex ]
WithinNextPrefixRegex: !nestedRegex
  def: \b(entro(\s+(?<next>{NextPrefixRegex}))?)\b
  references: [ NextPrefixRegex ]
TodayNowRegex: !simpleRegex
  def: \b(oggi|adesso)\b
MorningStartEndRegex: !nestedRegex
  def: (^(((di\s+|questa\s+|sta)?mattin[oa]|mattinata)|{AmDescRegex}))|((((di\s+|questa\s+|sta)?mattin[oa]|mattinata)|{AmDescRegex})$)
  references: [ AmDescRegex ]
AfternoonStartEndRegex: !nestedRegex
  def: (^((((di|al)\s+|questo\s+|sto)?pomeriggio)|{PmDescRegex}))|(((((di|il)\s+|questo\s+|sto)?pomeriggio)|{PmDescRegex})$)
  references: [ PmDescRegex ]
EveningStartEndRegex: !simpleRegex
  def: (^((di\s+|questa\s+|sta)?sera|serata))|(((di\s+|questa\s+|sta)?sera|serata)$)
NightStartEndRegex: !simpleRegex
  def: (^((di\s+|questa\s+|sta)?notte|nottata))|(((di\s+|questa\s+|sta)?notte|nottata)$)
InexactNumberRegex: !simpleRegex
  def: \b(un\s+po'\s+di|alcun[ei]|qualche|parecchie?|divers[ie]|molt[oaei]|poc[oa]|poch[ei])\b
#The following regex is used in DurationExtractor, it allows to extract patterns such as "in the next hours" where the InexactNumberRegex match is missing (but a "next/previous" element is present)
InexactNumberUnitRegex: !nestedRegex
  def: \b((({InexactNumberRegex}\s+|(?<=(prossim[ei]|scors[ei]|ultim[ei])\s+)){DurationUnitRegex})|({DurationUnitRegex}(?=\s+(seguenti|successiv[ei]|passat[ei]|precedent[ei]))))\b
  references: [InexactNumberRegex, DurationUnitRegex]
#The following regex is used in DurationParser, it allows to parse patterns such as "in the next hours" where the InexactNumberRegex match is missing
InexactNumberUnitRegex2: !nestedRegex
  def: \b({InexactNumberRegex}\s+{DurationUnitRegex}|(?<unit>decenni|anni|mesi|settimane|giorni|ore|minuti|secondi))
  references: [InexactNumberRegex, DurationUnitRegex]
RelativeTimeUnitRegex: !nestedRegex
  def: (((({ThisPrefixRegex}|{NextPrefixRegex}|{PreviousPrefixRegex})\s+{TimeUnitRegex})|({ThisPrefixRegex}\s+)?{TimeUnitRegex}\s+({NextSuffixRegex}|{PastSuffixRegex}))|\b(le|i|miei?)\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, NextSuffixRegex, PastSuffixRegex, ThisPrefixRegex, TimeUnitRegex, RestrictedTimeUnitRegex]
RelativeDurationUnitRegex: !nestedRegex
  def: (((?<=({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+)({DurationUnitRegex}))|(({DurationUnitRegex})(?=\s+({NextSuffixRegex}|{PastSuffixRegex}|{ThisPrefixRegex})))|((le|i|miei?))\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, NextSuffixRegex, PastSuffixRegex, ThisPrefixRegex, DurationUnitRegex, RestrictedTimeUnitRegex]
ReferenceDatePeriodRegex: !simpleRegex
  def: \b((quel(l[a'])?)|((l[oa]\s+)?stess[oa]))\s+(?<duration>settimana|mese|anno|decennio|finesettimana|weekend)\b
ConnectorRegex: !simpleRegex
  def: ^\s*(-|,|t|per l[e']|all[e']|intorno all[e']|verso l[e'])\s*$
ConnectorAndRegex: !simpleRegex
  def: \b(e(\s+(il?|l[oae']|gli))?)\b.*
FromRegex: !simpleRegex
  def: \b(da(l(l[oae'])?|i|gli)?)$
FromRegex2: !simpleRegex
  def: \b(dopo(\s*l[oae']|il?)?)$
FromToRegex: !simpleRegex
  def: \b(da(l(l[oae'])?|i|gli)?).+(a(l(l[oae'])?|i|gli)?)\b.+
SingleAmbiguousMonthRegex: !simpleRegex
  def: (march)
SingleAmbiguousTermsRegex: !simpleRegex
  def: (?<!l')una\b
UnspecificDatePeriodRegex: !simpleRegex
  def: ^(settimana|finesettimana|weekend|mese|anno)$
PrepositionSuffixRegex: !simpleRegex
  def: \b(il|al?|del|di|dal?|fino al?)$
FlexibleDayRegex: !nestedRegex
  def: (?<DayOfMonth>([A-Za-z]+\s)?({WrittenDayRegex}|{DayRegex}))
  references: [WrittenDayRegex, DayRegex ]
ForTheRegex: !nestedRegex
  def: \b((((?<=per\s+il\s+){FlexibleDayRegex})|((?<!(\b{MonthRegex},?|\bper)\s+(il\s+|l'))(?<=(il\s+|l')){FlexibleDayRegex}))(?<end>\s*(,|\.|!|\?|$)))
  references: [FlexibleDayRegex, MonthRegex ]
WeekDayAndDayOfMonthRegex: !nestedRegex
  def: \b{WeekDayRegex},?\s+((il\s+)?{FlexibleDayRegex})\b(?!\s+{MonthRegex}\b)
  references: [WeekDayRegex, FlexibleDayRegex, MonthRegex]
WeekDayAndDayRegex: !nestedRegex
  def: \b{WeekDayRegex}\s*,?\s+(?!(il|l')){DayRegex}(?!([-:]|(\s+({AmDescRegex}|{PmDescRegex|{OclockRegex}}))))\b
  references: [WeekDayRegex, DayRegex, AmDescRegex, PmDescRegex, OclockRegex]
RestOfDateRegex: !simpleRegex
  def: \bresto\s+((di|del(l[a'])?)\s*)?((quest[oa']|corrente|mia)\s*)?(?<duration>settimana|mese|anno|decennio)(\s+corrente)?\b
RestOfDateTimeRegex: !simpleRegex
  def: \bresto\s+((di|del(la)?)\s+)?((quest[oa]|corrente|mi[oa])\s+)?(?<unit>giorn(o|ata))(\s+corrente)?\b
SuffixAfterRegex: !simpleRegex
  def: \b(((a)\s)?(o|e)\s+(sopra|dopo|più\s+tardi|più\s+grande)(?!\s+di))\b
LaterEarlyPeriodRegex: !nestedRegex
  def: \b((({PrefixPeriodRegex})(\s+(di|del(l[ao'])?))?)\s*\b\s*(?<suffix>{OneWordPeriodRegex})|({UnspecificEndOfRangeRegex}))\b
  references: [PrefixPeriodRegex, OneWordPeriodRegex, UnspecificEndOfRangeRegex]
WeekWithWeekDayRangeRegex: !nestedRegex
  def: \b((?<week>({NextPrefixRegex}|{PreviousPrefixRegex}|questa)\s+settimana)((\s+[tf]ra\s+{WeekDayRegex}\s+e\s+{WeekDayRegex})|(\s+da\s+{WeekDayRegex}\s+a\s+{WeekDayRegex})))\b
  references: [WeekDayRegex, NextPrefixRegex, PreviousPrefixRegex]
GeneralEndingRegex: !simpleRegex
  def: ^\s*((\.,)|\.|,|!|\?)?\s*$
MiddlePauseRegex: !simpleRegex
  def: \s*(,)\s*
DurationConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+|e|,)\s*$
PrefixArticleRegex: !simpleRegex
  def: \b(il?|l[oae']|gli)\s*
OrRegex: !simpleRegex
  def: \s*(o|oppure)\s*
YearPlusNumberRegex: !nestedRegex
  def: \b(anno\s+((?<year>(\d{3,4}))|{FullTextYearRegex}))\b
  references: [ FullTextYearRegex ]
NumberAsTimeRegex: !nestedRegex
  def: \b({EngTimeRegex}|{PeriodHourNumRegex}|{BaseDateTime.HourRegex})\b
  references: [ EngTimeRegex, PeriodHourNumRegex, BaseDateTime.HourRegex ]
TimeBeforeAfterRegex: !nestedRegex
  def: \b(((?<=\b(prima (di|dell[e'])|non prima (di|dell[e'])|per(\s+l[e'])?|dopo(\s+l[e'])?)\s*)({EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
DateNumberConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>(,)?\s+(il|all[e']|(verso|per) l[e']|intorno all[e']))\s*$
DateAfterRegex: !simpleRegex
  def: \b((e|o)\s+(dopo|passato|oltre))\b
YearPeriodRegex: !nestedRegex
  def: (((dal|durante|nel|[tf]ra)\s+(il\s+)?)?{YearRegex}\s*{TillRegex}\s*{YearRegex})
  references: [ YearRegex, TillRegex ]
FutureSuffixRegex: !simpleRegex
  def: \b(((in|nel)\s+)?(futuro|seguito))|(da\s+questo\s+momento)\b
ModPrefixRegex: !nestedRegex
  def: \b({RelativeRegex}|{AroundRegex}|{BeforeRegex}|{AfterRegex}|{SinceRegex})\b
  references: [RelativeRegex, AroundRegex, BeforeRegex, AfterRegex, SinceRegex ]
ModSuffixRegex: !nestedRegex
  def: \b({AgoRegex}|{LaterRegex}|{BeforeAfterRegex}|{FutureSuffixRegex}|{PastSuffixRegex})\b
  references: [AgoRegex, LaterRegex, BeforeAfterRegex, FutureSuffixRegex, PastSuffixRegex]
ComplexDatePeriodRegex: !nestedRegex
  def: (((da(l(l[aeo'])?|i)?|durante|in|nel(l[aeo'])?|negli)\s*)?(?<start>.+)\s*({TillRegex})\s*(?<end>.+)|(([tf]ra)\s+)(?<start>.+)\s*({RangeConnectorRegex})\s*(?<end>.+))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]
AmbiguousPointRangeRegex: !simpleRegex
  def: ^(mar)$
UnitMap: !dictionary
  types: [ string, string ]
  entries:
    decenni: 10Y
    decennio: 10Y
    anni: Y
    anno: Y
    semestre: Y
    semestri: Y
    mesi: MON
    mese: MON
    settimane: W
    settimana: W
    giorni: D
    giorno: D
    giornata: D
    ore: H
    ora: H
    hrs: H
    hr: H
    h: H
    minuti: M
    minuto: M
    mins: M
    min: M
    secondi: S
    secondo: S
    secs: S
    sec: S
UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    decenni: 315360000
    decennio: 315360000
    anni: 31536000
    anno: 31536000
    semestre: 31536000
    semestre: 31536000
    mesi: 2592000
    mese: 2592000
    settimane: 604800
    settimana: 604800
    giorni: 86400
    giorno: 86400
    ore: 3600
    ora: 3600
    hrs: 3600
    hr: 3600
    h: 3600
    minuti: 60
    minuto: 60
    mins: 60
    min: 60
    secondi: 1
    secondo: 1
    secs: 1
    sec: 1
SpecialYearPrefixesMap: !dictionary
  types: [ string, string ]
  entries:
    fiscale: FY
    scolastico: SY
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    primavera: SP
    estate: SU
    autunno: FA
    inverno: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int]
  entries:
    primo: 1
    prima: 1
    secondo: 2
    seconda: 2
    terzo: 3
    terza: 3
    quarto: 4
    quarta: 4
    quinto: 5
    quinta: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries: 
    lunedì: 1
    martedì: 2
    mercoledì: 3
    giovedì: 4
    venerdì: 5
    sabato: 6
    sabati: 6
    domenica: 0
    domeniche: 0
    lun: 1
    mar: 2
    mer: 3
    gio: 4
    ven: 5
    sab: 6
    dom: 0
    monday: 1
    tuesday: 2
    wednesday: 3
    thursday: 4
    friday: 5
    saturday: 6
    sunday: 0
    mon: 1
    tue: 2
    tues: 2
    wed: 3
    wedn: 3
    weds: 3
    thu: 4
    thur: 4
    thurs: 4
    fri: 5
    sat: 6
    sun: 0
MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'gennaio': 1
    'febbraio': 2
    'marzo': 3
    'aprile': 4
    'maggio': 5
    'giugno': 6
    'luglio': 7
    'agosto': 8
    'settembre': 9
    'ottobre': 10
    'novembre': 11
    'dicembre': 12
    'gen': 1
    'feb': 2
    'mar': 3
    'apr': 4
    'mag': 5
    'giu': 6
    'lug': 7
    'ago': 8
    'set': 9
    'sett': 9
    'ott': 10
    'nov': 11
    'dic': 12
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    'zero': 0
    'uno': 1
    'un': 1
    'una': 1
    'due': 2
    'tre': 3
    'quattro': 4
    'cinque': 5
    'sei': 6
    'sette': 7
    'otto': 8
    'nove': 9
    'dieci': 10
    'undici': 11
    'dodici': 12
    'tredici': 13
    'quattordici': 14
    'quindici': 15
    'sedici': 16
    'diciassette': 17
    'diciotto': 18
    'diciannove': 19
    'venti': 20
    'ventuno': 21
    'ventidue': 22
    'ventitre': 23
    'ventiquattro': 24
    'venticinque': 25
    'ventisei': 26
    'ventisette': 27
    'ventotto': 28
    'ventinove': 29
    'trenta': 30
    'trentuno': 31
    'trentadue': 32
    'trentatre': 33
    'trentaquattro': 34
    'trentacinque': 35
    'trentasei': 36
    'trentasette': 37
    'trentotto': 38
    'trentanove': 39
    'quaranta': 40
    'quarantuno': 41
    'quarantadue': 42
    'quarantatre': 43
    'quarantaquattro': 44
    'quarantacinque': 45
    'quarantasei': 46
    'quarantasette': 47
    'quarantotto': 48
    'quarantanove': 49
    'cinquanta': 50
    'cinquantuno': 51
    'cinquantadue': 52
    'cinquantatre': 53
    'cinquantaquattro': 54
    'cinquantacinque': 55
    'cinquantasei': 56
    'cinquantasette': 57
    'cinquantotto': 58
    'cinquantanove': 59
    'sessanta': 60
    'sessantuno': 61
    'sessantadue': 62
    'sessantatre': 63
    'sessantaquattro': 64
    'sessantacinque': 65
    'sessantasei': 66
    'sessantasette': 67
    'sessantotto': 68
    'sessantanove': 69
    'settanta': 70
    'settantuno': 71
    'settantadue': 72
    'settantatre': 73
    'settantaquattro': 74
    'settantacinque': 75
    'settantasei': 76
    'settantasette': 77
    'settantotto': 78
    'settantanove': 79
    'ottanta': 80
    'ottantuno': 81
    'ottantadue': 82
    'ottantatre': 83
    'ottantaquattro': 84
    'ottantacinque': 85
    'ottantasei': 86
    'ottantasette': 87
    'ottantotto': 88
    'ottantanove': 89
    'novanta': 90
    'novantuno': 91
    'novantadue': 92
    'novantatre': 93
    'novantaquattro': 94
    'novantacinque': 95
    'novantasei': 96
    'novantasette': 97
    'novantotto': 98
    'novantanove': 99
    'cento': 100
DayOfMonth: !dictionary
  types: [ string, int ]
  entries:
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '11': 11
    '12': 12
    '12': 12
    '13': 13
    '13': 13
    '14': 14
    '15': 15
    '16': 16
    '17': 17
    '18': 18
    '19': 19
    '20': 20
    '21': 21
    '22': 22
    '23': 23
    '24': 24
    '25': 25
    '26': 26
    '27': 27
    '28': 28
    '29': 29
    '30': 30
    '31': 31
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries: 
    mezzo: 0.5
    mezza: 0.5
    metà: 0.5
    quarto: 0.25
    quarti: 0.25
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries: 
    easterday: [ pasqua, giornodipasqua, domenicadipasqua ]
    eastermonday: [ lunedidell'angelo ]
    fathersday: [ festadelpapà ]
    mothersday: [ festadellamamma ]
    memorialday: [ giornodellamemoria ]
    mardigras: [ martedigrasso ]
    ashwednesday: [ mercoledidelleceneri, leceneri ]
    allsaintsday: [ tuttiisanti, isanti ]
    allsoulsday: [ giornodeimorti, imorti ]
    femaleday: [ festadelladonna, festadelledonne ]
    ferragosto: [ ferragosto ]
    christmas: [ giornodinatale, natale ]
    christmaseve: [ vigiliadinatale, lavigilia ]
    newyear: [ capodannocinese, capodanno ]
    valentinesday: [ sanvalentino ]
    stpatrickday: [ giornodisanpatrizio ]
    aprilfools: [ pescedaprile ]
    labourday: [ festadeilavoratori, festadellavoro ]
    independenceday: [ giornodell'indipendenza ]
    liberationday: [ giornodellaliberazione, festadellaliberazione, laliberazione ]
    republicday: [ festadellarepubblica ]
    halloweenday: [ halloween ]
    newyeareve: [ cenonedicapodoanno, veglionedicapodanno, lavigiliadicapodanno, vigiliadicapodanno ]
    thanksgiving: [ giornodelringraziamento, ringraziamento ]
WrittenDecades: !dictionary
  types: [ string, int ]
  entries:
    'dieci': 10
    'venti': 20
    'trenta': 30
    'quaranta': 40
    'cinquanta': 50
    'sessanta': 60
    'settanta': 70
    'ottanta': 80
    'novanta': 90
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  entries:
    'questo secolo': 2000
    'duemila': 2000
DefaultLanguageFallback: DMY
DurationDateRestrictions: []
AmbiguityFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    '^\d{4}$': '(\d\.\d{4}|\d{4}\.\d)'
    '\bgiorno|pomeriggio|sera|notte\b': '\b(buona?\s*(giorno|pomeriggio|sera|notte))\b'
    '^(apr|ago|dic|feb|gen|lug|giu|mar|mag|nov|ott|sett?)$': '([$%£&!?@#])(apr|ago|dic|feb|gen|lug|giu|mar|mag|nov|ott|sett?)|(apr|ago|dic|feb|gen|lug|giu|mar|mag|nov|ott|sett?)([$%£&@#])'
# For TimeOfDay resolution
MorningTermList: !list
  types: [ string ]
  entries: 
    - mattino
    - mattina
    - mattine
    - mattinata
AfternoonTermList: !list
  types: [ string ]
  entries: 
    - pomeriggio
    - pomeriggi
    - dopo pranzo
EveningTermList: !list
  types: [ string ]
  entries: 
    - sera
    - sere
    - serata
DaytimeTermList: !list
  types: [ string ]
  entries: 
    - giorno
    - dì
    - giornata
NightTermList: !list
  types: [ string ]
  entries: 
    - notte
    - notti
    - nottata
SameDayTerms: !list
  types: [ string ]
  entries: 
    - oggi
PlusOneDayTerms: !list
  types: [ string ]
  entries: 
    - domani
    - giorno dopo
MinusOneDayTerms: !list
  types: [ string ]
  entries: 
    - ieri
    - giorno prima
PlusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - dopodomani
    - domani l'altro
MinusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - l'altroieri
    - altroieri
# For DatePeriodParserConfiguration Logic
FutureStartTerms: !list
  types: [ string ]
  entries:
    - questo
    - questa
    - questi
    - queste
    - quest'
    - prossimo
    - prossima
    - prossimi
    - prossime
    - prossim'
FutureEndTerms: !list
  types: [ string ]
  entries:
    - prossimo
    - prossima
    - prossimi
    - prossime
    - prossim'
LastCardinalTerms: !list
  types: [ string ]
  entries:
    - ultimo
    - ultima
    - ultimi
    - ultime
    - ultim'
    - l'ultimo
    - l'ultima
    - l'ultimi
    - l'ultime
    - l'ultim'
MonthTerms: !list
  types: [ string ]
  entries:
    - mese
    - mesi
MonthToDateTerms: !list
  types: [ string ]
  entries:
    - dall'inizio del mese
WeekendTerms: !list
  types: [ string ]
  entries:
    - finesettimana
    - weekend
WeekTerms: !list
  types: [ string ]
  entries:
    - settimana
    - settimane
YearTerms: !list
  types: [ string ]
  entries:
    - anno
    - anni
    - annata
    - annate
YearToDateTerms: !list
  types: [ string ]
  entries:
    - dall'inizio dell'anno
    - da inizio anno
...
