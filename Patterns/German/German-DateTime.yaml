---
#ISO 639-2 Code
LangMarker: Ger
CheckBothBeforeAfter: !bool false
TillRegex: !simpleRegex
  def: (?<till>zu|bis\s*zum|zum|bis|bis\s*hin(\s*zum)?|--|-|—|——)
RangeConnectorRegex : !simpleRegex
  def: (?<and>und|--|-|—|——)
RelativeRegex: !simpleRegex
  def: \b(?<order>(über)?nächste[rns]?|kommende[rns]?|diese[rmns]?|vorletzte[snm]?|letzte[rns]?|vergangene[rns]?|vorherige[rns]?|vorige[rns]?|jetzige[rns]?|heutige[rns]?|aktuelle[rns]?|gestrige[rns]?|morgige[rns]?|de[rmsn]|das(?!\s+tag)|am)
StrictRelativeRegex: !simpleRegex
  def: \b(?<order>(über)?nächste[rns]?|kommende[rns]?|diese[rmns]?|letzte[rns]?|vergangene[rns]?|vorherige[rns]?|vorige[rns]?|jetzige[rns]?|heutige[rns]?|aktuelle[rns]?|gestrige[rns]?|morgige[rns]?)
UpcomingPrefixRegex: !simpleRegex
  def: .^
# TODO: modify below regex according to the counterpart in English
NextPrefixRegex: !nestedRegex
  def: \b((über)?nächste[rns]?|kommende[rns]?|{UpcomingPrefixRegex})\b
  references: [ UpcomingPrefixRegex ]
AfterNextPrefixRegex: !simpleRegex
  def: \bübernächste[rns]?\b
PastPrefixRegex: !simpleRegex
  def: .^
# TODO: modify below regex according to the counterpart in English
PreviousPrefixRegex: !nestedRegex
  def: \b(letzte[rns]?|vergangene[rns]?|vorherige[rns]?|vor(ige[rns]?)?|{PastPrefixRegex})\b
  references: [ PastPrefixRegex ]
ThisPrefixRegex: !simpleRegex
  def: \b(diese[rnms]?|jetzige[rns]?|heutige[rns]?|aktuelle[rns]?)\b
RangePrefixRegex: !simpleRegex
  def: (vo[nm]|zwischen)
PenultimatePrefixRegex: !simpleRegex
  def: \b(vorletzte[snm]?)\b
DayRegex: !simpleRegex
  def: (de[rmsn]\s*)?(?<day>(01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)(\.|\b))
MonthNumRegex: !simpleRegex
  def: (?<month>(01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\.?)
AmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmDescRegex})
  references: [BaseDateTime.BaseAmDescRegex]
PmDescRegex: !nestedRegex
  def: ({BaseDateTime.BasePmDescRegex})
  references: [BaseDateTime.BasePmDescRegex]
AmPmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmPmDescRegex})
  references: [BaseDateTime.BaseAmPmDescRegex]
DescRegex: !nestedRegex
  def: ({OclockRegex})
  references: [ OclockRegex ]
TwoDigitYearRegex: !nestedRegex
  def: \b(?<![$])(?<year>([0-9]\d))(?!(\s*((\:\d)|{AmDescRegex}|{PmDescRegex}|\.\d)))\b
  references: [ AmDescRegex, PmDescRegex]
FullTextYearRegex: !nestedRegex
  def: \b((?<firsttwoyearnum>{CenturyRegex})\s+(?<lasttwoyearnum>((zwanzig|dreißig|vierzig|fünfzig|sechzig|siebzig|achtzig|neunzig)\s+{WrittenNumRegex})|{WrittenNumRegex}))\b|\b(?<firsttwoyearnum>{CenturyRegex})\b
  references: [ CenturyRegex, WrittenNumRegex ]
YearRegex: !nestedRegex
  def: ({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, FullTextYearRegex ]
WeekDayRegex: !simpleRegex
  def: (?<weekday>sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag|sonnabend|(mo|di|mi|do|fr|sa|so)(\.|\b))
SingleWeekDayRegex: !simpleRegex
  def: \b(?<weekday>sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag|sonnabend|(mo|di|mi|do|fr|sa|so)(\.|\b))
RelativeMonthRegex: !nestedRegex
  def: (?<relmonth>{RelativeRegex}\s+monat(s)?)
  references: [RelativeRegex]
WrittenMonthRegex: !simpleRegex
  def: ((monat\s*)?(?<month>apr(il|\.)|aug(ust|\.)|dez(ember|\.)|feb(ruar|ber|\.)|j[äa]n(uar|ner|\.)|jul(e?i|l\.)|jun([io]|\.)|märz|mai|nov(ember|\.)|okt(ober|\.)|sept?(ember|\.)))
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>(im\s*|des\s*)?({RelativeMonthRegex}|{WrittenMonthRegex}|{MonthNumRegex}))
  references: [ RelativeMonthRegex, WrittenMonthRegex, MonthNumRegex ]
DateUnitRegex: !simpleRegex
  def: (?<unit>tg|woche(?<plural>n)?|(jahr|monat|tag)(?<plural>e)?)(s)?
HalfTokenRegex: !simpleRegex
  def: ^(halb)
QuarterToTokenRegex: !simpleRegex
  def: ^(viertel\s+vor|dreiviertel)\s*$
QuarterPastTokenRegex: !simpleRegex
  def: ^(viertel\s+nach)\s*$
ThreeQuarterToTokenRegex: !simpleRegex
  def: ^(viertel|dreiviertel\s+vor)\s*$
ThreeQuarterPastTokenRegex: !simpleRegex
  def: ^(dreiviertel\s+nach)\s*$
SimpleCasesRegex: !nestedRegex
  def: ((vom|zwischen)\s+)?({DayRegex})(\s*{MonthSuffixRegex})?\s*{TillRegex}\s*({DayRegex})(\s*{MonthSuffixRegex})?((\s+|\s*,\s*){YearRegex})?
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: ((vom|zwischen)\s*)?{MonthSuffixRegex}\s*((vom|zwischen)\s*)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: ({MonthSuffixRegex}\s+(zwischen\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?)
  references: [ MonthSuffixRegex, DayRegex, RangeConnectorRegex , YearRegex ]
BetweenRegex: !nestedRegex
  def: ((zwischen\s+)({DayRegex})(\s+{MonthSuffixRegex})?\s*{RangeConnectorRegex}\s*({DayRegex})(\s+{MonthSuffixRegex})((\s+|\s*,\s*){YearRegex})?|(zwischen\s+)({DayRegex})(\s+{MonthSuffixRegex})?\s*{RangeConnectorRegex}\s*({DayRegex})(\s+{MonthSuffixRegex})?((\s+|\s*,\s*){YearRegex})?)
  references: [ DayRegex, RangeConnectorRegex , MonthSuffixRegex, YearRegex ]
MonthWithYear: !nestedRegex
  def: \b((?<month>apr(il|\.)|aug(ust|\.)|dez(ember|\.)|feb(ruar|ber|\.)|januar|j[äa]n(ner|\.)|jul(e?i|l\.)|jun([io]|\.)|märz|mai|nov(ember|\.)|okt(ober|\.)|sept?(ember|\.))(\s*),?(\s+des)?(\s*)({YearRegex}|(?<order>nächsten|letzten|diese(s|n))\s+jahres))
  references: [ YearRegex ]
OneWordPeriodRegex: !nestedRegex
  def: \b((((im\s+)?monat\s+)?({RelativeRegex}\s*(jahr\s*(im\s*)?)?)?(?<month>apr(il|\.)|aug(ust|\.)|dez(ember|\.)|feb(ruar|ber|\.)|j[äa]n(uar|ner|\.)|jul(e?i|l\.)|jun([io]|\.)|märz|mai|nov(ember|\.)|okt(ober|\.)|sept?(ember|\.)))|(?<business>unter\s+der\s+woche)|({RelativeRegex}\s+)?((?<business>werktags|arbeitswoche)|woche(nende)?|monat(s)?|jahr|jahres)(?!(\s+\d+(?!({BaseDateTime.BaseAmDescRegex}|{BaseDateTime.BasePmDescRegex}))|\s+bis\s+heute)))\b
  references: [ RelativeRegex, AfterNextSuffixRegex ]
MonthNumWithYear: !nestedRegex
  def: ({YearRegex}(\s*)[/\-\.](\s*){MonthNumRegex})|({MonthNumRegex}(\s*)[/\-\.](\s*){YearRegex})
  references: [ YearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: (?<wom>((die|der)\s+)(?<cardinal>erste[rns]?|1\.|zweite[rns]?|2\.|dritte[rns]?|3\.|vierte[rns]?|4\.|fünfte[rns]?|5\.|letzte[rns]?)\s+woche\s+(des|diese(s|n)|im)\s+({MonthSuffixRegex}|monat(s)?))
  references: [ MonthSuffixRegex ]
WeekOfYearRegex: !nestedRegex
  def: (?<woy>((die|der)\s+)?(?<cardinal>(erste[rns]?|1\.|zweite[rns]?|2\.|dritte[rns]?|3\.|vierte[rns]?|4\.|fünfte[rns]?|5\.|letzte[rns]?)\s+woche\s+(im|diese(s|n)|\s+des)?\s+({YearRegex}|{RelativeRegex}\s+jahr(en|es|e)?)))
  references: [ YearRegex, RelativeRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterRegex: !nestedRegex
  def: ((das|im|in dem|dem)\s+)?(?<cardinal>erste[rns]?|1\.|zweite[rns]?|2\.|dritte[rns]?|3\.|vierte[rns]?|4\.)\s+quartal(\s+(von|des jahres)?|\s*,\s*)?\s+({YearRegex}|{RelativeRegex})
  references: [ YearRegex, RelativeRegex ]
QuarterRegexYearFront: !nestedRegex #Not needed in german
  def: (?!)#({YearRegex}|{RelativeRegex}\s+year)\s+(the\s+)?(?<cardinal>first|1st|second|2nd|third|3rd|fourth|4th)\s+quarter
  references: [ YearRegex, RelativeRegex ]
AllHalfYearRegex: !nestedRegex
  def: ((das|im|in dem|dem)\s+)?(?<cardinal>erste[rns]?|1\.|zweite[rns]?|2\.)\s+(halbjahr|hälfte)(\s+(von|des jahres)?|\s*,\s*)?\s+({YearRegex}|{RelativeRegex})
  references: [ YearRegex, RelativeRegex ]
PrefixDayRegex: !simpleRegex
  def: ((?<EarlyPrefix>früh)|(?<MidPrefix>mitten|in der mitte)|(?<LatePrefix>spät(er)?))(\s+am\s+tag)?(\s+des\s+tages)?$
CenturySuffixRegex: !simpleRegex
  def: (^jahrhundert)\b
ReferencePrefixRegex: !simpleRegex
  def: ((gleich(e|en))|(selb(e|en)))\b
SeasonRegex: !nestedRegex
  def: \b(?<season>({RelativeRegex}\s+)?(?<seas>frühling|sommer|herbst|winter)((\s+(von|des jahres)?|\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+jahr(e(s)?)?))?)\b
  references: [ YearRegex, RelativeRegex ]
WhichWeekRegex: !simpleRegex
  def: \b(week)(\s*)(?<number>5[0-3]|[1-4]\d|0?[1-9])\b
WeekOfRegex: !simpleRegex
  def: (die\s+)?(woche)(\s+des)
MonthOfRegex: !simpleRegex
  def: (monat)(\s*)(des)
MonthRegex: !simpleRegex
  def: (?<month>apr((il)?\b|\.)|aug((ust)?\b|\.)|dez((ember)?\b|\.)|feb((ruar|ber)?\b|\.)|januar|j[äa]n((ner)?\b|\.)|jul((e?i|l)?\b|l\.)|jun([io]?\b|\.)|märz|mai|nov((ember)?\b|\.)|okt((ober)?\b|\.)|sept?((ember)?\b|\.))
#This is a look-behind assertion. Some cases should extract two digits as year like 11/25/16, where 16 means 2016. 
#The assertion determines if not connected with am/pm or hour separator (:), which should be a time.
DateYearRegex: !nestedRegex
  def: (?<year>{BaseDateTime.FourDigitYearRegex}|{TwoDigitYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, TwoDigitYearRegex ]
OnRegex: !nestedRegex
  def: (?<=\bam\s+)({DayRegex}s?)\b
  references: [ DayRegex ]
RelaxedOnRegex: !simpleRegex
  def: (?<=\b(am|an dem)\s+)((?<day>10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)([\.]))
ThisRegex: !nestedRegex
  def: (((diese((n|m)|(\s*woche))(\s*am)?\s+){WeekDayRegex})|diese(n|r)?\s*(sommer|winter|frühling|herbst))
  references: [ WeekDayRegex ]
LastDateRegex: !nestedRegex
  def: ({PreviousPrefixRegex}(\s*(woche|monat|jahr)?(\s*(am|im))?)?\s+({WeekDayRegex}|sommer|winter|frühling|herbst))|((am\s+)?{WeekDayRegex}(\s+{PreviousPrefixRegex}\s*woche))
  references: [ PreviousPrefixRegex, WeekDayRegex ]
NextDateRegex: !nestedRegex
  def: ({NextPrefixRegex}(\s*(woche|monat|jahr)?(\s*(am|im))?)?\s+({WeekDayRegex}|sommer|winter|frühling|herbst))|((am\s+)?{WeekDayRegex}(\s+{NextPrefixRegex}\s*woche))
  references: [ NextPrefixRegex, WeekDayRegex ]
SpecialDayRegex: !nestedRegex
  def: \b(vorgestern|übermorgen|((der\s+)?{RelativeRegex}\s+(tag(s|es)?|(?<!\bam\s+)morgen))|\bgestern\b|\bmorgen\b|heute|(heutige[rns]?|aktuelle[rns]?) (datum|tag(s|es)?))
  references: [ RelativeRegex]
SpecialDayWithNumRegex: !nestedRegex
  def: \b((?<number>{WrittenNumRegex})\s+tage?\s+(von|nach|ab)\s+(?<day>\bgestern\b|\bmorgen\b|heute|(heutige[rns]?|aktuelle[rns]?) (datum|tag(s|es)?)))\b
  references: [ WrittenNumRegex ]
RelativeDayRegex: !nestedRegex
  def: \b((((de[rmns])\s+)?{RelativeRegex}\s+tag(e(s)?)?))
  references: [ RelativeRegex]
SetWeekDayRegex: !simpleRegex
  def: \b(?<prefix>(an|immer)\s+)?(?<weekday>sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag|sonnabend)(s|en)\b
WeekDayOfMonthRegex: !nestedRegex
  def: \b(?<wom>((an( dem)?|de[rs]|am)\s+)?(?<cardinal>erste[rns]?|1\.|zweite[rns]?|2\.|dritte[rns]?|3\.|vierte[rns]?|4\.|fünfte[rns]?|5\.|letzte[rns]?)\s+{WeekDayRegex}\s+{MonthSuffixRegex})\b
  references: [ WeekDayRegex, MonthSuffixRegex ]
RelativeWeekDayRegex: !nestedRegex
  def: \b({WrittenNumRegex}\s+{WeekDayRegex}e\s+(von\s+jetzt|später))\b
  references: [ WrittenNumRegex, WeekDayRegex ]
WrittenNumRegex: !simpleRegex
  def: (zw(ö|oe)lf|dreizehn|vierzehn|fünfzehn|sechzehn|siebzehn|achtzehn|neunzehn|zwanzig|dreißig|vierzig|fünfzig|sechzig|siebzig|achtzig|neunzig|eins?|zw(een|ei|o)|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf)
SpecialDate: !nestedRegex
  def: (?=\b(an( dem)?|am)\s+){DayRegex}\b
  references: [ DayRegex ]
DateExtractor1: !nestedRegex
  def: \b(({WeekDayRegex})(\s+|\s*,\s*))?({DayRegex}\s*[/\\.,\- ]\s*{MonthRegex}(\s*[/\\.,\- ]\s*{DateYearRegex})?|{BaseDateTime.FourDigitYearRegex}\s*[/\\.,\- ]\s*{DayRegex}\s*[/\\.,\- ]\s*{MonthRegex})\b
  references: [ WeekDayRegex, MonthRegex, DayRegex, DateYearRegex, BaseDateTime.FourDigitYearRegex ]
DateExtractor2: !nestedRegex
  def: \b({MonthRegex}\s*[/\\.,\- ]\s*{DayRegex}(\s*[/\\.,\- ]\s*{DateYearRegex})?)\b
  references: [ WeekDayRegex, MonthRegex, DayRegex, DateYearRegex ]
DateExtractor3: !nestedRegex
  def: \b({DayRegex}{MonthRegex})
  references: [ DayRegex, MonthRegex ]
DateExtractor4: !nestedRegex
  def: \b({DayRegex}\s*{MonthNumRegex}\s*{DateYearRegex})\b
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
# The final lookahead in DateExtractor5|A avoids extracting as date "10/1-11" from an input like "10/1-11/2/2017" 
DateExtractor5: !nestedRegex
  def: \b(({WeekDayRegex})(\s+|\s*,\s*))?({DayRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DateYearRegex})\b(?!\s*[/\\\-\.]\s*\d+)
  references: [ WeekDayRegex, DayRegex, MonthNumRegex, MonthRegex, DateYearRegex ]
DateExtractor6: !nestedRegex
  def: ^[.]
  references: [ WeekDayRegex ]
DateExtractor7: !nestedRegex
  def: ({DayRegex}\s*[\.]\s*{MonthNumRegex}[\.]){BaseDateTime.CheckDecimalRegex}
  references: [ MonthNumRegex, DayRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor8: !nestedRegex
  def: (?<=\b(am)\s+){DayRegex}[/\\\.]{MonthNumRegex}([/\\\.]{DateYearRegex})?{BaseDateTime.CheckDecimalRegex}\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor9: !nestedRegex
  def: \b({DayRegex}\s*/\s*{MonthNumRegex}((\s+|\s*,\s*){DateYearRegex})?){BaseDateTime.CheckDecimalRegex}\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor10: !nestedRegex
  def: ^[.]
  #def: \b({RelativeRegex}\s*jahr(\s*im)?({MonthNumRegex}|sommer|winter|frühling|herbst)?)\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, RelativeRegex ]
DateExtractorA: !nestedRegex
  def: ({DateYearRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DayRegex}|{MonthRegex}\s*[/\\\-\.]\s*{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*{DayRegex}|{DayRegex}\s*[/\\\-\.]\s*{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*{MonthRegex})(?!\s*[/\\\-\.:]\s*\d+)
  references: [ DateYearRegex, MonthNumRegex, MonthRegex, DayRegex, BaseDateTime.FourDigitYearRegex ]
OfMonth: !nestedRegex
  def: ^(\s*des\s*|\s*)?{MonthRegex}
  references: [ MonthRegex ]
MonthEnd: !nestedRegex
  def: '{MonthRegex}\s*(de[rmn])?\s*$'
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
WeekDayStart: !simpleRegex
  def: ^[\.]
RangeUnitRegex: !simpleRegex
  def: (?<unit>jahren?|jahr|monaten?|monat|wochen?|tagen?|tag)
OclockRegex: !simpleRegex
  def: (?<oclock>uhr)
HourNumRegex: !simpleRegex
  def: \b(?<hournum>einundzwanzig|zweiundzwanzig|dreiundzwanzig|vierundzwanzig|zw(ö|oe)lf|dreizehn|vierzehn|fünfzehn|sechzehn|siebzehn|achtzehn|neunzehn|zwanzig|'null'|eins?|zw(een|ei|o)|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>zwanzig|dreißig|vierzig|fünfzig|zw(ö|oe)lf|dreizehn|vierzehn|fünfzehn|fuenfzehn|sechzehn|siebzehn|achtzehn|neunzehn|eins?|zw(een|ei|o)|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf)
DeltaMinuteNumRegex: !simpleRegex
  def: (?<deltaminnum>zwanzig|dreißig|vierzig|fünfzig|zw(ö|oe)lf|dreizehn|vierzehn|fünfzehn|fuenfzehn|sechzehn|siebzehn|achtzehn|neunzehn|eins?|zw(een|ei|o)|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf)
PmRegex: !simpleRegex
  def: \b((am|gegen|in der)\s+)?(?<pm>(nachmittags?|abends?|mitternachts?|\bmittags?|((in der )?nachts?)))
PmRegexFull: !simpleRegex
  def: \b((am|gegen|in der)\s+)?(?<pm>(nachmittags?|abends?|mitternachts?|\bmittags?|((in der )?nachts?)))
AmRegex: !simpleRegex
  def: (?<am>(((am|gegen)\s+)?(früh|vormittags?)|(morgens|(am|gegen) morgen)))
LunchRegex: !simpleRegex
  def: \b(mittag(essen|s)?)\b
NightRegex: !simpleRegex
  def: \b(mitternacht|(nachts?|primetime|abends?))\b
AmPmPrefixRegex: !simpleRegex
  def: \b((((um|gegen)\s*)?((am morgen)|morgens|(vor|nach)mittags?|abends?|früh|mitternachts?)|(in der\s*)?nachts?)\s*(um|gegen|von)\s*)
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
LessThanOneHour: !nestedRegex
  def: \b(?<lth>(ein(er?)?\s+)?((drei)?viertel|halb(en?)?)(\s*stunden?)?)|{BaseDateTime.DeltaMinuteRegex}(\s+(min(uten?)?))|{DeltaMinuteNumRegex}(\s+(min(uten?)?))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
WrittenTimeRegex: !nestedRegex
  def: (um\s*)?(?<writtentime>{HourNumRegex}(\s*{OclockRegex}\s*)({MinuteNumRegex}|{MinuteNumRegex}und(?<tens>zwanzig|dreißig|vierzig|fünfzig)))
  references: [ HourNumRegex, MinuteNumRegex , OclockRegex]
TimePrefix: !nestedRegex
  def: (?<prefix>({LessThanOneHour})(\s*(vor(\W)?|nach(\W)?))?)
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})
  references: [ AmRegex, PmRegex, OclockRegex ]
TimeSuffixFull: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex}|\b(?<pm>nachmittag(s)?|nacht(s)?|abend(s)?))
  references: [ AmRegex, PmRegex, OclockRegex ]
BasicTime: !nestedRegex
  def: (?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}(:|\s+uhr(\s+und)?\s+){BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|\b{BaseDateTime.HourRegex}(?![%\d]))
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
MidnightRegex: !simpleRegex
  def: (?<midnight>mitte(r|n in der )nachts?)
MidmorningRegex: !simpleRegex
  def: (?<midmorning>mitten am vormittag)
MidafternoonRegex: !simpleRegex
  def: (?<midafternoon>mitten am nachmittag)
MiddayRegex: !simpleRegex
  def: ((?<midday>(am\s+)?mittag(s(zeit)?)?)|(?<midday>(?<=montag|dienstag|mittwoch|donnerstag|freitag|samstag|sonnabend|sonntag)(mittags?)))
MidTimeRegex: !nestedRegex
  def: (?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))
  references: [ MidnightRegex, MidmorningRegex, MidafternoonRegex, MiddayRegex ]
AtRegex: !nestedRegex
  def: (((?<=\b(um|gegen)\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}(?![%\d])|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
IshRegex: !nestedRegex
  def: '\b(noonish)\b'
  references: [ BaseDateTime.HourRegex ]
TimeUnitRegex: !simpleRegex
  def: (?<unit>(stunde|minute|sekunde)(?<plural>n)?|std?|min|sek|h|s)\b
RestrictedTimeUnitRegex: !simpleRegex
  def: (?<unit>stunde|minute)\b
FivesRegex: !simpleRegex
  def: (?<tens>(fünfzehn|(fünfund)?(zwanzig?|dreißig|vierzig|fünfzig)|zehn|fünf))\b
HourRegex: !nestedRegex
  def: \b{BaseDateTime.HourRegex}
  references: [ BaseDateTime.HourRegex ]
PeriodHourNumRegex: !simpleRegex
  def: (?<hour>einundzwanzig|zweiundzwanzig|dreiundzwanzig|vierundzwanzig|zw(ö|oe)lf|dreizehn|vierzehn|fünfzehn|sechzehn|siebzehn|achtzehn|neunzehn|zwanzig|'null'|eins?|zwei|drei|vier|fünf|sechs|sieben|acht|neun|zehn|elf)\b
ConnectNumRegex: !nestedRegex
  def: '{BaseDateTime.HourRegex}(?<min>[0-5][0-9])\s*{DescRegex}'
  references: [ BaseDateTime.HourRegex, DescRegex ]
TimeRegex1: !nestedRegex
  def: ({TimePrefix}\s+)?({WrittenTimeRegex}(\s*{DescRegex})?|({HourNumRegex}|{BaseDateTime.HourRegex}\b)\s*{DescRegex})
  references: [ TimePrefix, WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex ]
TimeRegex2: !nestedRegex
  def: ({TimePrefix}\s+)?(t)?{BaseDateTime.HourRegex}(\s*)?(:|\s+uhr(\s+und)?\s+)(\s*)?{BaseDateTime.MinuteRegex}((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?((\s*{DescRegex})|\b)
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  def: ({TimePrefix}\s+)?{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  def: ({TimePrefix}\s*{BasicTime}(\s*{DescRegex})?(\s*{TimeSuffix})?)
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex5: !nestedRegex
  def: ({TimePrefix}\s*{BasicTime}((\s*{DescRegex})))
  references: [ TimePrefix, BasicTime, DescRegex ]
TimeRegex6: !nestedRegex
  def: ({BasicTime}(\s*{DescRegex})?\s+{TimeSuffix})
  references: [ BasicTime, DescRegex, TimeSuffix ]
TimeRegex7: !nestedRegex
  def: (({AmPmPrefixRegex})({BasicTime})((\s*{DescRegex}))?)
  references: [ TimeSuffixFull, BasicTime, DescRegex, AmPmPrefixRegex ]
TimeRegex8: !nestedRegex
  def: ({TimeSuffixFull}(\s*(um|gegen)\s*){BasicTime}((\s*{DescRegex})?))
  references: [ TimeSuffixFull, BasicTime, DescRegex ]
TimeRegex9: !nestedRegex
  def: ({PeriodHourNumRegex}\s+{FivesRegex}((\s*{DescRegex})))
  references: [ PeriodHourNumRegex, FivesRegex, DescRegex ]
TimeRegex10: !nestedRegex
  def: ({TimePrefix}\s+)?{BaseDateTime.HourRegex}(\s*h\s*){BaseDateTime.MinuteRegex}(\s*{DescRegex})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
PureNumFromTo: !nestedRegex
  def: (?<preDesc>({PmRegex}|{AmRegex})\s+)?((von)\s+)?({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>({PmRegex}|{AmRegex}|{DescRegex})))?\s*{TillRegex}\s*({HourRegex}|{PeriodHourNumRegex})(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex})){0,2}
  references: [ HourRegex, PeriodHourNumRegex, DescRegex, TillRegex, PmRegex, AmRegex ]
PureNumBetweenAnd: !nestedRegex
  def: \b(?<preDesc>({PmRegex}|{AmRegex})\s+)?(zwischen\s+)({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>({PmRegex}|{AmRegex}|{DescRegex})))?\s*{RangeConnectorRegex}\s*({HourRegex}|{PeriodHourNumRegex})\s*(?<rightDesc>\s*{PmRegex}|{AmRegex}|{DescRegex}){0,2}\b
  references: [ HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex, RangeConnectorRegex ]
SpecificTimeFromTo: !nestedRegex
  def: ((?<preDesc>({PmRegex}|{AmRegex})\s+)?(von)\s+)?(?<time1>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>({PmRegex}|{AmRegex}|{DescRegex})))?))\s*{TillRegex}\s*(?<time2>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>({PmRegex}|{AmRegex}|{DescRegex})))?))
  references: [ TimeRegex2, TillRegex, HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex ]
SpecificTimeBetweenAnd: !nestedRegex
  def: (?<preDesc>({PmRegex}|{AmRegex})\s+)?(zwischen\s+)(?<time1>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>({PmRegex}|{AmRegex}|{DescRegex})))?))\s*{RangeConnectorRegex}\s*(?<time2>({TimeRegex2}|({HourRegex}|{PeriodHourNumRegex})(\s*(?<rightDesc>({PmRegex}|{AmRegex}|{DescRegex})))?))
  references: [ TimeRegex2, RangeConnectorRegex, HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex ]
PrepositionRegex: !simpleRegex
  def: (?<prep>^(um|am|in|zur)(\s+(de[rmn]))?$)
TimeOfDayRegex: !simpleRegex
  def: (?<timeOfDay>((((?<early>(früh(\s+am|er)?|am frühen))|(?<late>(spät(\s+am|er)?|am späten)))(\s*|-))?((am\s+)?morgens?(?! (früh|vor|nach|abend|(nacht|primetime)|morgen))|(vor|nach)mittags?|(?<!sonn)abends?|früh|(nachts?|primetime))))\b
SpecificTimeOfDayRegex: !nestedRegex
  def: \b((({StrictRelativeRegex}|heute)\s+{TimeOfDayRegex}))\b
  references: [ TimeOfDayRegex, StrictRelativeRegex ]
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}$
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: (?<num>\d+(\,\d*)?){TimeUnitRegex}
  references: [ TimeUnitRegex ]
NowRegex: !simpleRegex
  def: \b(?<now>(genau\s+)?jetzt|momentan|im moment|derzeit|in diesem moment|aktuelle?|gerade|so früh wie möglich|frühestmöglich|neulich|vorher)\b
SuffixRegex: !simpleRegex
  def: ^\s*((am|zur|in der)\s+)?(am morgen|morgens|frühe?|(vor|nach)mittags?|abends?|(nacht|primetime)s?)\b
DateTimeTimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>(vor|nach)?mittags?|abends?|(nachts?|primetime|morgen))\b
DateTimeSpecificTimeOfDayRegex: !nestedRegex
  def: \b((({RelativeRegex}|heute)\s+{DateTimeTimeOfDayRegex}))\b
  references: [ DateTimeTimeOfDayRegex, RelativeRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?((zur|am|in der)\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ DateTimeSpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(um|gegen|in|on))?\s*$'
  references: [ DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: ({HourNumRegex}|{BaseDateTime.HourRegex})\s*(,\s*)?(am\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ HourNumRegex, BaseDateTime.HourRegex, DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+um)?\s*({HourNumRegex}|{BaseDateTime.HourRegex})'
  references: [ DateTimeSpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
SpecificEndOfRegex: !simpleRegex
  def: ((das|am|an( dem)?)\s+)?\bende(\s+(de[mnsr])?)\s*$
UnspecificEndOfRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
UnspecificEndOfRangeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
PeriodTimeOfDayRegex: !simpleRegex
  def: (((?<early>(früh( am|er)?|am frühen)(\s*|-))|(?<late>(spät( am|er)|am späten)(\s*|-)))?(?<timeOfDay>morgens?|früh|(vor|nach)mittags?|(nachts?|primetime)|abends?))
PeriodSpecificTimeOfDayRegex: !nestedRegex
  def: (({StrictRelativeRegex}\s+{PeriodTimeOfDayRegex})|heute)
  references: [ PeriodTimeOfDayRegex, StrictRelativeRegex ]
PeriodTimeOfDayWithDateRegex: !nestedRegex
 def: ((((am|zur|von|in der)\s+)?{TimeOfDayRegex}(\s+am)?))|(?<timeOfDay>(?<=montag|dienstag|mittwoch|donnerstag|freitag|samstag|sonnabend|sonntag)((vor|nach)?mittags?|abends?|(nachts?|primetime)|morgens?))\b
 references: [ TimeOfDayRegex]
LessThanRegex: !simpleRegex
  def: \b(weniger\s+als)\b
MoreThanRegex: !simpleRegex
  def: \b(mehr\s+als)\b
DurationUnitRegex: !simpleRegex
  def: (?<unit>jahr(e(n|s)?)?|monat(en?|s)?|wochen?|tag(e(n|s)?)?|tg|stunden?|std?|h|min(uten?)?|sek(unden?)?)\b
SpecialNumberUnitRegex: !simpleRegex
  def: \b(?<specialNum>beiden)\b
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*und\s+(eine\s+)?(?<suffix_num>halbe|viertel))
PeriodicRegex: !simpleRegex
  def: (?<periodic>(all)?täglich(e(r|n|s)?)?|(all)?monatlich(e(r|n|s)?)?|(all)?wöchentlich(e(r|n|s)?)?|(all)?jährlich(e(r|n|s)?)?)\b
EachUnitRegex: !nestedRegex
  def: (?<each>(jede(s|r|n|m)?|alle)(?<other>\s+andere(n)?)?\s*{DurationUnitRegex})
  references: [ DurationUnitRegex ]
EachPrefixRegex: !simpleRegex
  def: \b(?<each>(jede(r|n|s|m)?|alle|immer)\s*$)
SetEachRegex: !simpleRegex
  def: \b(?<each>(jede(r|n|s|m)?|alle|immer)\s*)
SetLastRegex: !simpleRegex
  def: (?<last>(über)?nächste(r|n|s)?|kommende(r|n|s)?|diese(r|n|m|s)?|letzte(r|n|s)?|vorige(r|n|s)?|vorherige(r|n|s)?|jetzige(r|n|s)?|derzeitige(r|n|s)?)\b
EachDayRegex: !simpleRegex
  def: \s*(jeden)\s*tag\s*\b
BeforeEachDayRegex: !simpleRegex
  def: (jeden)\s*tag\s*
DurationFollowedUnit: !nestedRegex
  def: (^\s*{SuffixAndRegex}?(\s+|-)?{DurationUnitRegex})
  references: [ SuffixAndRegex, DurationUnitRegex ]
NumberCombinedWithDurationUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?)(-)?{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AnUnitRegex: !nestedRegex
  def: \b(((((ein(e(r|s|n|m)?)?)(?<half>\s+halb(e(s|r|n)?))?))\s+{DurationUnitRegex})|((ein(e(r|s|n|m)?)?)\s+((?<quarter>viertel)|(?<threequarter>dreiviertel))(?<unit>stunde)))
  references: [ DurationUnitRegex ]
DuringRegex: !simpleRegex
  def: \b(während|im\slaufe)\s+(de[sr])\s+(?<unit>jahres|monats|woche|tages)\b
AllRegex: !simpleRegex
  def: \b(?<all>ganz(e(n|s|r)?)\s+(?<unit>jahr|monat|woche|tag))\b
HalfRegex: !simpleRegex
  def: (((ein(e(n|r|s)?)?)\s*)|\b)(?<half>halb(e(n|r|s)?)?\s+(?<unit>jahr(e(r|s)?)?|monat(s|e)?|woch(en?)?|tag(e(n|r|s)?)?|stund(en?)?))\b
ConjunctionRegex: !simpleRegex
  def: \b((und(\s+für)?)|mit|für)\b
HolidayRegex1: !nestedRegex
  def: \b((dieses jahr)\s*)?(?<holiday>reformations(tag|fest)|gedenktag der reformation|martinstag|st. martin|sankt martin|martinsfest|martini|nikolaustag|dreikönigstag|dreikönigsfest|walpurgisnacht|nationalfeiertag|mariä empfängnis|weihnachten|weihnachts(feier)?tag|erste(r|n)? weihnachtstag|1. weihnachtstag|erste(r|n)? weihnachtsfeiertag|1\. weihnachtsfeiertag|zweite(r|n)? weihnachtstag|zweite(r|n)? weihnachtsfeiertag|2\. weihnachtstag|zweite(r|n)? weihnachtsfeiertag|stefanitag|stafanstag|berchtoldstag|bechtelistag|bächtelistag|berchtelistag|bärzelistag|josefstag|joseftag|josefitag|pfingsten|ostermontag|ostersonntag|bundesfeiertag|bundesfeier|mariä himmelfahrt|tag der deutschen einheit|ostern|vatertag|muttertag|erntedank(fest)?|thanksgiving|martin luther king day|martin luther king jr day|washington's birthday|washington birthday|canberraday|tag der arbeit|columbus day|memorial day|yuandan|mao's birthday|teachersday|teacher day|single day|tag der jugend|kindertag|(Internationaler\s+)?frauentag|treeplanting day|tag des baumes|girlsday|white lover day|loverday|weihnachten|weihnachtstag|xmas|neujahr|neujahrstag|neujahr|neujahrstag|neujahr|inauguration day|murmeltiertag|sommeranfang|winteranfang|frühlingsanfang|herbstanfang|valentinstag|st patrick day|erster april|april scherz|georgstag|mayday|maitag|maifeiertag|geburt johannes des täufers|us unabhängigkeitstag|unabhängigkeitstag|sturm auf die bastille|halloween|guy fawkes day|guy fawkes night|veterans day|heiligabend|silvester|pi-tag|pitag|pi (tag|day))(\s+((diesen)\s+)?(im jahr {YearRegex}|{YearRegex}|(im\s+)?{RelativeRegex}\s+jahr(es)?))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex2: !nestedRegex
  def: \b((dieses jahr)\s*)?(?<holiday>martin luther king|martin luther king jr|allerheiligen|tree planting day|white lover|st patrick|st george|independence|us independence|allerseelen|guy fawkes|silvester|weiberfastnacht|karneval|aschermittwoch|palm(en)?sonntag|karsamstag|fastnachtssamstag|fastnachtssonntag|heilige drei könige|barbaratag|reformationstag|weltkindertag|augsburger friedensfest|johannistag|peter und paul|karfreitag|christi himmelfahrt|pfingstsonntag|pfingstmontag|fronleichnam|rosenmontag|fastnacht|gründonnerstag|himmelfahrt|volkstrauertag|buß und bettag|buß- und bettag|buss- und bettag|buss und bettag|toten(sonntag|fest)|ewigkeitssonntag|erste(r|n)? advent|1\. advent|zweite(r|n)? advent|2\. advent|dritte(r|n)? advent|3\. advent|vierte(r|n)? advent|4\. advent|schweizer buss- und bettag|schweizer buss und bettag|schweizer buß und bettag|schweizer buß- und bettag)(\s+((diesen)\s+)?(im jahr {YearRegex}|{YearRegex}|(im\s+)?{RelativeRegex}\s+jahr(es)?))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex3: !nestedRegex
  def: ((dieses jahr)\s*)?(?<holiday>(canberra|columbus|thanks\s*giving|groundhog|bastille|halloween|veterans|memorial|spring|lantern|qingming|dragon boat)\s+(day))(\s+((diesen)\s+)?(im jahr {YearRegex}|{YearRegex}|(im\s+)?{RelativeRegex}\s+jahr(es)?))?
  references: [ YearRegex, RelativeRegex ]
DateTokenPrefix: 'am '
TimeTokenPrefix: 'um '
TokenBeforeDate: 'am '
TokenBeforeTime: 'um '
FromRegex: !simpleRegex
  def: \b(vo[mn](\s+de[rmsn])?)$
BetweenTokenRegex: !simpleRegex
  def: \b(zwischen(\s+de[rmsn])?)$
AMTimeRegex: !simpleRegex
  def: (?<am>morgens|vormittags?|früh)
PMTimeRegex: !simpleRegex
  def: \b(?<pm>nachmittags?|abends?|nachts?)
BeforeRegex: !simpleRegex
  def: (vorher(ige(s|n|r)?)?|bevor|vor(\W)?|vorige(s|n|r)?|bis)(\s+de[rmsn]\b)?
AfterRegex: !simpleRegex
  def: (nach(\W)?)(\s+de[rmsn]\b)?
SinceRegex: !simpleRegex
  def: \b(seit|ab)(\s+de[rmsn])?\b
AgoRegex: !simpleRegex
  def: \b(danach)\b
AroundRegex: !simpleRegex
  def: (\b(ca\.?|gegen|circa)\s*\b)
LaterRegex: !simpleRegex
  def: \b(später|von jetzt|(ab|nach) (?<day>morgen|heute))\b
BeforeAfterRegex: !simpleRegex
  def: ^[.]
InConnectorRegex: !simpleRegex
  def: \b(in)\b
SinceYearSuffixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
WithinNextPrefixRegex: !nestedRegex
  def: \b(innerhalb|während(\s+der|de(s|m))?(\s+(?<next>{NextPrefixRegex}))?)\b
  references: [ NextPrefixRegex ]
TodayNowRegex: !simpleRegex
  def: \b(heute|jetzt)\b
MorningStartEndRegex: !simpleRegex
  def: (^(früh|vormittag(s)?)|(morgens?|früh|vormittags?)$)
AfternoonStartEndRegex: !simpleRegex
  def: (^(nachmittags?)|(nachmittags?)$)
EveningStartEndRegex: !simpleRegex
  def: (^(abends?)|(abends?)$)
NightStartEndRegex: !simpleRegex
  def: (^(über nacht|in der nacht|nachts?|nächtens|primetime))|((über nacht|nachts?|nächtens|primetime)$)
InexactNumberRegex: !simpleRegex
  def: \b((ein )?paar|einige( wenige)?|wenige)\b
InexactNumberUnitRegex: !nestedRegex
  def: ({InexactNumberRegex})\s+({DurationUnitRegex})
  references: [InexactNumberRegex, DurationUnitRegex]
RelativeTimeUnitRegex: !nestedRegex
  def: ((({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s*({TimeUnitRegex})))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, TimeUnitRegex, RestrictedTimeUnitRegex]
RelativeDurationUnitRegex: !nestedRegex
  def: (((?<=({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s*)({DurationUnitRegex})))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, DurationUnitRegex, RestrictedTimeUnitRegex]
ReferenceDatePeriodRegex: !nestedRegex
  def: \b{ReferencePrefixRegex}\s+(?<duration>tag|monat|jahr(zehnt)?|wochen(ende|tag))\b
  references: [ReferencePrefixRegex]
ConnectorRegex: !simpleRegex
  def: ^(-|,|für|t|gegen)$
FromToRegex: !simpleRegex
  def: \b(vom|von).+(bis(\s*zum)?)\b.+
SingleAmbiguousMonthRegex: !simpleRegex
  def: ^(the\s+)?(may|march)$
UnspecificDatePeriodRegex: !simpleRegex
  def: ^(woche(nende)?|monat|jahr)$
PrepositionSuffixRegex: !simpleRegex
  def: \b(am|in|um|gegen|vo[mn]|zu(m|r))$
FlexibleDayRegex: !simpleRegex
  def: (?<DayOfMonth>([A-Za-z]+\s)?[A-Za-z\d]+)
ForTheRegex: !nestedRegex
  def: \b(für\s+den\s+{FlexibleDayRegex}(?<end>\s*(,|\.(?!(\d|\s?{WrittenMonthRegex}))|!|\?|$)))
  references: [FlexibleDayRegex, WrittenMonthRegex]
WeekDayAndDayOfMonthRegex: !nestedRegex
  def: \b{WeekDayRegex}(\s*,)?\s+((de(r|n))\s+{FlexibleDayRegex})\b
  references: [WeekDayRegex, FlexibleDayRegex]
WeekDayAndDayRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+(?!de[nr]){DayRegex}(?!([-:]|(\s+({AmDescRegex}|{PmDescRegex}|{OclockRegex}))))\b
  references: [WeekDayRegex, DayRegex, AmDescRegex, PmDescRegex, OclockRegex]
RestOfDateRegex: !simpleRegex
  def: \brest\s+((de[rs]|dieser)\s+)((aktuellen|jetzigen)\s+)?(?<duration>woche|monats|jahres)\b
RestOfDateTimeRegex: !simpleRegex
  def: \brest\s+((des|diesen)\s+)((aktuellen|heutigen)\s+)?(?<unit>tages)\b
MealTimeRegex: !simpleRegex
  def: \b((zu(m|r))\s+)?(?<mealTime>(essenszeit|mittagessen|mittag))\b
AmbiguousRangeModifierPrefix: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
NumberEndingPattern: !nestedRegex
  def: ^(\s+(?<meeting>meeting|termin|telefonkonferenz|conference|skype call|call)\s+to\s+(?<newTime>{PeriodHourNumRegex}|{HourRegex})((\.)?$|(\.,|,|!|\?)))
  references: [PeriodHourNumRegex, HourRegex]
OneOnOneRegex: !simpleRegex
  def: \b(1\s*:\s*1)|(one (on )?one|one\s*-\s*one|one\s*:\s*one)\b
LaterEarlyPeriodRegex: !nestedRegex
  def: \b(((?<LatePrefix>ende|spät(e(r|n)?)?)|(?<EarlyPrefix>früh(e(r|n)?)?))\s+(?<suffix>{OneWordPeriodRegex}|(?<FourDigitYear>{BaseDateTime.FourDigitYearRegex}))|(?<suffix>{OneWordPeriodRegex}|(?<FourDigitYear>{BaseDateTime.FourDigitYearRegex}))\s+((?<LatePrefix>ende|spät(e(r|n)?)?)|(?<EarlyPrefix>früh(e(r|n)?)?)))\b
  references: [OneWordPeriodRegex, BaseDateTime.FourDigitYearRegex]
WeekWithWeekDayRangeRegex: !nestedRegex
  def: \b((?<week>({NextPrefixRegex}|{PreviousPrefixRegex}|diese(r|n|m))\s+woche)((\s+zwischen\s+{WeekDayRegex}\s+und\s+{WeekDayRegex})|(\s+vo(n|m)\s+{WeekDayRegex}\s+(bis\s+)?zum\s+{WeekDayRegex})))\b
  references: [NextPrefixRegex, PreviousPrefixRegex, WeekDayRegex]
GeneralEndingRegex: !simpleRegex
  def: \s*((\.,)|\.|,|!|\?)?\s*
MiddlePauseRegex: !simpleRegex
  def: \s*(,)\s*
DurationConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+|und|für|,)\s*$
PrefixArticleRegex: !simpleRegex
  def: \b(der|dem|des)?\s+
OrRegex: !simpleRegex
  def: \s*((\b|,\s*)(oder|und)\b|,)\s*
YearPlusNumberRegex: !nestedRegex
  def: \b(jahr\s+((?<year>(\d{2,4}))|{FullTextYearRegex}))\b
  references: [ FullTextYearRegex ]
NumberAsTimeRegex: !nestedRegex
  def: \b({WrittenTimeRegex}|{PeriodHourNumRegex}|{BaseDateTime.HourRegex})\b
  references: [ WrittenTimeRegex, PeriodHourNumRegex, BaseDateTime.HourRegex ]
TimeBeforeAfterRegex: !nestedRegex
  def: \b(((?<=\b(vor|nach)\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
DateNumberConnectorRegex: !simpleRegex
  def: \s*(?<connector>am)\s*
CenturyRegex: !simpleRegex
  def: \b(?<century>((ein|zwei)?tausend(und)?)?((ein|zwei|drei|vier|fünf|sechs|sieben|acht|neun|zehn|elf|zwölf|dreizehn|vierzehn|fünfzehn|sechzehn|siebzehn|achtzehn|neunzehn)hundert))\b
DecadeRegex: !simpleRegex
  def: (?<decade>zwanziger|dreißiger|vierziger|fünfziger|sechziger|siebziger|achtziger|neunziger|zweitausender)(n)?
DecadeWithCenturyRegex: !nestedRegex
  def: (die\s+)?(((?<century>\d|1\d|2\d)?(')?(?<decade>\d0)(')?s)|(({CenturyRegex}(\s+|-)(und\s+)?)?{DecadeRegex})|({CenturyRegex}(\s+|-)(und\s+)?(?<decade>zehner|hunderter)))
  references: [ CenturyRegex, DecadeRegex ]
RelativeDecadeRegex: !nestedRegex
  def: \b((das|die\s+)?{RelativeRegex}\s+((?<number>[\w,]+)\s+)?jahrzehnte?)\b
  references: [ RelativeRegex ]
YearSuffix: !nestedRegex
  def: (,?\s*({DateYearRegex}|{FullTextYearRegex}))
  references: [ DateYearRegex, FullTextYearRegex ]
SuffixAfterRegex: !simpleRegex
  def: \b(o\s+(nach|in der Vergangenheit))\b
YearPeriodRegex: !nestedRegex
  def: ((((von|während|zwischen)\s+)?{YearRegex}\s*({TillRegex})\s*{YearRegex})|(((zwischen)\s+){YearRegex}\s*({RangeConnectorRegex})\s*{YearRegex}))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]
FutureSuffixRegex: !simpleRegex
  def: \b(in\s+der\s+)?(zukunft|zukünftig)\b
PastSuffixRegex: !simpleRegex
  def: ^\b$
ModPrefixRegex: !nestedRegex
  def: \b({RelativeRegex}|{AroundRegex}|{BeforeRegex}|{AfterRegex}|{SinceRegex})\b
  references: [RelativeRegex, AroundRegex, BeforeRegex, AfterRegex, SinceRegex ]
ModSuffixRegex: !nestedRegex
  def: \b({AgoRegex}|{LaterRegex}|{BeforeAfterRegex}|{FutureSuffixRegex}|{PastSuffixRegex})\b
  references: [AgoRegex, LaterRegex, BeforeAfterRegex, FutureSuffixRegex, PastSuffixRegex]
ComplexDatePeriodRegex: !nestedRegex
  def: (((von|während|in)\s+)?(?<start>.+)\s*({TillRegex})\s*(?<end>.+)|((zwischen)\s+)(?<start>.+)\s*({RangeConnectorRegex})\s*(?<end>.+))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]

UnitMap: !dictionary
  types: [ string, string ]
  entries:
    jahren: Y
    jahres: Y
    jahre: Y
    jahr: Y
    monaten: MON
    monate: MON
    monat: MON
    monats: MON
    wochen: W
    woche: W
    tagen: D
    tages: D
    tage: D
    tag: D
    tg: D
    stunden: H
    stunde: H
    h: H
    minuten: M
    minute: M
    min: M
    sekunden: S
    sekunde: S
    sek: S
    H: H

UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    jahren: 31536000
    jahre: 31536000
    jahr: 31536000
    monaten: 2592000
    monate: 2592000
    monat: 2592000
    wochen: 604800
    woche: 604800
    tagen: 86400
    tage: 86400
    tag: 86400
    tg: 86400
    stunden: 3600
    stunde: 3600
    std: 3600
    h: 3600
    minuten: 60
    minute: 60
    min: 60
    sekunden: 1
    sekunde: 1
    sek: 1

# TODO: modify below regex according to the counterpart in English
SpecialYearPrefixesMap: !dictionary
  types: [ string, string ]
  entries:
    '': ''
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    spring: SP
    summer: SU
    fall: FA
    autumn: FA
    winter: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int]
  entries:
    erster: 1
    ersten: 1
    erstes: 1
    erste: 1
    1: 1
    zweiter: 2
    zweiten: 2
    zweites: 2
    zweite: 2
    zwoter: 2
    2: 2
    dritter: 3
    dritten: 3
    drittes: 3
    dritte: 3
    3: 3
    vierter: 4
    vierten: 4
    viertes: 4
    vierte: 4
    4: 4
    fünfter: 5
    fünften: 5
    fünftes: 5
    fünfte: 5
    5: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries: 
    montag: 1
    dienstag: 2
    mittwoch: 3
    donnerstag: 4
    freitag: 5
    samstag: 6
    sonnabend: 6
    sonntag: 0
    mo.: 1
    di.: 2
    mi.: 3
    do.: 4
    fr.: 5
    sa.: 6
    so.: 0

MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'januar': 1
    'janner': 1
    'jänner': 1
    'februar': 2
    'feber': 2
    'märz': 3
    'april': 4
    'mai': 5
    'juni': 6
    'juno': 6
    'juli': 7
    'julei': 7
    'august': 8
    'september': 9
    'oktober': 10
    'november': 11
    'dezember': 12
    'jan': 1
    'jän': 1
    'feb': 2
    'mar': 3
    'apr': 4
    'jun': 6
    'jul': 7
    'aug': 8
    'sep': 9
    'sept': 9
    'okt': 10
    'nov': 11
    'dez': 12
    '1.': 1
    '2.': 2
    '3.': 3
    '4.': 4
    '5.': 5
    '6.': 6
    '7.': 7
    '8.': 8
    '9.': 9
    '10.': 10
    '11.': 11
    '12.': 12
    '01.': 1
    '02.': 2
    '03.': 3
    '04.': 4
    '05.': 5
    '06.': 6
    '07.': 7
    '08.': 8
    '09.': 9
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    'null': 0
    'eins': 1
    'ein': 1
    'eine': 1
    'zween': 2
    'zwei': 2
    'zwo': 2
    'drei': 3
    'vier': 4
    'fünf': 5
    'fuenf': 5
    'sechs': 6
    'sieben': 7
    'acht': 8
    'neun': 9
    'zehn': 10
    'elf': 11
    'zwölf': 12
    'dreizehn': 13
    'vierzehn': 14
    'fünfzehn': 15
    'sechzehn': 16
    'siebzehn': 17
    'achtzehn': 18
    'neunzehn': 19
    'zwanzig': 20
    'einundzwanzig': 21
    'zweiundzwanzig': 22
    'dreiundzwanzig': 23
    'vierundzwanzig': 24
    'fünfundzwanzig': 25
    'sechsundzwanzig': 26
    'siebenundzwanzig': 27
    'achtundzwanzig': 28
    'neunundzwanzig': 29
    'dreißig': 30
    'einunddreißig': 31
    'zweiunddreißig': 32
    'dreiunddreißig': 33
    'vierunddreißig': 34
    'fünfunddreißig': 35
    'sechsunddreißig': 36
    'siebenunddreißig': 37
    'achtunddreißig': 38
    'neununddreißig': 39
    'vierzig': 40
    'einundvierzig': 41
    'zweiundvierzig': 42
    'dreiundvierzig': 43
    'vierundvierzig': 44
    'fünfundvierzig': 45
    'sechsundvierzig': 46
    'siebenundvierzig': 47
    'achtundvierzig': 48
    'neunundvierzig': 49
    'fünfzig': 50
    'einundfünfzig': 51
    'zweiundfünfzig': 52
    'dreiundfünfzig': 53
    'vierundfünfzig': 54
    'fünfundfünfzig': 55
    'sechsundfünfzig': 56
    'siebenundfünfzig': 57
    'achtundfünfzig': 58
    'neunundfünfzig': 59
    'sechzig': 60
    'einundsechzig': 61
    'zweiundsechzig': 62
    'dreiundsechzig': 63
    'vierundsechzig': 64
    'fünfundsechzig': 65
    'sechsundsechzig': 66
    'siebenundsechzig': 67
    'achtundsechzig': 68
    'neunundsechzig': 69
    'siebzig': 70
    'einundsiebzig': 71
    'zweiundsiebzig': 72
    'dreiundsiebzig': 73
    'vierundsiebzig': 74
    'fünfundsiebzig': 75
    'sechsundsiebzig': 76
    'siebenundsiebzig': 77
    'achtundsiebzig': 78
    'neunundsiebzig': 79
    'achtzig': 80
    'einundachtzig': 81
    'zweiundachtzig': 82
    'dreiundachtzig': 83
    'vierundachtzig': 84
    'fünfundachtzig': 85
    'sechsundachtzig': 86
    'siebenundachtzig': 87
    'achtundachtzig': 88
    'neunundachtzig': 89
    'neunzig': 90
    'einundneunzig': 91
    'zweiundneunzig': 92
    'dreiundneunzig': 93
    'vierundneunzig': 94
    'fünfundneunzig': 95
    'sechsundneunzig': 96
    'siebenundneunzig': 97
    'achtundneunzig': 98
    'neunundneunzig': 99
    'einhundert': 100
DayOfMonth: !dictionary
  types: [ string, int ]
  entries:
    '1.': 1
    '2.': 2
    '3.': 3
    '4.': 4
    '5.': 5
    '6.': 6
    '7.': 7
    '8.': 8
    '9.': 9
    '10.': 10
    '11.': 11
    '12.': 12
    '13.': 13
    '14.': 14
    '15.': 15
    '16.': 16
    '17.': 17
    '18.': 18
    '19.': 19
    '20.': 20
    '21.': 21
    '22.': 22
    '23.': 23
    '24.': 24
    '25.': 25
    '26.': 26
    '27.': 27
    '28.': 28
    '29.': 29
    '30.': 30
    '31.': 31
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '13': 13
    '14': 14
    '15': 15
    '16': 16
    '17': 17
    '18': 18
    '19': 19
    '20': 20
    '21': 21
    '22': 22
    '23': 23
    '24': 24
    '25': 25
    '26': 26
    '27': 27
    '28': 28
    '29': 29
    '30': 30
    '31': 31
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries: 
    halb: 0.5
    viertel: 0.25
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries:
    reformationday: [ reformationstag, reformationsfest, gedenktagderreformation ]
    stmartinsday: [ martinstag, st.martin, sanktmartin, martinsfest, martini ]
    saintnicholasday: [ nikolaustag ]
    biblicalmagiday: [ dreikönigstag, dreikönigsfest ]
    walpurgisnight: [ walpurgisnacht ]
    austriannationalday: [ nationalfeiertag ]
    immaculateconception: [ mariäempfängnis ]
    firstchristmasday: [ weihnachten, weihnachtstag, weihnachtsfeiertag, erstenweihnachtstag, erstenweihnachtsfeiertag, ersterweihnachtstag, ersterweihnachtsfeiertag, erstenweihnachtstag, erstenweihnachtsfeiertag, 1.weihnachtstag, 1.weihnachtsfeiertag ]
    secondchristmasday: [ zweiterweihnachtstag, zweiterweihnachtsfeiertag, zweiteweihnachtstag, zweiteweihnachtsfeiertag, zweitenweihnachtstag, zweitenweihnachtsfeiertag, 2.weihnachtstag, 2.weihnachtsfeiertag, stefanitag, stafanstag ]
    berchtoldsday: [ berchtoldstag, bechtelistag, bächtelistag, berchtelistag, bärzelistag ]
    saintjosephsday: [ josefstag, joseftag, josefitag ]
    easterday: [ ostern ]
    eastermonday: [ ostermontag ]
    eastersunday: [ ostersonntag ]
    swissnationalday: [ bundesfeiertag, bundesfeier ]
    assumptionofmary: [ mariähimmelfahrt ]
    germanunityday: [ tagderdeutscheneinheit ]
    fathers: [ vatertag, männertag ]
    mothers: [ muttertag ]
    thanksgiving: [ erntedankfest, erntedank, thanksgiving ]
    martinlutherking: [ martinlutherkingday, martinlutherkingjrday ]
    washingtonsbirthday: [ washingtonsbirthday, washingtonbirthday ]
    canberra: [ canberraday ]
    labour: [ tagderarbeit ]
    columbus: [ columbusday ]
    memorial: [ memorialday ]
    yuandan: [ yuandan ]
    maosbirthday: [ maosbirthday ]
    teachersday: [ teachersday, teacherday ]
    singleday: [ singleday ]
    allsaintsday: [ allerheiligen ]
    youthday: [ tag der jugend ]
    childrenday: [ kindertag, weltkindertag ]
    femaleday: [ frauentag ]
    treeplantingday: [ treeplantingday ]
    arborday: [ tag des baumes ]
    girlsday: [ girlsday ]
    whiteloverday: [ whiteloverday ]
    loverday: [ loverday ]
    xmas: [ xmas ]
    newyear: [ neujahr ]
    newyearday: [ neujahrstag, neujahr ]
    newyearsday: [ neujahrstag, neujahr ]
    inaugurationday: [ inaugurationday ]
    groundhougday: [ murmeltiertag ]
    valentinesday: [ valentinstag ]
    stpatrickday: [ stpatrickday ]
    aprilfools: [ erster april, aprilscherz ]
    stgeorgeday: [ georgstag ]
    mayday: [ mayday, maitag, tagderarbeit, maifeiertag ]
    laborday: [ mayday, maitag, tagderarbeit, maifeiertag ]
    cincodemayoday: [ cincodemayo ]
    baptisteday: [ geburtjohannesdestäufers ]
    usindependenceday: [ usunabhängigkeitstag ]
    independenceday: [ unabhängigkeitstag ]
    bastilleday: [ sturmaufdiebastille ]
    halloweenday: [ halloween ]
    allhallowday: [ allerheiligen ]
    allsoulsday: [ allerseelen ]
    guyfawkesday: [ guyfawkesday, guyfawkesnight ]
    veteransday: [ veteransday ]
    piday: [ piday, pitag, pi-tag ]
    christmaseve: [ heiligabend ]
    newyeareve: [ silvester ]
    weiberfastnacht: [ weiberfastnacht ]
    carnival: [ karneval ]
    ashwednesday: [ aschermittwoch ]
    palmsunday: [ palmensonntag, palmsonntag ]
    goodfriday: [ karfreitag ]
    ascensionofchrist: [ christihimmelfahrt ]
    whitesunday: [ pfingstsonntag, pfingsten ]
    whitemonday: [ pfingstmontag ]
    corpuschristi: [ fronleichnam ]
    rosenmontag: [ rosenmontag ]
    fastnacht: [ fastnacht ]
    holythursday: [ gründonnerstag, himmelfahrt ]
    memorialdaygermany: [ volkstrauertag ]
    dayofrepentance: [ bußundbettag, buß-undbettag, bussundbettag ]
    totensonntag: [ totensonntag, totenfest, ewigkeitssonntag ]
    firstadvent: [ ersteadvent, erstenadvent, ersteradvent, 1.advent ]
    secondadvent: [ zweiteadvent, zweitenadvent, zweiteradvent, 2.advent ]
    thirdadvent: [ dritteadvent, drittenadvent, dritteradvent, 3.advent ]
    fourthadvent: [ vierteadvent, viertenadvent, vierteradvent, 4.advent ]
    chedayofrepentance: [ schweizerbußundbettag, schweizerbuß-undbettag, schweizerbussundbettag ]
    beginningofsummer: [ sommeranfang ]
    beginningofwinter: [ winteranfang ]
    beginningofspring: [ frühlingsanfang ]
    beginningoffall: [ herbstanfang ]
    eastersaturday: [ karsamstag ]
    fastnachtssamstag: [ fastnachtssamstag ]
    fastnachtssonntag : [ fastnachtssonntag ]
    heiligedreikönige: [ heiligedreikönige ]
    barbaratag: [ barbaratag ]
    augsburgerfriedensfest: [ augsburgerfriedensfest ]
    johannistag: [ johannistag ]
    peterundpaul: [ peterundpaul ]
WrittenDecades: !dictionary
  types: [ string, int ]
  entries:
    'hundert': 0
    'zehn': 10
    'zwanziger': 20
    'dreißiger': 30
    'vierziger': 40
    'fünfziger': 50
    'sechziger': 60
    'siebziger': 70
    'achtziger': 80
    'neunziger': 90
    'zwanzigern': 20
    'dreißigern': 30
    'vierzigern': 40
    'fünfzigern': 50
    'sechzigern': 60
    'siebzigern': 70
    'achtzigern': 80
    'neunzigern': 90
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  entries:
    'zweitausender': 2000
DefaultLanguageFallback: DMY
DurationDateRestrictions: [ today, now ]
AmbiguityFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    '^\d{4}$': '(\d\.\d{4}|\d{4}\.\d)'
    '\b(morgen|nachmittag|abend|nacht|tag)\b': '\b(gut(en?)?\s+(morgen|nachmittag|abend|nacht|tag))\b'
    '^(apr|aug|dez|feb|j[äa]n|jul|jun|märz|mai|nov|okt|sept?)$': '([$%£&!?@#])(apr|aug|dez|feb|j[äa]n|jul|jun|märz|mai|nov|okt|sept?)|(apr|aug|dez|feb|j[äa]n|jul|jun|märz|mai|nov|okt|sept?)([$%£&@#])'
    '^(mo|di|mi|do|fr|sa|so)$': '\b(mo|di|mi|do|fr|sa|so)\b'
    '^((früh|spät)(\s+am|er)?\s*)?(abends?|morgens?|nachts?|(vor|nach)mittags?|früh|primetime)$': '((?<!(frü|spä))[a-z0-9])((früh|spät)(\s+am|er)?\s*)?(abends?|morgens?|nachts?|(vor|nach)mittags?|früh|primetime)\b'
# As deciding between morgen (morning) and morgen (tomorrow) turns out to be rather difficult, we might want to ignore it for now
#    '\bmorgen\b': '\b(morgen\s(morgen|nachmittag|abend|nacht|tag|früh))\b'
# For TimeOfDay resolution
AmbiguousTimePeriodRegex: !nestedRegex
  def: \b((?<!{RelativeRegex}\s+)morgen|früh(?!(\s*morgens?)))\b
  references: [ RelativeRegex ]
MorningTermList: !list
  types: [ string ]
  entries:
    - morgen
    - vormittag
    - früh
AfternoonTermList: !list
  types: [ string ] 
  entries: 
    - nachmittag
EveningTermList: !list
  types: [ string ] 
  entries: 
    - abend
DaytimeTermList: !list
  types: [ string ] 
  entries: 
    - tag
NightTermList: !list
  types: [ string ] 
  entries: 
    - nacht
    - nacths
    - primetime
SameDayTerms: !list
  types: [ string ]
  entries: 
    - heute
    - heutige datum
    - heutige tag
    - aktuelles datum
    - aktuelle datum
    - aktueller tag
    - aktuellen tag
    - aktuelle tag
    - dieser morgen
    - diesem morgen
    - diesen morgen
    - aktuelle morgen
    - aktuellen morgen
    - jetzige morgen
    - jetzigen morgen
PlusOneDayTerms: !list
  types: [ string ]
  entries: 
    - morgen
    - morgiger tag
    - morgigen tag
    - morgigen tages
MinusOneDayTerms: !list
  types: [ string ]
  entries: 
    - gestern
    - gestriger tag
    - gestrigen tag
    - gestrigen tages
PlusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - übermorgen
MinusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - vorgestern
# For DatePeriodParserConfiguration Logic
FutureTerms: !list
  types: [ string ]
  entries:
    - dieser
    - diesen
    - dieses
    - diese
    - nächster
    - nächstes
    - nächsten
    - nächste
LastCardinalTerms: !list
  types: [ string ]
  entries:
    - letzter
    - letztes
    - letzten
MonthTerms: !list
  types: [ string ]
  entries:
    - monat
    - monate
    - monaten
    - monats
MonthToDateTerms: !list
  types: [ string ]
  entries:
    - month to date
WeekendTerms: !list
  types: [ string ]
  entries:
    - wochenende
    - wochenendes
WeekTerms: !list
  types: [ string ]
  entries:
    - woche
YearTerms: !list
  types: [ string ]
  entries:
    - jahr
    - jahre
    - jahren
    - jahres
YearToDateTerms: !list
  types: [ string ]
  entries:
    - year to date
...
