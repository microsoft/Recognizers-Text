---
#ISO 639-2 Code
LangMarker: Dut
# Note: CheckBothBeforeAfter is set to true in DutchSetExtractorConfiguration
CheckBothBeforeAfter: !bool false
TillRegex: !nestedRegex
  def: (?<till>\b(tot(dat|\s+en\s+met)?|gedurende|tijdens|ten tijde van)\b|{BaseDateTime.RangeConnectorSymbolRegex})
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
RangeConnectorRegex: !nestedRegex
  def: (?<and>\b(en|t/m|tot(\s+(aan|en\s+met))?)\b|{BaseDateTime.RangeConnectorSymbolRegex})
  references: [ BaseDateTime.RangeConnectorSymbolRegex ]
ArticleRegex: !simpleRegex
  def: \b(de|het|een)\b
ApostrofRegex: !simpleRegex
  def: (’|‘|'|ʼ)
ApostrofsRegex: !nestedRegex
  def: ({ApostrofRegex}\s*s)
  references: [ ApostrofRegex ]
RelativeRegex: !simpleRegex
  def: \b(?<order>((dit|deze|volgende?|(aan)?komende?|aanstaande?|huidige?|vorige?|verleden|voorgaande?|laatste|afgelopen|(op\s+)?de|het)\b)|gister(en)?)
StrictRelativeRegex: !simpleRegex
  def: \b(?<order>((dit|deze|volgende?|(aan)?komende?|aanstaande?|huidige?|vorige?|verleden|voorgaande?|laatste|afgelopen)\b)|gister(en)?)
UpcomingPrefixRegex: !simpleRegex
  def: ((deze\s+)?((aan)?komende?|aanstaande?))
NextPrefixRegex: !nestedRegex
  def: \b(volgende?|eerstvolgende|{UpcomingPrefixRegex})\b
  references: [ UpcomingPrefixRegex ]
AfterNextSuffixRegex: !simpleRegex
  def: \b((na\s+(afloop\s+van\s+)?((de|het)\s+)?volgende?)|over)\b
PastPrefixRegex: !simpleRegex
  def: ((deze\s+)?(verleden|afgelopen))\b
PreviousPrefixRegex: !nestedRegex
  def: ((voorgaand[e]|vorige?|verleden|laatste|{PastPrefixRegex})\b|gister(en)?)
  references: [ PastPrefixRegex ]
ThisPrefixRegex: !simpleRegex
  def: (dit|deze|huidige?)\b
RangePrefixRegex: !simpleRegex
  def: (van|tussen)
CenturySuffixRegex: !simpleRegex
  def: (^eeuw|^centennium)\b
ReferencePrefixRegex: !simpleRegex
  def: (dezelfde|hetzelfde|dat(zelfde)?|die|overeenkomstige)\b
FutureSuffixRegex: !simpleRegex
  def: \b(((in\s+de\s+)?toekomst)|daarna|over|na)\b
PastSuffixRegex: !simpleRegex
  def: ^\b$
DayRegex: !simpleRegex
  def: (de\s*)?(?<!(\d+:|\$)\s*)(?<day>(?:3[0-1]|[1-2]\d|0?[1-9]))(?:ste|de|e)?(?=\b|t)
# 1-31 written
WrittenDayRegex: !nestedRegex
  def: (?<day>({WrittenOneToNineRegex})|({WrittenElevenToNineteenRegex})|(({WrittenOneToNineRegex}(en|ën))?twintig)|(((één|een)(en|ën))?dertig))
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex ]
WrittenCardinalDayRegex: !nestedRegex
  def: (?<=((de\s+)|\b))(?<day>(éérste|eerste|tweede|derde|vierde|vijfde|zesde|zevende|achtste|negende|tiende|{WrittenElevenToNineteenRegex}de|({WrittenOneToNineRegex}(en|ën))?twintigste|((één|een)(en|ën))?dertigste))
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex ]
ImplicitDayRegex: !simpleRegex
  def: (de\s*)?(?<day>(3[0-1]|[0-2]?\d)(ste|e|de))\b
MonthNumRegex: !simpleRegex
  def: \b(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\b
WrittenOneToNineRegex: !simpleRegex
  def: (één|een|twee|drie|vier|vijf|zes|zeven|acht|negen)
WrittenElevenToNineteenRegex: !simpleRegex
  def: (elf|elven|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien)
WrittenTensRegex: !simpleRegex
  def: (tien|twintig|dertig|veertig|vijftig|zestig|zeventig|tachtig|negentig)
WrittenNumRegex: !nestedRegex
  def: ({WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}(\s+{WrittenOneToNineRegex})?)
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
WrittenCenturyFullYearRegex: !nestedRegex
  def: ((twee)\s*duizend(\s+en)?(\s*{WrittenOneToNineRegex}\s*honderd)?)
  references: [ WrittenOneToNineRegex]
WrittenCenturyOrdinalYearRegex: !simpleRegex
  def: ((ee|éé)nentwintig|tweeëntwintig|tien|elf|elven|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien|twintig|een|twee|drie|vier|vijf|zes|zeven|acht|negen)
CenturyRegex: !nestedRegex
  def: \b(?<century>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}(\s*honderd)?(\s+en)?)
  references: [WrittenCenturyFullYearRegex, WrittenCenturyOrdinalYearRegex ]
LastTwoYearNumRegex: !nestedRegex
  def: ((zero|nul|en)\s+{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|({WrittenOneToNineRegex}[eë]n)?{WrittenTensRegex})
  references: [ WrittenOneToNineRegex, WrittenElevenToNineteenRegex, WrittenTensRegex ]
FullTextYearRegex: !nestedRegex
  def: \b((?<firsttwoyearnum>{CenturyRegex})\s*(?<lasttwoyearnum>{LastTwoYearNumRegex})\b|\b(?<firsttwoyearnum>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}\s+hundred(\s+and)?))\b
  references: [ CenturyRegex, WrittenCenturyFullYearRegex, WrittenCenturyOrdinalYearRegex, LastTwoYearNumRegex ]
OclockRegex: !simpleRegex
  def: (?<oclock>u(ur)?)\b
SpecialDescRegex: !simpleRegex
  def: ((?<ipm>)p\b)
AmDescRegex: !nestedRegex
  def: (:?{BaseDateTime.BaseAmDescRegex})
  references: [BaseDateTime.BaseAmDescRegex]
PmDescRegex: !nestedRegex
  def: (:?{BaseDateTime.BasePmDescRegex})
  references: [BaseDateTime.BasePmDescRegex]
AmPmDescRegex: !nestedRegex
  def: (:?{BaseDateTime.BaseAmPmDescRegex})
  references: [BaseDateTime.BaseAmPmDescRegex]
DescRegex: !nestedRegex
  def: (:?(:?({OclockRegex}\s+)?(?<desc>({AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex}))\.?)|{OclockRegex})
  references: [ OclockRegex, AmDescRegex, PmDescRegex, AmPmDescRegex, SpecialDescRegex ]
PmRegex: !nestedRegex
  def: (?<pm>({ApostrofsRegex}|des)\s+(\bmiddags|avonds|nachts)|((in|tegen|op|om|met)\s+(de\s+)?)(((na)?middag|avond|(midder)?nacht|lunchtijd))|dag)
  references: [ ApostrofsRegex ]
PmRegexFull: !nestedRegex
  def: (?<pm>(({ApostrofsRegex}|des)\s+(\bmiddags|avonds|nachts)|((in|tegen|op|om|met)\s+(de\s+)?)?(((na)?middag|avond|(midder)?nacht|lunchtijd))))
  references: [ ApostrofsRegex ]
AmRegex: !nestedRegex
  def: (?<am>(({ApostrofsRegex}|des)\s+(ochtends|morgens)|((in|tegen|op)\s+de)(\s+(ochtend|morgen))|(?<=gisteren|morgen|vandaag|(maan|dins|woens|donder|vrij|zater|zon)dag)(ochtend|morgen)|^?ochtend))
  references: [ ApostrofsRegex ]
FullDescRegex: !nestedRegex
  def: ({DescRegex}|{AmRegex}|{PmRegexFull})
  references: [ DescRegex, AmRegex, PmRegexFull ]
# Exclude cases that include the "Am/Pm" suffix
# Exclude when preceded by "$" symbol
TwoDigitYearRegex: !nestedRegex
  def: \b(?<!\$)(?<year>([0-24-9]\d))(?!(\s*(([:\.]\d)|keer|uurs?|{AmDescRegex}|{PmDescRegex})))\b
  references: [ AmDescRegex, PmDescRegex, ApostrofsRegex]
YearRegex: !nestedRegex
  def: ({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, FullTextYearRegex ]
WeekDayRegex: !simpleRegex
  def: \b(?<weekday>((ma|di(ns)?|wo(e(ns)?)?|do|vr(ij)?|zat?|zo)(\.|\b))|((?:maan|dins|woens|donder|vrij|zater|zon)(dag(en)?)?(middag)?)\b)
SingleWeekDayRegex: !simpleRegex
  def: \b(?<weekday>(((ma|di(ns)?|wo(e(ns)?)?|do|vr|za)\b(\.)?)|(vrij|zat|zon?)\.(?!$)|(((?<!in\s+de\s+)(maan|dins|woens|donder|zater)(dag(en)?)?|(?<=(op|voor)\s+)(vrij|zon?|zat)|vrij(dag(en)?))\b))|zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)
RelativeMonthRegex: !nestedRegex
  def: (?<relmonth>((van\s+)?(de\s+)?)?{RelativeRegex}\s+maand)\b
  references: [RelativeRegex]
WrittenMonthRegex: !simpleRegex
  def: (((de\s+)?maand\s+)?(?<month>januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december|jan|feb|mar|mrt|apr|jun|jul|aug|sep|sept|oct|okt|nov|dec))
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>((in|van|tijdens|sinds|tot|op)\s+)?({RelativeMonthRegex}|{WrittenMonthRegex}))
  references: [ RelativeMonthRegex, WrittenMonthRegex ]
DateUnitRegex: !simpleRegex
  def: (?<unit>(eeuw|maand)(?<plural>en)?|jaar|(?<plural>jaren|weken)|jr|decennia|mnd|week|(?<business>(werk))?dag(?<plural>en)?|dgn)\b
DateTokenPrefix: 'op '
TimeTokenPrefix: 'om '
TokenBeforeDate: 'op '
TokenBeforeTime: 'om '
HalfTokenRegex: !simpleRegex
  def: ^(half)
QuarterTokenRegex: !simpleRegex
  def: ^(een\s+kwart(\s+jaar)?|kwart|een\s+kwartier|kwartier)
ThreeQuarterTokenRegex: !simpleRegex
  def: ^(drie\s+kwart|drie\s+kwartier)
ToTokenRegex: !simpleRegex
  def: \b(voor)$
ToHalfTokenRegex: !simpleRegex
  def: \b(over\s+half)$
ForHalfTokenRegex: !simpleRegex
  def: \b(voor\s+half)$
FromRegex: !simpleRegex
  def: \b(van(af)?)$
BetweenTokenRegex: !simpleRegex
  def: \b(tussen)$
SimpleCasesRegex: !nestedRegex
  def: \b({RangePrefixRegex}\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex}(\s*),?(\s*){MonthSuffixRegex}|{MonthSuffixRegex}\s+{DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex, RangePrefixRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: \b({RangePrefixRegex}\s+)?(({MonthSuffixRegex}\s+((van)\s+)?({DayRegex})|({DayRegex})\s+((van)\s+)?{MonthSuffixRegex})\s*{TillRegex}\s*({DayRegex})|(op\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})\s+{MonthSuffixRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex, RangePrefixRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: \b{MonthSuffixRegex}\s+(tussen\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, RangeConnectorRegex , YearRegex ]
BetweenRegex: !nestedRegex
  def: \b(tussen\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, RangeConnectorRegex , MonthSuffixRegex, YearRegex ]
RelativeYearRegex: !nestedRegex
  def: ({YearRegex}|(?<order>volgende?|komende?|aanstaande?|aankomende?|huidige?|vorige?|afgelopen|dit)\s+jaar)
  references: [ YearRegex ]
MonthWithYear: !nestedRegex
  def: \b(({WrittenMonthRegex}(\.)?(\s*)[/\\\-\.,]?(\s+(van|over|in))?(\s*){RelativeYearRegex})|({RelativeYearRegex}(\s*),?(\s*){WrittenMonthRegex}))\b
  references: [ WrittenMonthRegex, RelativeYearRegex ]
OneWordPeriodRegex: !nestedRegex
  def: \b((((de\s+)?maand\s+(van\s+)?)?({StrictRelativeRegex}\s+)?(?<month>januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december|jan\.?|feb\.?|mar\.?|mrt\.?|apr\.?|jun\.?|jul\.?|aug\.?|sep\.?|sept\.?|oct\.?|okt\.?|nov\.?|dec\.?))|(maand|jaar)\s+tot(\s+op)?\s+heden|(({RelativeRegex}\s+)(mijn\s+)?(weekend|week|maand|jaar(?!\s+hoger dan))|({RelativeRegex}\s+)?(mijn\s+)(weekend|week|maand|jaar))(?!((\s+van)?\s+\d+|\s+tot(\s+op)?\s+heden|nu))(\s+{AfterNextSuffixRegex})?)\b
  references: [ StrictRelativeRegex, RelativeRegex, AfterNextSuffixRegex ]
MonthNumWithYear: !nestedRegex
  def: \b(({BaseDateTime.FourDigitYearRegex}(\s*)[/\-\.](\s*){MonthNumRegex})|({MonthNumRegex}(\s*)[/\-](\s*){BaseDateTime.FourDigitYearRegex}))\b
  references: [ BaseDateTime.FourDigitYearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: \b(?<wom>(de\s+)?(?<cardinal>eerste|tweede|derde|vierde|vijfde|1e|1ste|2e|2de|3e|3de|4e|4de|5e|5de|laatste)\s+week\s+{MonthSuffixRegex}(\s+{BaseDateTime.FourDigitYearRegex}|{RelativeRegex}\s+year)?)\b
  references: [ MonthSuffixRegex, BaseDateTime.FourDigitYearRegex, RelativeRegex ]
WeekOfYearRegex: !nestedRegex
  def: (\b(?<woy>(de\s+)?(?<cardinal>eerste|tweede|derde|vierde|vijfde|1e|1ste|2e|2de|3e|3de|4e|4de|5e|5de|laatste)\s+week(\s+van)?\s+({YearRegex}|{RelativeRegex}\s+jaar))\b)|(\b({YearRegex}|{RelativeRegex}\s+jaar)\s(?<woy>(de\s+)?(?<cardinal>eerste|tweede|derde|vierde|vijfde|1e|1ste|2e|2de|3e|3de|4e|4de|5e|5de|laatste)\s+week)\b)
  references: [ YearRegex, RelativeRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterTermRegex: !simpleRegex
  def: \b(((?<cardinal>eerste|1e|1ste|tweede|2e|2de|derde|3e|3de|vierde|4e|4de)[ -]+kwartaal)|(k(?<number>[1-4])))\b
QuarterRegex: !nestedRegex
  def: (het\s+)?{QuarterTermRegex}((\s+van|\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+jaar))?
  references: [ YearRegex, RelativeRegex, QuarterTermRegex ]
QuarterRegexYearFront: !nestedRegex
  def: ({YearRegex}|({RelativeRegex}\s+jaar))({ApostrofsRegex})?\s+((het|de)\s+)?{QuarterTermRegex}
  references: [ YearRegex, RelativeRegex, QuarterTermRegex, ApostrofsRegex ]
HalfYearTermRegex: !simpleRegex
  def: (?<cardinal>eerste|1e|1ste|tweede|2e|2de)\s+(helft)
HalfYearFrontRegex: !nestedRegex
  def: (?<year>(de\s+){HalfYearTermRegex}(\s+helft van\s+)((1[5-9]|2[0-1]])\d{2}))
  references: [ HalfYearTermRegex ]
HalfYearBackRegex: !nestedRegex
  def: (het\s+)?(H(?<number>[1-2])|({HalfYearTermRegex}))(\s+van|\s*,\s*)?\s+({YearRegex})
  references: [ YearRegex, HalfYearTermRegex ]
HalfYearRelativeRegex: !nestedRegex
  def: (het\s+)?{HalfYearTermRegex}(\s+van|\s*,\s*)?\s+({RelativeRegex}\s+jaar)
  references: [ RelativeRegex, HalfYearTermRegex ]
AllHalfYearRegex: !nestedRegex
  def: ({HalfYearFrontRegex})|({HalfYearBackRegex})|({HalfYearRelativeRegex})
  references: [ HalfYearFrontRegex, HalfYearBackRegex, HalfYearRelativeRegex ]
EarlyPrefixRegex: !simpleRegex
  def: \b(?<EarlyPrefix>((?<RelEarly>eerder)|vroeg(er)?|begin(nend)?|start(end)?)(\s+(in|op|van)(\s+de)?)?)\b
MidPrefixRegex: !simpleRegex
  def: \b(?<MidPrefix>(mid(den|-)?|halverwege|op\s+de\s+helft|half)(\s+(in|op|van)(\s+de)?)?)
LaterPrefixRegex: !simpleRegex
  def: \b(?<LatePrefix>(laat|(?<RelLate>later)|aan\s+het\s+einde?(\s+van(\s+de)?)?|eind(igend)?|afsluitend)(\s+(in|op|van)(\s+de)?)?)\b
PrefixPeriodRegex: !nestedRegex
  def: ({EarlyPrefixRegex}|{MidPrefixRegex}|{LaterPrefixRegex})
  references: [EarlyPrefixRegex, MidPrefixRegex, LaterPrefixRegex]
PrefixDayRegex: !nestedRegex
  def: \b(((?<!{WeekDayRegex}\s+)(?<EarlyPrefix>eerder|vroeg(er)?|begin|start)|(?<MidPrefix>midden|halverwege|op\s+de\s+helft)|in\s+de|(?<LatePrefix>laat|later))(\s+(in|op|van))?(\s+de\s+dag)?$)|^\s*(((?<!{WeekDayRegex}\s+)(?<EarlyPrefix>eerder|vroeg(er)?|begin|start)|(?<MidPrefix>midden|halverwege|op\s+de\s+helft)|in\s+de|(?<LatePrefix>laat|later))(\s+(in|op|van))(\s+de\s+dag))\b
  references: [ WeekDayRegex ]
SeasonDescRegex: !simpleRegex
  def: (?<seas>lente|voorjaar|zomer|herfst|najaar|winter)
SeasonRegex: !nestedRegex
  def: \b(?<season>({PrefixPeriodRegex}(\s+)?)?({ArticleRegex}\s+)?({RelativeRegex}\s+)?{SeasonDescRegex}((\s+(in|van)|\s*,\s*)?\s+({YearRegex}|({ArticleRegex}\s+)?({RelativeRegex}\s+)?jaar))?)\b
  references: [ YearRegex, RelativeRegex, SeasonDescRegex, PrefixPeriodRegex, ArticleRegex ]
WhichWeekRegex: !simpleRegex
  def: \b(week)(\s*)(?<number>5[0-3]|[1-4]\d|0?[1-9])\b
WeekOfRegex: !simpleRegex
  def: (de\s+)?(week)(\s+van)(\s+de|het)?
MonthOfRegex: !simpleRegex
  def: (maand)(\s*)(van)
MonthRegex: !simpleRegex
  def: \b(?<month>(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)\b|(jan|feb|mar|mrt|apr|jun|jul|aug|sept|sep|oct|okt|nov|dec)(?:\.|\b))
# This is a look-behind assertion. Some cases should extract two digits as year like 11/25/16, where 16 means 2016.
# The assertion determines if not connected with am/pm or hour separator (:), which should be a time.
DateYearRegex: !nestedRegex
  def: (?<year>{BaseDateTime.FourDigitYearRegex}|{TwoDigitYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, TwoDigitYearRegex ]
YearSuffix: !nestedRegex
  def: ((,|\s*van)?\s*({DateYearRegex}|{FullTextYearRegex}))
  references: [ DateYearRegex, FullTextYearRegex ]
OnRegex: !nestedRegex
  def: (?<=\bop\s+)({DayRegex})\b(?!(\.|:)\d+)
  references: [ DayRegex ]
# Ordinals are incomplete
RelaxedOnRegex: !simpleRegex
  def: \b(?<=op\s+)(?:de\s+)?(?<day>(?:3[0-1]|[1-2]\d|0?[1-9]))(?:(ste|de|e))?\b(?!(\.|:)\d+)
PrefixWeekDayRegex: !simpleRegex
  def: (\s*((,?\s*op)|[-—–]))
ThisRegex: !nestedRegex
  def: \b((deze(\s+week{PrefixWeekDayRegex}?)?\s*){WeekDayRegex})|({WeekDayRegex}((\s+van)?\s*deze\s+week))\b
  references: [ WeekDayRegex, PrefixWeekDayRegex ]
LastDateRegex: !nestedRegex
  def: \b({PreviousPrefixRegex}(\s*week{PrefixWeekDayRegex}?)?\s+{WeekDayRegex})|({WeekDayRegex}(\s+vorige\s+week))\b
  references: [ PreviousPrefixRegex, WeekDayRegex, PrefixWeekDayRegex ]
WeekDayForNextDateRegex: !simpleRegex
  def: \b(?<weekday>((ma|di(ns)?|wo(e(ns)?)?|do|vr(ij)?|za(t)?|zo)(\.|\b))|((?:maan(?!den)|dins|woens|donder|vrij|zater|zon)(dag)?))
NextDateRegex1: !nestedRegex
  def: \b({NextPrefixRegex}(\s*week{PrefixWeekDayRegex}?)?\s+{WeekDayForNextDateRegex}|(op\s+)?{WeekDayForNextDateRegex}\s+((van\s+)?(de\s+)?{NextPrefixRegex})\s*week|(op\s+)?{NextPrefixRegex}\s*week\s+{WeekDayForNextDateRegex})
  references: [ NextPrefixRegex, WeekDayForNextDateRegex, PrefixWeekDayRegex ]
NextDateRegex2: !nestedRegex
  def: \b({NextPrefixRegex}(\s*week(\s*,?\s*op)?)?\s+{WeekDayRegex}|(op\s+)?{WeekDayRegex}\s+((van\s+)?(de\s+)?{NextPrefixRegex})\s*week|(op\s+)?{NextPrefixRegex}\s*week\s+{WeekDayRegex})
  references: [ NextPrefixRegex, WeekDayRegex ]
NextDateRegex: !nestedRegex
  def: ({NextDateRegex1}|{NextDateRegex2})
  references: [ NextDateRegex1, NextDateRegex2 ]
SpecialDayRegex: !nestedRegex
  def: \b(eergisteren|overmorgen|(de\s+)?dag\s+na\s+morgen|(de\s+)?dag\s+(ervoor|erna)|((de\s+)?({RelativeRegex}|mijn)\s+dag)\b|gisteren|(deze\s+)?morgen|vandaag|morgen(middag))(?!s\b)
  references: [ RelativeRegex ]
SpecialDayWithNumRegex: !nestedRegex
  def: \b((?<number>{WrittenNumRegex})\s+dag(en)?\s+(gerekend\s+)?(vanaf\s+)(?<day>gisteren|morgen|vandaag))\b
  references: [ WrittenNumRegex ]
RelativeDayRegex: !nestedRegex
  def: \b(((de\s+)?{RelativeRegex}\s+dag))\b
  references: [ RelativeRegex ]
SetWeekDayRegex: !simpleRegex
  def: \b(?<prefix>op\s+({ArticleRegex}\s+)?)?(?<weekday>morgen|ochtend|middag|avond|nacht|zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)((?<suffix>e)n)\b
WeekDayOfMonthRegex: !nestedRegex
  def: (?<wom>((de\s+|\b))?(?<cardinal>eerste|tweede|derde|vierde|vijfde|zesde|tiende|1e|1ste|2e|2de|3e|3de|4e|4de|5e|5de|laatste)\s+{WeekDayRegex}(\s+{MonthSuffixRegex}))
  references: [ WeekDayRegex, MonthSuffixRegex ]
RelativeWeekDayRegex: !nestedRegex
  def: \b({WrittenNumRegex}\s+{WeekDayRegex}\s+(vanaf\s+nu|later))\b
  references: [ WrittenNumRegex, WeekDayRegex ]
SpecialDate: !nestedRegex
  def: (?=\b(op\s+)(de\s+)?){DayRegex}\b
  references: [ DayRegex ]
DatePreposition: !simpleRegex
  def: \b(op(\s+de)?)
DateExtractorYearTermRegex: !nestedRegex
  def: (\s+|\s*[,./-]\s*){DateYearRegex}
  references: [ DateYearRegex ]
# Maandag, Mei 2
DateExtractor1: !nestedRegex
  def: \b({WeekDayRegex}\s*[,-]?\s*)?(({MonthRegex}(\.)?\s*[/\\.,-]?\s*{DayRegex}(?!\s*{MonthRegex}))|(\({MonthRegex}\s*[-.]\s*{DayRegex}\))|({DayRegex}(\.)?\s*[/\\.,-]?\s*{MonthRegex}))(\s*\(\s*{WeekDayRegex}\s*\))?({DateExtractorYearTermRegex}(?!\s*{MonthRegex})\b)?
  references: [ WeekDayRegex, MonthRegex, DayRegex, DateExtractorYearTermRegex ]
# Maandag 2 Mei
# TODO: add ... van 2019?
DateExtractor3: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*)?(de\s+)?)?(({DayRegex}(\s*dag|\.)?)((\s+|\s*[,/-]\s*|\s+van\s+)?{MonthRegex})((\.)?(\s+|\s*[,/-]\s*|\s+in\s+)?{DateYearRegex})?|{BaseDateTime.FourDigitYearRegex}\s*[,./-]?\s*(de\s*)?(?<day>(?:3[0-1]|[1-2]\d|0?[1-9]))(?:ste|de|e)?(\s*dag|\.)?\s*[,./-]?\s*{MonthRegex})\b
  references: [ WeekDayRegex, DayRegex, MonthRegex, DateYearRegex, BaseDateTime.FourDigitYearRegex ]
# 05/02/2019
# The final lookahead in DateExtractor4|5|A avoids extracting as date "10/1-11" from an input like "10/1-11/2/2017" 
DateExtractor4: !nestedRegex
  def: \b{MonthNumRegex}\s*[/\\\-]\s*{DayRegex}[\.]?\s*[/\\\-]\s*{ApostrofRegex}?{DateYearRegex}
  references: [ MonthNumRegex, DayRegex, DateYearRegex, ApostrofRegex ]
DateExtractor5: !nestedRegex
  def: \b{DayRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DateYearRegex}(?!\s*[/\\\-\.]\s*\d+)
  references: [ DayRegex, MonthNumRegex, MonthRegex, DateYearRegex ]
DateExtractor6: !nestedRegex
  def: (?<={DatePreposition}\s+)({StrictRelativeRegex}\s+)?({WeekDayRegex}\s+)?{MonthNumRegex}[\.]{DayRegex}(?!([%]|\s*{FullDescRegex}))\b|(?<={DatePreposition}\s+){MonthNumRegex}[\-\.]{DayRegex}(?!([%]|\s*{FullDescRegex}))\b
  references: [ MonthNumRegex, DayRegex, WeekDayRegex, DatePreposition, StrictRelativeRegex, FullDescRegex ]
DateExtractor7L: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{MonthNumRegex}\s*/\s*{DayRegex}{DateExtractorYearTermRegex}(?![%])\b
  references: [ MonthNumRegex, DayRegex, WeekDayRegex, DateExtractorYearTermRegex ]
DateExtractor7S: !nestedRegex
  def: \b((?<=(^|{DatePreposition}\s+)){WeekDayRegex}\s+)?{MonthNumRegex}\s*/\s*{DayRegex}{BaseDateTime.CheckDecimalRegex}(?!([%]|\s*{FullDescRegex}))\b
  references: [ MonthNumRegex, DayRegex, WeekDayRegex, BaseDateTime.CheckDecimalRegex, FullDescRegex, DatePreposition ]
# The only difference between 7L and 7S is whether "Year" part is required
# We have both the long and short Regex because we would like to catch both "11/20, 12" and "11/20, 12/20"
# Only use the long Regex would ignore "11/20" in "11/20, 12/20" and it is hard to exhaust all characters after the "year" as we also have cases like "11/20, 12 of April"
# Same for DateExtractor9L and DateExtractor9S
DateExtractor8: !nestedRegex
  def: \b((?<=(^|{DatePreposition}\s+)){WeekDayRegex}\s+)?(?<!(morgen|ochtend|middag|avond|nacht)s?\s+){DayRegex}[\\\-]{MonthNumRegex}{BaseDateTime.CheckDecimalRegex}(?!([%]|\s*{FullDescRegex}))\b
  references: [ DayRegex, MonthNumRegex, WeekDayRegex, DatePreposition, BaseDateTime.CheckDecimalRegex, FullDescRegex ]
DateExtractor9L: !nestedRegex
  def: \b({WeekDayRegex}\s+)?{DayRegex}\s*[-|\/|.]\s*{MonthNumRegex}((\s+|\s*,\s*|\s+in\s+){DateYearRegex})(?![%])\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, WeekDayRegex ]
DateExtractor9S: !nestedRegex
  def: \b(?<!naar\s+)({WeekDayRegex}\s+)?{DayRegex}\s*(\/|\.)\s*{MonthNumRegex}{BaseDateTime.CheckDecimalRegex}(?!([%]|\s*{FullDescRegex}))\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, WeekDayRegex, BaseDateTime.CheckDecimalRegex, FullDescRegex, DatePreposition ]
DateExtractorA: !nestedRegex
  def: \b({WeekDayRegex}\s+)?({BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DayRegex}(?!\s*[/\\\-\.]\s*\d+)|{MonthRegex}\s*[/\\\-\.]\s*{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*(de\s*)?(?<day>(?:3[0-1]|[1-2]\d|0?[1-9]))(?:ste|de|e)?|{DayRegex}\s*[/\\\-\.]\s*{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*{MonthRegex})
  references: [ BaseDateTime.FourDigitYearRegex, MonthNumRegex, MonthRegex, DayRegex, WeekDayRegex ]
OfMonth: !nestedRegex
  def: (^\s*((van|in)\s+)?)({MonthRegex})
  references: [ MonthRegex ]
MonthEnd: !nestedRegex
  def: '{MonthRegex}(\s+de\s*)?$'
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '(deze\s+)?{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
WeekDayStart: !simpleRegex
  def: ^[\.]
RangeUnitRegex: !simpleRegex
  def: \b(?<unit>ja(ren|ar)|maand(en)?|we(ken|ek)|dag(en)?)\b
HourNumRegex: !simpleRegex
  def: \b(?<hournum>nul|een|één|twee|drie|vier|vijf|zes|zeven|acht|negen|tien|elf|elven|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien|twintig|eenentwintig|éénentwintig|tweeentwintig|tweeëntwintig|drieëntwintig|vierentwintig)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>nul|een(?=\s+min(uut)?)|één|twee|drie|vier|vijf|zes|zeven|acht|negen|tien|elf|elven|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien|twintig|eenentwintig|éénentwintig|tweeentwintig|tweeëntwintig|drieëntwintig|vierentwintig|vij[fv]entwintig|ze(s|ven)entwintig|achtentwintig|negenentwintig|dertig|eenendertig|tweeëndertig|drieëndertig|vierendertig|vijfendertig|ze(s|ven)endertig|achtendertig|negenendertig|veertig|eenenveertig|tweeënveertig|drieënveertig|vierenveertig|vijfenveertig|ze(s|ven)enveertig|achtenveertig|negenenveertig|eenenvijftig|vijftig|tweeënvijftig|drieënvijftig|vierenvijftig|vijfenvijftig|ze(s|ven)envijftig|achtenvijftig|negenenvijftig)
DeltaMinuteNumRegex: !simpleRegex
  def: (?<deltaminnum>nul|een(?=\s+min(uut)?)|één|twee|drie|vier|vijf|zes|zeven|acht|negen|tien|elf|elven|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien|twintig|eenentwintig|éénentwintig|tweeentwintig|tweeëntwintig|drieëntwintig|vierentwintig|vijfentwintig|vijventwintig|zesentwintig|zevenentwintig|achtentwintig|negenentwintig|dertig|eenendertig|tweeëndertig|drieëndertig|vierendertig|vijfendertig|zesendertig|zevenendertig|achtendertig|negenendertig|veertig|eenenveertig|tweeënveertig|drieënveertig|vierenveertig|vijfenveertig|zesenveertig|zevenenveertig|achtenveertig|negenenveertig|eenenvijftig|vijftig|tweeënvijftig|drieënvijftig|vierenvijftig|vijfenvijftig|zesenvijftig|zevenenvijftig|achtenvijftig|negenenvijftig)(?=\b)
LunchRegex: !simpleRegex
  def: \b(lunchtijd)\b
NightRegex: !nestedRegex
  def: \b((({ApostrofsRegex}|des)\s+)?nachts|(midder)?nacht)\b
  references: [ ApostrofsRegex ]
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
LessThanOneHour: !nestedRegex
  def: (?<lth>((een\s+)?((drie\s+)?kwart(ier)?|half(uur)?))|{BaseDateTime.DeltaMinuteRegex}(\s+(minuten|mins|min\.?))?|({DeltaMinuteNumRegex}(\s+(minuten|mins|min\.?))?))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
WrittenTimeRegex: !nestedRegex
  def: (?<writtentime>({HourNumRegex}\s+{MinuteNumRegex}|(?<prefix>half)\s+({HourNumRegex})))
  references: [ HourNumRegex, MinuteNumRegex ]
TimePrefix: !nestedRegex
  def: (?<prefix>(half|{LessThanOneHour}\s+(over|voor|na)(\s+half)?)|(uur\s+{LessThanOneHour}))
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>(({OclockRegex}\s+)?({AmRegex}|{PmRegex}))|{OclockRegex})
  references: [ AmRegex, PmRegex, OclockRegex ]
TimeSuffixFull: !nestedRegex
  def: (?<suffix>(({OclockRegex}\s+)?({AmRegex}|{PmRegexFull}))|{OclockRegex})
  references: [ AmRegex, PmRegexFull, OclockRegex ]
HourDTRegEx: !nestedRegex
  def: ({BaseDateTime.HourRegex})
  references: [ BaseDateTime.HourRegex ]
MinuteDTRegEx: !nestedRegex
  def: ({BaseDateTime.MinuteRegex})
  references: [ BaseDateTime.MinuteRegex]
SecondDTRegEx: !nestedRegex
  def: ({BaseDateTime.SecondRegex})
  references: [ BaseDateTime.SecondRegex, BaseUnits.SecondRegex]
BasicTime: !nestedRegex
  def: \b(?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{HourDTRegEx}(:|\.){MinuteDTRegEx}(:{SecondDTRegEx})?|((?<prefix>half)\s+)?{HourDTRegEx}(?![.,:]?[%\d]))
  references: [ WrittenTimeRegex, HourNumRegex, HourDTRegEx, MinuteDTRegEx, SecondDTRegEx ]
MidnightRegex: !nestedRegex
  def: (?<midnight>mid\s*(-\s*)?nacht|middernacht|(in\s+)?de nacht(\s+van)?|({ApostrofsRegex}|des)\s*nachts)
  references: [ ApostrofsRegex ]
MidmorningRegex: !simpleRegex
  def: (?<midmorning>mid\s*(-\s*)?(morgen|ochtend)|halverwege de ochtend|het midden van de ochtend)
MidafternoonRegex: !simpleRegex
  def: (?<midafternoon>mid\s*(-\s*)?middag|halverwege de middag|het midden van de middag)
MiddayRegex: !nestedRegex
  def: (?<midday>(?<!gisteren|morgen)(((rond\s+)?(het|de)|{ApostrofsRegex})\s+)?middag(uur|s|loos)?|namiddag|noen|lunchtijd)
  references: [ ApostrofsRegex ]
MidTimeRegex: !nestedRegex
  def: (?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))
  references: [ MidnightRegex, MidmorningRegex, MidafternoonRegex, MiddayRegex ]
AtRegex: !nestedRegex
  def: (((?<=\bom\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}(?!\.\d)(\s*((?<iam>a)|(?<ipm>p)))?|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
IshRegex: !nestedRegex
  def: \b(tegen\s+{BaseDateTime.HourRegex}(-|——|\s*{ApostrofRegex}\s*)?en|middagloos)\b
  references: [ BaseDateTime.HourRegex, ApostrofRegex ]
TimeUnitRegex: !simpleRegex
  def: ([^A-Za-z]{1,}|\b)(?<unit>(min\.|sec\.)|(u(ur)?|minuut|seconde|(?<plural>uren|minuten|seconde[ns])|(min|sec)(?<plural>s)?)\b)
RestrictedTimeUnitRegex: !simpleRegex
  def: (?<unit>uur|minuut)\b
FivesRegex: !simpleRegex
  def: (?<tens>(vijf|tien|vijftien|twintig|vijfentwintig|vijventwintig|dertig|vijfendertig|veertig|vijfenveertig|vijftig|vijfenvijftig))\b
HourRegex: !nestedRegex
  def: \b{BaseDateTime.HourRegex}
  references: [ BaseDateTime.HourRegex ]
PeriodHourNumRegex: !simpleRegex
  def: \b(?<hour>nul|een|één|twee|drie|vier|vijf(en)?|zes|zeven|acht|negen|tien|elf|elven|twaalf|dertien|veertien|vijftien|zestien|zeventien|achttien|negentien|twintig|eenentwintig|éénentwintig|tweeentwintig|tweeëntwintig|drieëntwintig|vierentwintig)\b?
ConnectNumRegex: !nestedRegex
  def: '\b{BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\s*{DescRegex}'
  references: [ BaseDateTime.HourRegex, DescRegex ]
TimeRegexWithDotConnector: !nestedRegex
  def: ({BaseDateTime.HourRegex}(\s*\.\s*){BaseDateTime.MinuteRegex}(\s*:\s*{BaseDateTime.SecondRegex})?(\s*u\s*)?)
  references: [ BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
TimeRegexFilter: !nestedRegex
  def: \b((iedere|elke|op)(\s+andere)?\s+)?(week|dag|{SingleWeekDayRegex}|vandaag)\b
  references: [ SingleWeekDayRegex ]
TimeRegex1: !nestedRegex
  def: \b(({TimePrefix}|{AroundRegex})\s+)?(({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})(\s*{DescRegex})|(({AroundRegex})\s+){HourNumRegex}(?!\s+{SingleWeekDayRegex})\b)
  references: [ TimePrefix, WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex, AroundRegex, SingleWeekDayRegex ]
TimeRegex2: !nestedRegex
  def: (\b{TimePrefix}\s+)?(t)?{BaseDateTime.HourRegex}(\s*)?(:|\.)(\s*)?(?<min>[0-5]\d)(?!(\d|\s*(per|pro)\s*cent|%))((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?(\s*u)?((\s*{DescRegex})|\b)
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  def: (\b{TimePrefix}\s+)?{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  def: \b{TimePrefix}\s+{BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}\b
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex5: !nestedRegex
  def: \b({TimePrefix}\s+{BasicTime}|{BasicTime}\s+{TimePrefix})((\s*({DescRegex}|{TimeSuffix}))|\b)
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex6: !nestedRegex
  def: '{BasicTime}(\s*u\s*)?(\s*{DescRegex})?\s+{TimeSuffix}\b'
  references: [ BasicTime, DescRegex, TimeSuffix ]
TimeRegex7: !nestedRegex
  def: ({TimeSuffixFull}\s+(om\s+)?({TimePrefix}\s+)?(?<!van(avond|nacht)\s+){BasicTime})((\s*{DescRegex})|\b)|{BasicTime}(\s*{DescRegex})(\s*{TimeSuffixFull})
  references: [ TimeSuffixFull, BasicTime, DescRegex, WrittenTimeRegex, TimePrefix ]
TimeRegex8: !nestedRegex
  def: .^
  references: [ TimeSuffixFull, BasicTime, DescRegex ]
TimeRegex9: !nestedRegex
  def: \b{PeriodHourNumRegex}\s*{FivesRegex}((\s*{DescRegex})|\b)
  references: [ PeriodHourNumRegex, FivesRegex, DescRegex ]
TimeRegex10: !nestedRegex
  def: \b({TimePrefix}\s+)?{BaseDateTime.HourRegex}(\s*(u\b|h))(\s*{BaseDateTime.MinuteRegex})?(\s*{DescRegex})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex11: !nestedRegex
  def: \b(?<!{TimeRegexFilter}\s+)((?:({TimeTokenPrefix})?{TimeRegexWithDotConnector}(\s*({DescRegex}|{TimeSuffix})))|(?:(?:{TimeTokenPrefix}{TimeRegexWithDotConnector})(?!\s*(per|pro)\s*cent|%|\s+{TimeRegexFilter})))
  references: [ TimeTokenPrefix, TimeRegexWithDotConnector, DescRegex, TimeSuffix, TimeRegexFilter ]
TimeRegex12: !nestedRegex
  def: ({BaseDateTime.HourRegex}(?=\s+(vandaag|morgen|op)))
  references: [ BaseDateTime.HourRegex ]
FirstTimeRegexInTimeRange: !nestedRegex
  def: \b{TimeRegexWithDotConnector}(?!\s*(per|pro)\s*cent|%|\s+{TimeRegexFilter})(\s*{DescRegex})?
  references: [ TimeRegexWithDotConnector, DescRegex, TimeRegexFilter]
PureNumFromToPrefixExcluded: !nestedRegex
  def: ({HourDTRegEx}|{PeriodHourNumRegex})(\s*(?<leftDesc>({PmRegex}|{AmRegex}|{DescRegex})))?\s*{TillRegex}\s*({HourDTRegEx}|{PeriodHourNumRegex})(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex}))?
  references: [ HourDTRegEx, PeriodHourNumRegex, DescRegex, TillRegex, PmRegex, AmRegex ]
PureNumFromToPrefix: !nestedRegex
  def: (({PmRegexFull}|{AmRegex})\s+)?({RangePrefixRegex}\s+)({HourDTRegEx}|{PeriodHourNumRegex})(\s+uur)?(\s*(?<leftDesc>({PmRegex}|{AmRegex}|{DescRegex})))?\s*{RangeConnectorRegex}\s*({HourDTRegEx}|{PeriodHourNumRegex})(\s+uur)?(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex}))?
  references: [ HourDTRegEx, PeriodHourNumRegex, DescRegex, RangeConnectorRegex, PmRegex, PmRegexFull, AmRegex, RangePrefixRegex ]
PureNumFromToWithDateBefore: !nestedRegex
  def: ({RangePrefixRegex}\s+)({HourDTRegEx})(\s+(vandaag|morgen)\s+)?(\s*{RangeConnectorRegex}\s*)({HourDTRegEx})
  references: [ HourDTRegEx, PeriodHourNumRegex, DescRegex, RangeConnectorRegex, PmRegex, AmRegex, RangePrefixRegex ]
PureNumFromToWithDateAfter: !nestedRegex
  def: ({RangePrefixRegex}\s+)({HourDTRegEx})(\s*{RangeConnectorRegex}\s*)({HourDTRegEx}(\s+(vandaag|morgen))?)
  references: [ HourDTRegEx, PeriodHourNumRegex, DescRegex, RangeConnectorRegex, PmRegex, AmRegex, RangePrefixRegex ]
PureNumFromTo: !nestedRegex
  def: ({PureNumFromToPrefix}|{PureNumFromToPrefixExcluded})
  references: [ PureNumFromToPrefix, PureNumFromToPrefixExcluded, PureNumFromToWithDateAfter, PureNumFromToWithDateBefore,  ]
TimeDateFromTo: !nestedRegex
  def: ({PureNumFromToWithDateAfter}|{PureNumFromToWithDateBefore})
  references: [ PureNumFromToPrefix, PureNumFromToPrefixExcluded, PureNumFromToWithDateAfter, PureNumFromToWithDateBefore,  ]
PureNumBetweenAnd: !nestedRegex
  def: (tussen\s+)({HourDTRegEx}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{RangeConnectorRegex}\s*({HourDTRegEx}|{PeriodHourNumRegex})(?<rightDesc>\s*({PmRegex}|{AmRegex}|{DescRegex}))?
  references: [ HourDTRegEx, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex, RangeConnectorRegex ]
SpecificTimeFromTo: !nestedRegex
  def: (({PmRegexFull}|{AmRegex})\s+)?({RangePrefixRegex}\s+)?(?<time1>({TimeRegex2}|({HourDTRegEx}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{TillRegex}\s*(?<time2>({TimeRegex2}|({HourDTRegEx}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?))
  references: [ TimeRegex2, TillRegex, HourDTRegEx, PeriodHourNumRegex, DescRegex, PmRegexFull, AmRegex, RangePrefixRegex ]
SpecificTimeBetweenAnd: !nestedRegex
  def: (({PmRegexFull}|{AmRegex})\s+)?(tussen\s+)(?<time1>({TimeRegex2}|({HourDTRegEx}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?))\s*{RangeConnectorRegex}\s*(?<time2>({TimeRegex2}|({HourDTRegEx}|{PeriodHourNumRegex})(\s*(?<rightDesc>{DescRegex}))?(\s+{TimeSuffix})?))
  references: [ TimeRegex2, RangeConnectorRegex, HourDTRegEx, PeriodHourNumRegex, DescRegex, PmRegexFull, AmRegex, TimeSuffix ]
PrepositionRegex: !simpleRegex
  def: (?<prep>^(om|rond|tegen|op|van|deze)(\s+de)?$)
EarlyLateRegex: !simpleRegex
  def: \b(((?<early>vroege?|(in\s+het\s+)?(begin))|(?<late>laat|later|late|aan\s+het\s+einde?))((\s+|-)(in\s+de|op\s+de|van\s+de|deze|in|op|van|de))?)
TimeOfDayRegex: !nestedRegex
  def: (?<timeOfDay>(({EarlyLateRegex}\s+)(aanstaande\s+)?(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)\s*(ochtend|morgen|(na)?middag|avond|nacht))|(((van\s+deze\s+)|\b(in\s+(de)?\s+)|de\s+)?({EarlyLateRegex}\s+)?({ApostrofsRegex}\s+)?(ochtend(en)?|morgen|middag(en)?|avond(en)?|nacht(\s+van)?)s?((\s+|-)({EarlyLateRegex}))?)|{MealTimeRegex}|((tijdens\s+(de\s+)?)?(kantoor|werk)uren))\b
  references: [ EarlyLateRegex, MealTimeRegex, ApostrofsRegex ]
SpecificTimeOfDayRegex: !nestedRegex
  def: \b((({StrictRelativeRegex}\s+{TimeOfDayRegex})\b|\bvan(ochtend|morgen|middag|avond|nacht)))s?\b
  references: [ TimeOfDayRegex, StrictRelativeRegex ]
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){TimeUnitRegex}
  references: [ TimeUnitRegex ]
BusinessHourSplitStrings: ['werk', 'uren']
BusinessHourSplitStrings2: ['kantoor', 'uren']
NowRegex: !simpleRegex
  def: (?<!vanaf\s+)\b(?<now>nu(\s+meteen)?|zo snel mogelijk|zo spoedig mogelijk|asap|recent|onlangs|zojuist)\b
SuffixRegex: !simpleRegex
  def: ^\s*(in de\s+)?(vroege\s+|late\s+)?(ochtend|(na)?middag|avond|nacht)\b
DateTimeTimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>morgen|ochtend|(na)?middag|avond|nacht)\b
DateTimeSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+{DateTimeTimeOfDayRegex})|van(nacht|avond|middag|ochtend|morgen))\b
  references: [ DateTimeTimeOfDayRegex, RelativeRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?((in\s+de)|(op\s+de))?{DateTimeSpecificTimeOfDayRegex}
  references: [ DateTimeSpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(om|rond|tegen|op\s+de|op))?\s*$'
  references: [ DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: \b({HourNumRegex}|{BaseDateTime.HourRegex})(\s*({OclockRegex}|u))?\s*(,\s*)?((in|op)\s+de\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ HourNumRegex, BaseDateTime.HourRegex, DateTimeSpecificTimeOfDayRegex, OclockRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: '\b{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(om|rond|tegen|op(\s+de)?))?\s*(?<!van(avond|nacht)\s+)({HourNumRegex}|{BaseDateTime.HourRegex})\b'
  references: [ DateTimeSpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
SpecificEndOfRegex: !simpleRegex
  def: ((\baan\s+)?((de|het)\s+)?eind(e? van)?(\s+(de|het))?\s*$|^\s*(het\s+)?einde? van(\s+de(\s+dag)))
UnspecificEndOfRegex: !simpleRegex
  def: \b(((om|rond|tegen|op)\s+)?het\s+)?(einde?\s+van\s+(de\s+)?dag)\b
UnspecificEndOfRangeRegex: !simpleRegex
  def: \b(evj)\b
PeriodTimeOfDayRegex: !nestedRegex
  def: ((in\s+(de)?\s+)?({EarlyLateRegex}(\s+|-))?(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag|(eer)?gisteren|morgen)?(?<timeOfDay>ochtend|(na)?middag|avond|nacht))\b
  references: [ EarlyLateRegex ]
PeriodSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({StrictRelativeRegex}(\s+)?{PeriodTimeOfDayRegex})\b|\bvan(nacht|avond|(na)?middag|ochtend))\b
  references: [ PeriodTimeOfDayRegex, StrictRelativeRegex ]
PeriodTimeOfDayWithDateRegex: !nestedRegex
  def: (({TimeOfDayRegex}(\s+(om|rond|van|tegen|op(\s+de)?))?))\b
  references: [ TimeOfDayRegex ]
PeriodTimeOfDayWithDateRegexWithAnchors: !nestedRegex
  def: ((({TimeOfDayRegex}(\s+(om|rond|van|tegen|op(\s+de)?))?))(?=({MiddlePauseRegex})?\s*$)|(?<=^\s*({MiddlePauseRegex})?){TimeOfDayRegex})
  references: [ TimeOfDayRegex, MiddlePauseRegex ]
LessThanRegex: !simpleRegex
  def: \b((binnen\s+)?minder\s+dan)\b
MoreThanRegex: !simpleRegex
  def: \b((meer|langer)\s+dan|ruim)\b
DurationUnitRegex: !nestedRegex
  def: (?<unit>{DateUnitRegex}|(min\.|sec\.)|((?<half>halfuur)|(?<quarter>kwartier\s+uur)|(?<quarter>kwartier)|uur|uren|u|minuten|minuut|mins|min|m|secondes|seconden|secs|sec|s|nacht(en)?)\b)(\s+lang\b)?
  references: [ DateUnitRegex ]
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*(en|ën)(\s*een)?\s*(?<suffix_num>hal(f|ve)|kwart|kwartier)|(?<suffix_num>(een\s+)?kwartier))
PeriodicRegex: !simpleRegex
  def: \b(?<periodic>dagelijkse?|(drie)?maandelijkse?|wekelijkse?|twee-?wekelijkse?|jaarlijkse?|kwartaal)\b
EachUnitRegex: !nestedRegex
  def: (?<each>((iedere|elke|eenmaal per)(?<other>\s+andere)?\s*{DurationUnitRegex})|(({DurationUnitRegex}|{WeekDayRegex})\s+om(\s+de)?(?<other>\s+andere)?\s*(week|{DurationUnitRegex})))
  references: [ DurationUnitRegex, WeekDayRegex ]
EachPrefixRegex: !simpleRegex
  def: \b(?<each>(iedere|elke|eenmaal per)\s*$)
SetEachRegex: !simpleRegex
  def: \b(?<each>(iedere|elke|om de)\s*(?<other>\s+andere)?\s*(week)?)
SetLastRegex: !simpleRegex
  def: (?<last>volgende?|komende|aankomende|aanstaande|deze|huidige|aanstaande|vorige?|verleden|laatste)
# This regex is used to extract Set patterns like "3pm every day" where "every day" follows the time.
EachDayRegex: !simpleRegex
  def: ^\s*(iedere|elke)\s*dag\b
# This regex is used to extract Set patterns like "every day at 3pm" where "every day" preceeds the time.
BeforeEachDayRegex: !simpleRegex
  def: (iedere|elke)\s*dag\s*
DurationFollowedUnit: !nestedRegex
  def: ^\s*((?<suffix>(?<unit>(?<suffix_num>(een\s+)?kwartier)))|{SuffixAndRegex}?(\s+|-)?{DurationUnitRegex})
  references: [ SuffixAndRegex, DurationUnitRegex ]
NumberCombinedWithDurationUnit: !nestedRegex
  def: \b(?<num>\d+([.,:]\d*)?)(-)?{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AnUnitRegex: !nestedRegex
  def: \b((((nog een|een|nog)\s+(?<half>anderhalf|anderhalve|half|halve)?))|andere)\s*{DurationUnitRegex}
  references: [ DurationUnitRegex ]
DuringRegex: !simpleRegex
  def: \b(voor\s+een|gedurende\s+(het|de))\s+(?<unit>jaar|maand|week|dag)\b
AllRegex: !simpleRegex
  def: \b(?<all>((de|het|een)\s+)?((ge)?hele|volledige|ganse|heel|volledig|volle)(\s+|-)(?<unit>jaar|maand|week|dag))\b
HalfRegex: !simpleRegex
  def: (((een)\s*)|\b)(?<half>(half|halve)\s+(?<unit>jaar|maand|week|dag|uur|halfuur)|(?<unit>halfuur))\b
ConjunctionRegex: !simpleRegex
  def: \b((en(\s+voor)?)|plus)\b
HolidayList1: !nestedRegex
  def: (?<holiday>goede vrijdag|pasen|((eerste|tweede)\s+)?paasdag|paas(zondag|maandag)|kerst|kerstavond|kerstmis|thanksgiving|halloween|(islamitisch\s+)?nieuwjaar|oud en nieuw|oud & nieuw|pinksteren|oude?jaar|oude?jaarsavond|silvester|silvesteravond|sinterklaas|sinterklaasfeest|sinterklaasavond|pakjesavond|eid al(-|\s+)fitr|eid al(-|\s+)adha)
  references: [ YearRegex, RelativeRegex ]
HolidayList2: !nestedRegex
  def: (?<holiday>black friday|cyber monday|nationale dodenherdenking|nationale herdenking|dodenherdenking|dag van de leraar|dag van de leerkracht(en)?|dag van de arbeid|feest van de arbeid|yuandan|valentijn|sint-maartensfeest|sint-maarten|driekoningen|keti(\s+|-)?koti|ramadan|suikerfeest|offerfeest|allerheiligen|allerheiligenavond|franse nationale feestdag|bestorming van de bastille)
  references: [ YearRegex, RelativeRegex ]
HolidayList3: !nestedRegex # -dag suffix
  def: (?<holiday>(martin luther king|mlk|dankzeggings|valentijns|nieuwjaars|(eerste|1e|tweede|2e)\s+paas|prinsjes|konings|koninginne|bevrijdings|hemelvaarts|(eerste|1e|tweede|2e)\s+kerst|vader|moeder|meisjes|(amerikaanse|us\s+)?onafhankelijk(heid)?s|(nederlandse\s+)?veteranen|boomplant|(nationale\s+)?boomfeest)dag)
  references: [ YearRegex, RelativeRegex ]
# Combined holiday regex
HolidayRegex: !nestedRegex
  def: \b(({StrictRelativeRegex}\s+({HolidayList1}|{HolidayList2}|{HolidayList3}))|(({HolidayList1}|{HolidayList2}|{HolidayList3})(\s+(van\s+)?({YearRegex}|{RelativeRegex}\s+jaar))?))\b
  references: [ HolidayList1, HolidayList2, HolidayList3, YearRegex, RelativeRegex, StrictRelativeRegex ]
AMTimeRegex: !nestedRegex
  def: (?<am>{ApostrofsRegex}\s*(morgens|ochtends)|in\s+de\s+(morgen|ochtend))
  references: [ ApostrofsRegex ]
PMTimeRegex: !nestedRegex
  def: (?<pm>{ApostrofsRegex}\s*(middags|avonds|nachts)|(in\s+de\s+)?(deze\s+)?((na)?middag|avond|nacht))\b
  references: [ ApostrofsRegex ]
MorningTimeRegex: !simpleRegex
  def: (morgens?|ochtends?)
NightTimeRegex: !simpleRegex
  def: (nacht)
NowTimeRegex: !simpleRegex
  def: \b(nu)\b
RecentlyTimeRegex: !simpleRegex
  def: \b(kort\s+geleden|eerder)\b
AsapTimeRegex: !simpleRegex
  def: \b(zo\s+snel\s+mogelijk|zsm)\b
InclusiveModPrepositions: !simpleRegex
  def: (?<include>((in|tegen|tijdens|op|om)\s+of\s+)|(\s+of\s+(in|tegen|tijdens|op)))
AfterRegex: !nestedRegex
  def: (\b{InclusiveModPrepositions}?((na(\s+afloop\s+van)?|(?<!niet\s+)later\s+dan)|(jaar\s+na)|(het\s+)?jaar hoger dan)(?!\s+of\s+gelijk\s+aan){InclusiveModPrepositions}?\b\s*)|(?<!\w|<)((?<include>>=)|>)
  references: [ InclusiveModPrepositions ]
BeforeRegex: !nestedRegex
  def: (\b(?<!afspraak\s*){InclusiveModPrepositions}?(voor|vóór|vooraf(gaand?)?\s+aan|(niet\s+later|vroeger|eerder)\s+dan|eindigend\s+(op|met)|tegen|tot(dat)?|uiterlijk|(?<include>(al\s+)?zo\s+laat\s+als)){InclusiveModPrepositions}?\b\s*)|(?<!\w|>)((?<include><=)|<)
  references: [ InclusiveModPrepositions ]
SinceRegex: !simpleRegex
  def: (\b(sinds|na\s+of\s+gelijk\s+aan|(startend|beginnend)\s+(vanaf|op|met)|(al\s+)?zo\s+vroeg\s+als|(elk|ieder)\s+moment\s+vanaf|een\s+tijdstip\s+vanaf)\b\s*)|(?<!\w|<)(>=)
AroundRegex: !simpleRegex
  def: (\b(rond(om)?|ongeveer(\s+om)?)\s*\b)
AgoRegex: !simpleRegex
  def: \b(geleden|(voor|eerder\s+dan)\s+(?<day>gisteren|vandaag))\b
LaterRegex: !simpleRegex
  def: \b(later|vanaf\s+nu|(vanaf|na|sedert)\s+(?<day>morgen|vandaag))\b
BeforeAfterRegex: !simpleRegex
  def: ^[.]
ModPrefixRegex: !nestedRegex
  def: \b({RelativeRegex}|{AroundRegex}|{BeforeRegex}|{AfterRegex}|{SinceRegex})\b
  references: [RelativeRegex, AroundRegex, BeforeRegex, AfterRegex, SinceRegex ]
ModSuffixRegex: !nestedRegex
  def: \b({AgoRegex}|{LaterRegex}|{BeforeAfterRegex}|{FutureSuffixRegex}|{PastSuffixRegex})\b
  references: [AgoRegex, LaterRegex, BeforeAfterRegex, FutureSuffixRegex, PastSuffixRegex]
InConnectorRegex: !simpleRegex
  def: \b(in|over|na)(\s+de)?\b
SinceYearSuffixRegex: !nestedRegex
  def: (^\s*{SinceRegex}((vanaf|sedert|sinds)\s+(het\s+)?jaar\s+)?{YearSuffix})
  references: [ SinceRegex, YearSuffix ]
WithinNextPrefixRegex: !nestedRegex
  def: \b((binnen)(\s+de|het)?(\s+(?<next>{NextPrefixRegex}))?)\b
  references: [ NextPrefixRegex ]
TodayNowRegex: !simpleRegex
  def: \b(vandaag|nu)\b
# "next" group here is used to judge for illegal cases like "within the next 5 days before today"
MorningStartEndRegex: !nestedRegex
  def: (^(({ApostrofsRegex}|des)\s+(morgens|ochtends)|in\s+de\s+(na)?(morgen|ochtend)|deze\s+(morgen|ochtend)|(morgen|ochtend)\s+in\s+het\s+begin|aan\s+het\s+einde?(\s+van(\s+de)?)?\s+(morgen|ochtend)|{AmDescRegex}|(morgen|ochtend)))|((({ApostrofsRegex}|des)\s+(morgens|ochtends)|deze\s+(morgen|ochtend)|in\s+de\s+(na)?(morgen|ochtend)|(morgen|ochtend)\s+in\s+het\s+begin|(morgen|ochtend)\s+aan\s+het\s+einde?|{AmDescRegex}|(morgen|ochtend))$)
  references: [ ApostrofsRegex, AmDescRegex ]
AfternoonStartEndRegex: !nestedRegex
  def: (^(({ApostrofsRegex}|des)\s+middags|in\s+de\s+(na)?middag|deze\s+middag|aan\s+het\s+einde?(\s+van(\s+de)?)?\s+middag|{PmDescRegex}))|((({ApostrofsRegex}|des)?\s+middags|in\s+de\s+(na)?middag|deze\s+middag|middag\s+in\s+het\s+begin|middag\s+aan\s+het\s+einde?|{PmDescRegex}|middag)$)
  references: [ ApostrofsRegex, PmDescRegex ]
EveningStartEndRegex: !nestedRegex
  def: (^(({ApostrofsRegex}|des)\s+avonds|in\s+de\s+(na)?avond|deze\s+avond|avond\s+in\s+het\s+begin|aan\s+het\s+einde?(\s+van(\s+de)?)?\s+avond|{PmDescRegex}|avond))|((({ApostrofsRegex}|des)?\s+avonds|deze\s+avond|in\s+de\s+(na)?avond|avond\s+in\s+het\s+begin|avond\s+aan\s+het\s+einde?|{PmDescRegex}|avond)$)
  references: [ ApostrofsRegex, PmDescRegex ]
NightStartEndRegex: !nestedRegex
  def: (^(gedurende de nacht|vannacht|nacht|({ApostrofsRegex}|des)?\s+nachts))|((gedurende\s+de\s+nacht|vannacht|({ApostrofsRegex}|des)?\s+nachts|nacht\s+in\s+het\s+begin|nacht)$)
  references: [ ApostrofsRegex ]
InexactNumberRegex: !simpleRegex
  def: \b((een\s+)?aantal|meerdere|enkele|verscheidene|wat|enige|(?<NumTwoTerm>(een\s+)?paar))\b
InexactNumberUnitRegex: !nestedRegex
  def: ({InexactNumberRegex})\s+({DurationUnitRegex})
  references: [InexactNumberRegex, DurationUnitRegex]
RelativeTimeUnitRegex: !nestedRegex
  def: ((({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+({TimeUnitRegex}))|((de|het|mijn))\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, TimeUnitRegex, RestrictedTimeUnitRegex]
RelativeDurationUnitRegex: !nestedRegex
  def: (((?<=({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+)({DurationUnitRegex}))|((the|my))\s+({RestrictedTimeUnitRegex}))
  references: [NextPrefixRegex, PreviousPrefixRegex, ThisPrefixRegex, DurationUnitRegex, RestrictedTimeUnitRegex]
ReferenceDatePeriodRegex: !nestedRegex
  def: \b{ReferencePrefixRegex}\s+(?<duration>week|maand|jaar|decennium|weekend)\b
  references: [ReferencePrefixRegex]
ConnectorRegex: !simpleRegex
  def: ^(-|,|voor|t|rond(om)?|@)$
FromToRegex: !simpleRegex
  def: \b(van(af)?).+(tot)\b.+
SingleAmbiguousMonthRegex: !simpleRegex
  def: ^(de\s+)?(mei)$
# Filter ambiguous single word datetime extractions in CalendarMode or when adding the modifier
SingleAmbiguousTermsRegex: !simpleRegex
  def: ^(de\s+)?(dag|week|maand|jaar)$
UnspecificDatePeriodRegex: !simpleRegex
  def: ^(week|weekend|maand|jaar)$
PrepositionSuffixRegex: !simpleRegex
  def: \b((op|in)(\s+de)?|om|rond(om)?|van|tot)$
FlexibleDayRegex: !simpleRegex
  def: (?<DayOfMonth>([A-Za-zë]+\s)?[A-Za-zë\d]+?(ste|de|e))
ForTheRegex: !nestedRegex
  def: \b((((?<=voor\s+)de\s+{FlexibleDayRegex})|((?<=op\s+)de\s+{FlexibleDayRegex}(?<=(ste|de|e))))(?<end>(\s+(tussen|binnen|terug|tegen|aan|uit|mee|bij|vol|uit|aan|op|in|na|af)\s*)?(\s+(ge\w\w\w+|\w\w\w+en)\s*)?(,|\.|!|\?|$)))
  references: [ FlexibleDayRegex ]
WeekDayAndDayOfMonthRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+(de\s+{FlexibleDayRegex})\b
  references: [WeekDayRegex, FlexibleDayRegex]
WeekDayAndDayRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+{DayRegex}(?!([-]|:\d+|\.\d+|(\s+({AmDescRegex}|{PmDescRegex}|{OclockRegex}))))\b
  references: [WeekDayRegex, DayRegex, AmDescRegex, PmDescRegex, OclockRegex]
RestOfDateRegex: !simpleRegex
  def: \brest\s+(van\s+)?((de|het|mijn|dit|deze|(de\s+)?huidige)\s+)?(?<duration>week|maand|jaar|decennium)\b
RestOfDateTimeRegex: !simpleRegex
  def: \brest\s+(van\s+)?((de|het|mijn|dit|deze|(de\s+)?huidige)\s+)?(?<unit>vandaag|dag)\b
MealTimeRegex: !simpleRegex
  def: \b((tijdens\s+de\s+)?(?<mealTime>lunch)|((om|tegen)\s+)?(?<mealTime>lunchtijd))\b
AmbiguousRangeModifierPrefix: !simpleRegex
  def: (voor)
PotentialAmbiguousRangeRegex: !nestedRegex
  def: \b{AmbiguousRangeModifierPrefix}(.+\b(boven|later|groter|erna|daarna|hoger|(?<!de\s+)({DateUnitRegex}|uur|uren|minuten|minuut|mins|min|secondes|seconden|secs|sec|nacht(en)?)|van(af)?|tussen|tot(dat|\s+en\s+met)?|gedurende|tijdens|ten tijde van|(?<ambiguous>{BaseDateTime.RangeConnectorSymbolRegex}))\b)
  references: [ AmbiguousRangeModifierPrefix, BaseDateTime.RangeConnectorSymbolRegex, DateUnitRegex ]
NumberEndingPattern: !nestedRegex
  def: ^(\s+((?<meeting>vergadering|afspraak|conferentie|telefoontje|skype-gesprek)\s+)?(om|naar)\s+(?<newTime>{PeriodHourNumRegex}|{HourRegex})((\.)?$|(\.,|,|!|\?)))
  references: [PeriodHourNumRegex, HourRegex]
OneOnOneRegex: !simpleRegex
  def: \b(1\s*:\s*1)|(één\s+(op\s)één|één\s*-\s*één|één\s*:\s*één)\b
LaterEarlyPeriodRegex: !nestedRegex
  def: \b({PrefixPeriodRegex})\s*\b\s*(?<suffix>{OneWordPeriodRegex})\b
  references: [PrefixPeriodRegex, OneWordPeriodRegex]
WeekWithWeekDayRangeRegex: !nestedRegex
  def: \b((?<week>({NextPrefixRegex}|{PreviousPrefixRegex}|deze)\s+week)((\s+tussen\s+{WeekDayRegex}\s+en\s+{WeekDayRegex})|(\s+van\s+{WeekDayRegex}\s+tot\s+{WeekDayRegex})))\b
  references: [NextPrefixRegex, PreviousPrefixRegex, WeekDayRegex]
GeneralEndingRegex: !simpleRegex
  def: ^\s*((\.,)|\.|,|!|\?)?\s*$
MiddlePauseRegex: !simpleRegex
  def: \s*(,)\s*
DurationConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+|en|,)\s*$
PrefixArticleRegex: !simpleRegex
  def: \bde\s+
OrRegex: !simpleRegex
  def: \s*((\b|,\s*)(of|en)\b|,)\s*
YearPlusNumberRegex: !nestedRegex
  def: \b(jaar\s+((?<year>(\d{3,4}))|{FullTextYearRegex}))\b
  references: [ FullTextYearRegex ]
NumberAsTimeRegex: !nestedRegex
  def: \b({WrittenTimeRegex}|{PeriodHourNumRegex}|{BaseDateTime.HourRegex})\b
  references: [ WrittenTimeRegex, PeriodHourNumRegex, BaseDateTime.HourRegex ]
TimeBeforeAfterRegex: !nestedRegex
  def: \b(((?<=\b(voor|niet later dan|na|door)\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
DateNumberConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+om)\s*$
DecadeRegex: !simpleRegex
  def: (?<decade>(nul|tien|twintig|dertig|veertig|vijftig|zestig|zeventig|tachtig|negentig)|(fifties|sixties|seventies|eighties|nineties|zeroes|tens|tweeduizend|(ee|éé)nentwintigste\s+eeuw))
DecadeWithCenturyRegex: !nestedRegex
  def: \b(de\s+)?(jaren\s+)?((?<!\$)((?<=\b(de|jaren)\s+)(?<century>1\d|2\d|\d)?({ApostrofRegex})?(?<decade>\d0)({ApostrofRegex})?s?)(?!%)\b|(({CenturyRegex}(\s+|-)?(en\s+)?|(?<=\b(de|jaren)\s+)){DecadeRegex})|({CenturyRegex}(\s+|-)?(en\s+)?(?<decade>tien|honderd)))
  references: [ CenturyRegex, DecadeRegex, ApostrofRegex ]
RelativeDecadeRegex: !nestedRegex
  def: \b(((de|het)\s+)?{RelativeRegex}\s+((?<number>[\w,]+)\s+)?decenni(a|um)?)\b
  references: [ RelativeRegex ]
SuffixAfterRegex: !simpleRegex
  def: \b(((bij)\s)?(of|en)\s+(boven|later|groter|erna|daarna|hoger)(?!\s+dan))\b
DateAfterRegex: !simpleRegex
  def: \b((of|en)\s+(hoger|later|groter)(?!\s+dan))\b
YearPeriodRegex: !nestedRegex
  def: ((((van(af)?|tijdens|gedurende|in)\s+)?{YearRegex}\s*({TillRegex})\s*{YearRegex})|(((tussen)\s+){YearRegex}\s*({RangeConnectorRegex})\s*{YearRegex}))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]
ComplexDatePeriodRegex: !nestedRegex
  def: (((van(af)?|tijdens|gedurende|in(\s+de)?)\s+)?(?<start>.+)\s*({TillRegex})\s*(?<end>.+)|((tussen)\s+)(?<start>.+)\s*({RangeConnectorRegex})\s*(?<end>.+))
  references: [ YearRegex, TillRegex, RangeConnectorRegex ]
UnitMap: !dictionary
  types: [ string, string ]
  entries:
    millennium: 1000Y
    eeuw: 100Y
    centennium: 100Y
    decennium: 10Y
    decennia: 10Y
    jaren: Y
    jaar: Y
    jr: Y
    maanden: MON
    maand: MON
    mnd: MON
    weken: W
    week: W
    dagen: D
    dag: D
    vandaag: D
    dgn: D
    nachten: D
    nacht: D
    uren: H
    uur: H
    u: H
    minuten: M
    minuut: M
    min: M
    min.: M
    secondes: S
    seconden: S
    seconde: S
    secs: S
    sec: S
    kwartier: H
    kwartier uur: H
    halfuur: H
UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    decennium: 315360000
    decennia: 315360000
    decenniën: 315360000
    jaren: 31536000
    jaar: 31536000
    jr: 31536000
    maanden: 2592000
    maand: 2592000
    mnd: 2592000
    weken: 604800
    week: 604800
    dagen: 86400
    dag: 86400
    vandaag: 86400
    dgn: 86400
    nachten: 86400
    nacht: 86400
    werkdagen: 86400
    werkdag: 86400
    uren: 3600
    uur: 3600
    u: 3600
    minuten: 60
    minuut: 60
    min: 60
    min.: 60
    secondes: 1
    seconden: 1
    seconde: 1
    secs: 1
    sec: 1
    kwartier: 3600
    kwartier uur: 3600
    halfuur: 3600
# TODO: modify below regex according to the counterpart in English
SpecialYearPrefixesMap: !dictionary
  types: [ string, string ]
  entries:
    '': ''
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    lente: SP
    zomer: SU
    herfst: FA
    winter: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int]
  entries:
    eerste: 1
    1e: 1
    1ste: 1
    tweede: 2
    2e: 2
    2de: 2
    derde: 3
    3e: 3
    3de: 3
    vierde: 4
    4e: 4
    4de: 4
    vijfde: 5
    5e: 5
    5de: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries:
    maandag: 1
    dinsdag: 2
    woensdag: 3
    donderdag: 4
    vrijdag: 5
    zaterdag: 6
    zondag: 0
    zondagmiddag: 0
    maandagen: 1
    dinsdagen: 2
    woensdagen: 3
    donderdagen: 4
    vrijdagen: 5
    zaterdagen: 6
    zondagen: 0
    ma: 1
    ma.: 1
    dins: 2
    dins.: 2
    woens: 3
    woens.: 3
    di: 2
    di.: 2
    wo: 3
    wo.: 3
    woe: 3
    woe.: 3
    do: 4
    do.: 4
    vr: 5
    vr.: 5
    vrij: 5
    vrij.: 5
    za: 6
    za.: 6
    zat: 6
    zat.: 6
    zo: 0
    zo.: 0
    zon: 0
    zon.: 0
    monday: 1
    tuesday: 2
    wednesday: 3
    thursday: 4
    friday: 5
    saturday: 6
    sunday: 0
    mon: 1
    tue: 2
    tues: 2
    wed: 3
    wedn: 3
    weds: 3
    thu: 4
    thur: 4
    thurs: 4
    fri: 5
    sat: 6
    sun: 0
MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'januari': 1
    'februari': 2
    'maart': 3
    'april': 4
    'mei': 5
    'juni': 6
    'juli': 7
    'augustus': 8
    'september': 9
    'oktober': 10
    'november': 11
    'december': 12
    'jan': 1
    'feb': 2
    'mar': 3
    'mrt': 3
    'apr': 4
    'jun': 6
    'jul': 7
    'aug': 8
    'sep': 9
    'sept': 9
    'oct': 10
    'okt': 10
    'nov': 11
    'dec': 12
    'jan.': 1
    'feb.': 2
    'mar.': 3
    'mrt.': 3
    'apr.': 4
    'jun.': 6
    'jul.': 7
    'aug.': 8
    'sep.': 9
    'sept.': 9
    'oct.': 10
    'okt.': 10
    'nov.': 11
    'dec.': 12
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    'nul': 0
    'een': 1
    'één': 1
    'twee': 2
    'drie': 3
    'vier': 4
    'vijf': 5
    'zes': 6
    'zeven': 7
    'acht': 8
    'negen': 9
    'tien': 10
    'elf': 11
    'elven': 11
    'twaalf': 12
    'dertien': 13
    'veertien': 14
    'vijftien': 15
    'zestien': 16
    'zeventien': 17
    'achttien': 18
    'negentien': 19
    'twintig': 20
    'eenentwintig': 21
    'éénentwintig': 21
    'tweeentwintig': 22
    'tweeëntwintig': 22
    'drieëntwintig': 23
    'vierentwintig': 24
    'vijfentwintig': 25
    'vijventwintig': 25
    'zesentwintig': 26
    'zevenentwintig': 27
    'achtentwintig': 28
    'negenentwintig': 29
    'dertig': 30
    'eenendertig': 31
    'tweeëndertig': 32
    'drieëndertig': 33
    'vierendertig': 34
    'vijfendertig': 35
    'zesendertig': 36
    'zevenendertig': 37
    'achtendertig': 38
    'negenendertig': 39
    'veertig': 40
    'eenenveertig': 41
    'tweeënveertig': 42
    'drieënveertig': 43
    'vierenveertig': 44
    'vijfenveertig': 45
    'zesenveertig': 46
    'zevenenveertig': 47
    'achtenveertig': 48
    'negenenveertig': 49
    'eenenvijftig': 50
    'vijftig': 51
    'tweeënvijftig': 52
    'drieënvijftig': 53
    'vierenvijftig': 54
    'vijfenvijftig': 55
    'zesenvijftig': 56
    'zevenenvijftig': 57
    'achtenvijftig': 58
    'negenenvijftig': 59
    'zestig': 60
    'eenenzestig': 61
    'tweeënzestig': 62
    'drieënzestig': 63
    'vierenzestig': 64
    'vijfenzestig': 65
    'zesenzestig': 66
    'zevenenzestig': 67
    'achtenzestig': 68
    'negenenzestig': 69
    'zeventig': 70
    'eenenzeventig': 71
    'tweeënzeventig': 72
    'drieënzeventig': 73
    'vierenzeventig': 74
    'vijfenzeventig': 75
    'zesenzeventig': 76
    'zevenenzeventig': 77
    'achtenzeventig': 78
    'negenenzeventig': 79
    'tachtig': 80
    'eenentachtig': 81
    'tweeëntachtig': 82
    'drieëntachtig': 83
    'vierentachtig': 84
    'vijfentachtig': 85
    'zesentachtig': 86
    'zevenentachtig': 87
    'achtentachtig': 88
    'negenentachtig': 89
    'negentig': 90
    'eenennegentig': 91
    'tweeënnegentig': 92
    'drieënnegentig': 93
    'vierennegentig': 94
    'vijfennegentig': 95
    'zesennegentig': 96
    'zevenennegentig': 97
    'achtennegentig': 98
    'negenennegentig': 99
    'honderd': 100
DayOfMonth: !dictionary
  types: [ string, int ]
  entries:
    '1e': 1
    '1ste': 1
    '2e': 2
    '2de': 2
    '3e': 3
    '3de': 3
    '4e': 4
    '4de': 4
    '5e': 5
    '5de': 5
    '6e': 6
    '6de': 6
    '7e': 7
    '7de': 7
    '8e': 8
    '8de': 8
    '9e': 9
    '9de': 9
    '10e': 10
    '10de': 10
    '11e': 11
    '11de': 11
    '12e': 12
    '12de': 12
    '13e': 13
    '13de': 13
    '14e': 14
    '14de': 14
    '15e': 15
    '15de': 15
    '16e': 16
    '16de': 16
    '17e': 17
    '17de': 17
    '18e': 18
    '19e': 19
    '20e': 20
    '21e': 21
    '22e': 22
    '23e': 23
    '24e': 24
    '25e': 25
    '26e': 26
    '27e': 27
    '28e': 28
    '29e': 29
    '30e': 30
    '31e': 31
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries:
    half: 0.5
    anderhalf: 1.5
    anderhalve: 1.5
    halve: 0.5
    een kwartier: 0.25
    kwartier: 0.25
    kwart: 0.25
    driekwart: 0.75
    'drie kwart': 0.75
    kwartaal: 0.25
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries:
    # Dutch specific Holidays
    kingsday: [ koningsdag ] # 27 april
    queensday: [ koninginnedag ] # 30 april
    prinsjesdag: [ prinsjesdag ] # 3rd Tuesday of September
    dodenherdenking: [ nationaledodenherdenking, nationaleherdenking, dodenherdenking] # 4 May
    bevrijdingsdag: [ bevrijdingsdag ] # 5 May
    teachersday: [ dagvandeleraar, dagvandeleerkracht,dagvandeleerkrachten ] # Dutch Teachersday is on a different date - 5 October
    veteransday: [ nederlandseveteranendag, veteranendag ] # Dutch Veteranendag is on a different date - last Saturday of June
    eerstekerstdag: [ eerstekerstdag, 1ekerstdag ] # 25 May
    tweedekerstdag: [ tweedekerstdag, 2ekerstdag ] # 26 May
    dagvandearbeid: [ dagvandearbeid, feestvandearbeid ] # 1 May
    treeplantingday: [ nationaleboomfeestdag, boomfeestdag, boomplantdag ] # 3rd Wednesday in March
    sinterklaas: [ sinterklaas, sinterklaasavond, sinterklaasfeest, pakjesavond ] # 5 December
    driekoningen: [ driekoningen] # 6 January
    ketikoti: [ ketikoti, keti-koti] # 1 July
    # International Holidays
    stmartinsday: [ sint-maartensfeest, sint-maarten] # 11 November
    ascensionday: [ hemelvaartsdag ] # 39 Days after Easter
    whitesunday: [ pinksteren ]
    christmas: [ kerstfeest, kerstmis, kerst, xmas ]
    easterday: [ pasen, eerstepaasdag, paasdag, paaszondag ]
    eastermonday: [ tweedepaasdag, paasmaandag ]
    fathers: [ vaderdag ]
    goodfriday: [ goedevrijdag ]
    mothers: [ moederdag ]
    newyear: [ nieuwjaar ]
    newyearday: [ nieuwjaarsdag]
    newyearsday: [ nieuwjaarsdag ]
    newyeareve: [ oudjaar, oudejaar, oudejaarsavond, oudjaarsavond, silvester, silvesteravond, oudennieuw, oud&nieuw ]
    valentinesday: [ valentijnsdag, valetijnsdag ]
    independenceday: [ onafhankelijkheidsdag, onafhankelijksdag ]
    bastilleday: [ fransenationalefeestdag, bestormingvandebastille ] # 14 July
    halloweenday: [ halloween, allerheiligenavond ]
    allhallowday: [ allerheiligen ]
    allsoulsday: [ allerzielen ]
    christmaseve: [ kerstavond ]
    yuandan: [ yuandan ]
    chinesenewyear: [chineesnieuwjaar, lentefestival, lentefeest] # Not implemented yet
    # Islamic Holidays
    ramadan: [ ramadan ] 
    eidalfitr: [ eidalfitr, suikerfeest ]
    sacrifice: [ eidaladha, offerfeest ]
    islamicnewyear: [ islamitischnieuwjaar ]
    # US Holidays, not celebrated extensively in the Netherlands
    thanksgiving: [ thanksgivingday, thanksgiving, dankzeggingsdag ]
    martinlutherking: [ martinlutherkingday, martinlutherkingjrday, martinlutherkingdag, mlkdag ]
    usindependenceday: [ amerikaanseonafhankelijkheidsdag, usonafhankelijkheidsdag ]
    blackfriday: [ blackfriday ]
    cybermonday: [ cybermonday ]
WrittenDecades: !dictionary
  types: [ string, int ]
  entries:
    'jaren 0': 0
    'jaren nul': 0
    'jaren 10': 10
    'jaren tien': 10
    'jaren 20': 20
    'jaren twintig': 20
    'twintiger jaren': 20
    'jaren 30': 30
    'jaren dertig': 30
    'dertiger jaren': 30
    'jaren 40': 40
    'jaren veertig': 40
    'veertiger jaren': 40
    'jaren 50': 50
    'jaren vijftig': 50
    'vijftiger jaren': 50
    'jaren 60': 60
    'jaren zestig': 60
    'zestiger jaren': 60
    'jaren 70': 70
    'jaren zeventig': 70
    'zeventiger jaren': 70
    'jaren 80': 80
    'jaren tachtig': 80
    'tachtiger jaren': 80
    'jaren 90': 90
    'jaren negentig': 90
    'nul': 0
    'tien': 10
    'twintig': 20
    'twintiger': 20
    'dertig': 30
    'dertiger': 30
    'veertig': 40
    'veertiger': 40
    'vijftig': 50
    'vijftiger': 50
    'zestig': 60
    'zestiger': 60
    'zeventig': 70
    'zeventiger': 70
    'tachtig': 80
    'tachtiger': 80
    'negentig': 90
    'negentiger': 90
    'honderd': 0
    #TODO Aanvullen met 19e eeuw etc?
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  entries:
    '21e eeuw': 2000
    'eenentwintigste eeuw': 2000
    'tweeduizend': 2000
    'jaren nul': 0
    'nul': 0
DefaultLanguageFallback: 'DMY'
SuperfluousWordList: !list
  types: [ string ]
  entries:
    - preferably
    - how about
    - maybe
    - say
    - like
# For DurationDateRestrictions, only translate these terms if this particular circumstance applies in the target language. If not, keep it empty.
DurationDateRestrictions: [vandaag, nu]
# Cases collected from mined data
AmbiguityFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    '^\d{4}$': '(\d\.\d{4}|\d{4}\.\d)'
    '\b(lunch)$': '(?<!\b(op|om|voor|na(ar)?|rond)\b\s)(lunch)'
    '^(morgen|middag|avond|nacht|dag)\b': '\b(goe[di]en?\s*(morgen|middag|avond|nacht|dag))\b'
# Used to exclude ambiguous time/duration patterns
# TODO: Add more patterns to improve coverage
AmbiguityTimeFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    '^(\d{1,2}|\p{L}+)\s+uur$': '(?<LB>(?<!\b(om|is|vanaf|morgen|vandaag|gisteren|\d+)(\s+(\d{1,2}|\p{L}+)\s+uur\s+(of|en))?\s+)\b(\d{1,2}|\p{L}+)\s+uur\b)(?(LB)(?!\s+(tot|morgen|vandaag|gisteren|\d+)\b))'
# For TimeOfDay resolution
MorningTermList: !list
  types: [ string ]
  entries:
    - morgen # ambiguous (morning vs tomorrow)
    - morgens
    - ochtend
    - ochtends
AfternoonTermList: !list
  types: [ string ]
  entries:
    - middag
    - namiddag
    - voormiddag
EveningTermList: !list
  types: [ string ]
  entries:
    - avond
    - avonden
DaytimeTermList: !list
  types: [ string ]
  entries:
    - dag
    - overdag
NightTermList: !list
  types: [ string ]
  entries:
    - nacht
SameDayTerms: !list
  types: [ string ]
  entries:
    - vandaag
    - huidige dag
    - huidige datum
    - actuele datum
    - actuele dag
    - deze morgen
    - actuele morgen
    - vanmorgen
PlusOneDayTerms: !list
  types: [ string ]
  entries:
    - morgen
    - dag na
    - dag erna
    - volgende dag
    - morgenochtend
    - morgenavond
MinusOneDayTerms: !list
  types: [ string ]
  entries:
    - gisteren
    - dag voor
    - dag ervoor
    - vorige dag
    - gisterenochtend
    - gisterenavond
PlusTwoDayTerms: !list
  types: [ string ]
  entries:
    - overmorgen
    - dag na morgen
MinusTwoDayTerms: !list
  types: [ string ]
  entries:
    - eergisteren
# For DatePeriodParserConfiguration Logic
FutureTerms: !list
  types: [ string ]
  entries:
    - deze
    - volgend
    - volgende
    - dit
    - die
LastCardinalTerms: !list
  types: [ string ]
  entries:
    - vorige
    - laatste
MonthTerms: !list
  types: [ string ]
  entries:
    - maand
    - maanden
MonthToDateTerms: !list
  types: [ string ]
  entries:
    - maand tot heden
    - maand tot op heden
    - vanaf vorig maandeinde
WeekendTerms: !list
  types: [ string ]
  entries:
    - weekend
    - weekenden
WeekTerms: !list
  types: [ string ]
  entries:
    - week
YearTerms: !list
  types: [ string ]
  entries:
    - jaar
    - jaren
GenericYearTerms: !list
  types: [ string ]
  entries:
    - j
YearToDateTerms: !list
  types: [ string ]
  entries:
    - jaar tot heden
    - jaar tot op heden
    - vanaf vorig jaareinde
DayTypeRegex: !simpleRegex
  def: ^(dag(elijkse?)?)$
WeekTypeRegex: !simpleRegex
  def: ^(wekelijkse?|week)$
BiWeekTypeRegex: !simpleRegex
  def: ^(tweewekelijkse?)$
MonthTypeRegex: !simpleRegex
  def: ^(maand(elijkse?)?)$
QuarterTypeRegex: !simpleRegex
  def: ^(kwartaal|driemaandelijkse?)$
YearTypeRegex: !simpleRegex
  def: ^(elk\s+jaar|jaar(lijkse?)?)$
...
