---
#ISO 639-2 Code
LangMarker: Fre
CheckBothBeforeAfter: !bool false
TillRegex: !simpleRegex
  def: (?<till>au|et|(jusqu')?[aà]|avant|--|-|—|——)
RangeConnectorRegex : !simpleRegex
  def: (?<and>de la|au|[aà]|et(\s*la)?|--|-|—|——)
RelativeRegex: !simpleRegex
  def: (?<order>prochaine?|de|du|ce(tte)?|l[ae]|derni[eè]re|hier|pr[eé]c[eé]dente|au\s+cours+(de|du\s*))
StrictRelativeRegex: !simpleRegex
  def: (?<order>prochaine?|derni[eè]re|hier|pr[eé]c[eé]dente|au\s+cours+(de|du\s*))
NextSuffixRegex: !simpleRegex
  def: (?<order>prochain(es?)?|suivante)\b
PastSuffixRegex: !simpleRegex
  def: (?<order>derni[eè]r(es?)?|pr[eé]c[eé]dente)\b
ThisPrefixRegex: !simpleRegex
  def: (?<order>ce(tte)?|au\s+cours+(du|de))\b
RangePrefixRegex: !simpleRegex
  def: (du|depuis|des?|entre)
DayRegex: !simpleRegex
  def: (?<day>(?:3[0-1]|[1-2]\d|0?[1-9])(e(r)?)?)(?=\b|t)
WrittenDayRegex: !simpleRegex
  def: (?<day>((vingt|trente)(\s*-\s*|\s+)et(\s*-\s*|\s+))?un|(vingt(\s*-\s*|\s+))?(deux|trois|quatre|cinq|six|sept|huit|neuf)|dix|onze|douze|treize|quatorze|quinze|seize|dix-(sept|huit|neuf)|vingt|trente)
MonthNumRegex: !simpleRegex
  def: (?<month>1[0-2]|(0)?[1-9])\b
SpecialDescRegex: !simpleRegex
  def: (p\b)
AmDescRegex: !nestedRegex
  def: (h\b|{BaseDateTime.BaseAmDescRegex})
  references: [BaseDateTime.BaseAmDescRegex]
PmDescRegex: !nestedRegex
  def: (h\b|{BaseDateTime.BasePmDescRegex})
  references: [BaseDateTime.BasePmDescRegex]
AmPmDescRegex: !nestedRegex
  def: (h\b|{BaseDateTime.BaseAmPmDescRegex})
  references: [BaseDateTime.BaseAmPmDescRegex]
DescRegex: !nestedRegex
  def: (?<desc>{AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex})
  references: [AmDescRegex, PmDescRegex, AmPmDescRegex, SpecialDescRegex]
TwoDigitYearRegex: !nestedRegex
  def: \b(?<![$])(?<year>([0-9]\d))(?!(\s*((\:\d)|{AmDescRegex}|{PmDescRegex}|\.\d)))\b
  references: [ AmDescRegex, PmDescRegex]
FullTextYearRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[\*]
YearRegex: !nestedRegex
  def: ({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, FullTextYearRegex ]
WeekDayRegex: !simpleRegex
  def: (?<weekday>dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi|lun(\.)?|mar(\.)?|mer(\.)?|jeu(\.)?|ven(\.)?|sam(\.)?|dim(\.)?)
RelativeMonthRegex: !nestedRegex
  def: (?<relmonth>({ThisPrefixRegex}\s+mois)|(mois\s+{PastSuffixRegex})|(mois\s+{NextSuffixRegex}))\b
  references: [ThisPrefixRegex, PastSuffixRegex, NextSuffixRegex]
WrittenMonthRegex: !simpleRegex
  def: (?<month>avril|avr(\.)?|ao[uû]t|d[eé]cembre|d[eé]c(\.)?|f[eé]vrier|f[eé]vr?(\.)?|janvier|janv?(\.)?|juillet|jui?[ln](\.)?|mars?(\.)?|mai|novembre|nov(\.)?|octobre|oct(\.)?|septembre|sept?(\.)?(?!\s+heures))
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>(en\s*|le\s*|de\s*|dans\s*)?({RelativeMonthRegex}|{WrittenMonthRegex}))
  references: [ RelativeMonthRegex, WrittenMonthRegex ]
DateUnitRegex: !simpleRegex
  def: (?<unit>an|mois|((l')?ann[eé]e|semaine|journ[eé]e|jour)(?<plural>s)?)\b
SimpleCasesRegex: !nestedRegex
  def: \b((d[ue])|entre\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: \b((d[ue]|entre)\s+)?{MonthSuffixRegex}\s+((d[ue]|entre)\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: \b{MonthSuffixRegex}\s+(entre|d[ue]\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, RangeConnectorRegex , YearRegex ]
BetweenRegex: !nestedRegex
  def: \b(entre\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*){YearRegex})?\b
  references: [ DayRegex, RangeConnectorRegex , MonthSuffixRegex, YearRegex ]
YearWordRegex: !simpleRegex
  def: \b(?<year>l'ann[ée]e)\b
MonthWithYear: !nestedRegex
  def: \b({WrittenMonthRegex}(\s*),?(\s+de)?(\s*)({YearRegex}|{TwoDigitYearRegex}|(?<order>cette)\s*{YearWordRegex})|{YearWordRegex}\s*({PastSuffixRegex}|{NextSuffixRegex}))
  references: [ WrittenMonthRegex, YearRegex, TwoDigitYearRegex, YearWordRegex, PastSuffixRegex, NextSuffixRegex ]
OneWordPeriodRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+)?{WrittenMonthRegex}|(la\s+)?(weekend|(fin de )?semaine|week-end|mois|ans?|l'année)\s+{StrictRelativeRegex}|{RelativeRegex}\s+(weekend|(fin de )?semaine|week-end|mois|ans?|l'année)|weekend|week-end|(mois|l'année))\b
  references: [ WrittenMonthRegex, RelativeRegex, StrictRelativeRegex ]
MonthNumWithYear: !nestedRegex
  def: ({YearRegex}(\s*)[/\-\.](\s*){MonthNumRegex})|({MonthNumRegex}(\s*)[/\-](\s*){YearRegex})
  references: [ YearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: (?<wom>(le\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\s+semaine(\s+de)?\s+{MonthSuffixRegex})
  references: [ MonthSuffixRegex ]
WeekOfYearRegex: !nestedRegex
  def: (?<woy>(le\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\s+semaine(\s+de)?\s+({YearRegex}|{RelativeRegex}\s+ann[ée]e)) 
  references: [ YearRegex, RelativeRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterRegex: !nestedRegex
  def: (le\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4)\s+quart(\s+de|\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+l'ann[eé]e)
  references: [ YearRegex, RelativeRegex ]
QuarterRegexYearFront: !nestedRegex
  def: ({YearRegex}|l'année\s+({PastSuffixRegex}|{NextSuffixRegex})|{RelativeRegex}\s+ann[eé]e)\s+(le\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4)\s+quarts
  references: [ YearRegex, RelativeRegex, PastSuffixRegex, NextSuffixRegex ]
AllHalfYearRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
PrefixDayRegex: !simpleRegex
  def: \b((?<EarlyPrefix>t[ôo]t\sdans)|(?<MidPrefix>au\smilieu\sde)|(?<LatePrefix>tard\sdans))(\s+la\s+journ[ée]e)?$
CenturySuffixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
SeasonRegex: !nestedRegex
  def: \b((<seas>printemps|été|automne|hiver)+\s*({NextSuffixRegex}|{PastSuffixRegex}))|(?<season>({RelativeRegex}\s+)?(?<seas>printemps|[ée]t[ée]|automne|hiver)((\s+de|\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+l'ann[eé]e))?)\b
  references: [ YearRegex, RelativeRegex, NextSuffixRegex, PastSuffixRegex ]
WhichWeekRegex: !simpleRegex
  def: \b(semaine)(\s*)(?<number>5[0-3]|[1-4]\d|0?[1-9])\b
WeekOfRegex: !simpleRegex
  def: (semaine)(\s*)(de)
MonthOfRegex: !simpleRegex
  def: (mois)(\s*)(de)
MonthRegex: !simpleRegex
  def: (?<month>avril|avr(\.)?|ao[uû]t|d[eé]cembre|d[eé]c(\.)?|f[eé]vrier|f[eé]vr?(\.)?|janvier|janv?(\.)?|juillet|jui?[ln](\.)?|mars?(\.)?|mai|novembre|nov(\.)?|octobre|oct(\.)?|septembre|sept?(\.)?(?!\s+heures))
OnRegex: !nestedRegex
  def: (?<=\b(en|sur\s*l[ea]|sur)\s+)({DayRegex}s?)\b
  references: [ DayRegex ]
RelaxedOnRegex: !simpleRegex
  def: (?<=\b(en|le|dans|sur\s*l[ea]|du|sur)\s+)((?<day>10e|11e|12e|13e|14e|15e|16e|17e|18e|19e|1er|20e|21e|22e|23e|24e|25e|26e|27e|28e|29e|2e|30e|31e|3e|4e|5e|6e|7e|8e|9e)s?)\b
ThisRegex: !nestedRegex
  def: \b((cette(\s*semaine)?\s+){WeekDayRegex})|({WeekDayRegex}(\s+cette\s*semaine))\b
  references: [ WeekDayRegex ]
LastDateRegex: !nestedRegex
  def: \b(({WeekDayRegex}(\s*(de)?\s*la\s*semaine\s+{PastSuffixRegex}))|({WeekDayRegex}(\s+{PastSuffixRegex})))\b
  references: [ PastSuffixRegex, WeekDayRegex ]
NextDateRegex: !nestedRegex
  def: \b(({WeekDayRegex}(\s+{NextSuffixRegex}))|({WeekDayRegex}(\s*(de)?\s*la\s*semaine\s+{NextSuffixRegex})))\b
  references: [ NextSuffixRegex, WeekDayRegex ]
SpecialDayRegex: !simpleRegex
  def: \b(avant[\s|-]hier|apr[eè]s(-demain|\s*demain)|(le\s)?jour suivant|(le\s+)?dernier jour|hier|lendemain|demain|(de\s)?la journ[ée]e|aujourd'hui)\b
SpecialDayWithNumRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
StrictWeekDay: !simpleRegex
  def: \b(?<weekday>dim(anche)?|lun(di)?|mar(di)?|mer(credi)?|jeu(di)?|ven(dredi)?|sam(edi)?)s?\b
SetWeekDayRegex: !simpleRegex
  def: \b(?<prefix>le\s+)?(?<weekday>matin([ée]e)?|apr[eè]s-midi|soir([ée]e)?|dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)s\b
WeekDayOfMonthRegex: !nestedRegex
  def: (?<wom>(le\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\s+{WeekDayRegex}\s+{MonthSuffixRegex})
  references: [ WeekDayRegex, MonthSuffixRegex ]
RelativeWeekDayRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
AmbiguousRangeModifierPrefix: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
NumberEndingPattern: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
SpecialDate: !nestedRegex
  def: (?<=\b(au|le)\s+){DayRegex}(?!:)\b
  references: [ DayRegex ]
DateYearRegex: !nestedRegex
  def: (?<year>{YearRegex}|{TwoDigitYearRegex})
  references: [ YearRegex, TwoDigitYearRegex ]
DateExtractor1: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{MonthRegex}\s*[/\\\.\-]?\s*{DayRegex}(\s*[/\\\.\-]?\s*{BaseDateTime.FourDigitYearRegex})?\b
  references: [ WeekDayRegex, MonthRegex, DayRegex, BaseDateTime.FourDigitYearRegex ]
DateExtractor2: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{DayRegex}(\s+|\s*,\s*|\s+){MonthRegex}\s*[\.\-]?\s*{DateYearRegex}\b
  references: [ WeekDayRegex, MonthRegex, DayRegex, DateYearRegex ]
DateExtractor3: !nestedRegex
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?((?<!\d\s)(?<!\d){DayRegex}(\s+|\s*[.,/-])({MonthRegex}((\s+|\s*[.,/-]\s*){DateYearRegex}(?!\s*\d))?|{MonthNumRegex}(\s+|\s*[.,/-]\s*){DateYearRegex}(?!\s*\d))|{BaseDateTime.FourDigitYearRegex}\s*[.,/-]?\s*{DayRegex}\s*[.,/-]?\s*{MonthRegex})\b
  references: [ WeekDayRegex, DayRegex, MonthRegex, MonthNumRegex, DateYearRegex, BaseDateTime.FourDigitYearRegex ]
# The final lookahead in DateExtractor4|5|A avoids extracting as date "10/1-11" from an input like "10/1-11/2/2017" 
DateExtractor4: !nestedRegex
  def: \b{MonthNumRegex}\s*[/\\\-]\s*{DayRegex}\s*[/\\\-]\s*{DateYearRegex}(?!\s*[/\\\-\.]\s*\d+)
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
DateExtractor5: !nestedRegex
  def: \b{DayRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DateYearRegex}(?!\s*[/\\\-\.]\s*\d+)
  references: [ DayRegex, MonthRegex, MonthNumRegex, DateYearRegex ]
DateExtractor6: !nestedRegex
  def: (?<=\b(le|sur(\sl[ae])?)\s+){MonthNumRegex}[\-\.\/]{DayRegex}{BaseDateTime.CheckDecimalRegex}\b
  references: [MonthNumRegex, DayRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor7: !nestedRegex
  def: \b{DayRegex}\s*/\s*{MonthNumRegex}((\s+|\s*,\s*){DateYearRegex})?{BaseDateTime.CheckDecimalRegex}\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor8: !nestedRegex
  def: (?<=\b(le)\s+){DayRegex}[\\\-]{MonthNumRegex}{BaseDateTime.CheckDecimalRegex}\b
  references: [ DayRegex, MonthNumRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractor9: !nestedRegex
  def: \b{DayRegex}\s*/\s*{MonthNumRegex}((\s+|\s*,\s*){DateYearRegex})?{BaseDateTime.CheckDecimalRegex}\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, BaseDateTime.CheckDecimalRegex ]
DateExtractorA: !nestedRegex
  def: \b({DateYearRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DayRegex}|{MonthRegex}\s*[/\\\-\.]\s*{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*{DayRegex}|{DayRegex}\s*[/\\\-\.]\s*{BaseDateTime.FourDigitYearRegex}\s*[/\\\-\.]\s*{MonthRegex})(?!\s*[/\\\-\.:]\s*\d+)
  references: [ DateYearRegex, MonthNumRegex, MonthRegex, DayRegex, BaseDateTime.FourDigitYearRegex ]
OfMonth: !nestedRegex
  def: ^\s*de\s*{MonthRegex}
  references: [ MonthRegex ]
MonthEnd: !nestedRegex
  def: '{MonthRegex}\s*(le)?\s*$'
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
WeekDayStart: !simpleRegex
  def: ^[\.]
RangeUnitRegex: !simpleRegex
  def: \b(?<unit>(l')?ann[eé]e(s)?|mois|semaines?)\b
HourNumRegex: !simpleRegex
  def: \b(?<hournum>zero|[aá]\s+une?|deux|trois|quatre|cinq|six|sept|huit|neuf|onze|douze|treize|quatorze|quinze|dix-six|dix-sept|dix-huit|dix-neuf|vingt|vingt-et-un|vingt-deux|vingt-trois|dix)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>((vingt|trente|quarante|cinquante)(\s*(et|-)?\s*))?(un|deux|trois|quatre|cinq|six|sept|huit|neuf)|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante|dix)
DeltaMinuteNumRegex: !simpleRegex
  def: (?<deltaminnum>((vingt|trente|quarante|cinquante)(\s*(et|-)?\s*))?(un|deux|trois|quatre|cinq|six|sept|huit|neuf)|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante|dix)
OclockRegex: !simpleRegex
  def: (?<oclock>heures?|h)
PmRegex: !simpleRegex
  def: (?<pm>(dans l'\s*)?apr[eè]s(\s*|-)midi|(du|ce|de|le)\s*(soir([ée]e)?)|(dans l[ea]\s+)?(nuit|soir[eé]e))
AmRegex: !simpleRegex
  def: (?<am>(du|de|ce|(du|de|dans)\s*l[ea]|le)?\s*matin[ée]e|(du|de|ce|dans l[ea]|le)?\s*matin)
LessThanOneHour: !nestedRegex
  def: (?<lth>(une\s+)?quart|trois quart(s)?|demie( heure)?|({BaseDateTime.DeltaMinuteRegex}|{DeltaMinuteNumRegex})(\s+(minutes?|mins?))|(?<=heures?\s+((et|moins)\s+)?)({BaseDateTime.DeltaMinuteRegex}|{DeltaMinuteNumRegex}))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
WrittenTimeRegex: !nestedRegex
  def: (?<writtentime>{HourNumRegex}\s+(heures\s+)?(et\s+)?{MinuteNumRegex}(\s+(minutes?|mins?))?)
  references: [ HourNumRegex, MinuteNumRegex ]
TimePrefix: !nestedRegex
  def: (?<prefix>(heures?\s+((et|moins)\s+)?{LessThanOneHour}|(et|moins)\s+{LessThanOneHour}|{LessThanOneHour}\s+[àa]))
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})
  references: [ AmRegex, PmRegex, OclockRegex ]
BasicTime: !nestedRegex
  def: (?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}(:|\s*h\s*){BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
MidnightRegex: !simpleRegex
  def: (?<midnight>minuit)
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
MorningRegex: !simpleRegex
  def: (?<morning>matin([ée]e)?)
AfternoonRegex: !simpleRegex
  def: (?<afternoon>(d'|l')?apr[eè]s(-|\s*)midi)
MidmorningRegex: !nestedRegex
  def: (?<midmorning>milieu\s*d[ue]\s*{MorningRegex})
  references: [ MorningRegex ]
MiddayRegex: !simpleRegex
  def: (?<midday>milieu(\s*|-)d[eu]\s*(jour|midi)|apr[eè]s(-|\s*)midi|(?<=\bà\s+)midi)
MidafternoonRegex: !nestedRegex
  def: (?<midafternoon>milieu\s*d'+{AfternoonRegex})
  references: [ AfternoonRegex ]
MidTimeRegex: !nestedRegex
  def: (?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))
  references: [ MidnightRegex, MidmorningRegex, MidafternoonRegex, MiddayRegex ]
AtRegex: !nestedRegex
  def: \b(((?<=\b[àa]\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
IshRegex: !nestedRegex
  def: '\b(peu\s*pr[èe]s\s*{BaseDateTime.HourRegex}|peu\s*pr[èe]s\s*{WrittenTimeRegex}|peu\s*pr[èe]s\s*[àa]\s*{BaseDateTime.HourRegex}|peu pr[èe]s midi)\b'
  references: [ BaseDateTime.HourRegex, WrittenTimeRegex ]
TimeUnitRegex: !simpleRegex
  def: (?<unit>h|(heure|hr|minute|min|seconde|sec)(?<plural>s)?)\b
RestrictedTimeUnitRegex: !simpleRegex
  def: (?<unit>huere|minute)\b
ConnectNumRegex: !nestedRegex
  def: '{BaseDateTime.HourRegex}(?<min>[0-5][0-9])\s*{DescRegex}'
  references: [ BaseDateTime.HourRegex, DescRegex ]
FivesRegex: !simpleRegex
  def: (?<tens>(quinze|vingt(\s*|-*(cinq))?|trente(\s*|-*(cinq))?|quarante(\s*|-*(cinq))??|cinquante(\s*|-*(cinq))?|dix|cinq))\b
PeriodHourNumRegex: !simpleRegex
  def: (?<hour>vingt-et-un|vingt-deux|vingt-trois|vingt-quatre|zero|une|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt)
TimeRegex1: !nestedRegex
  def: \b({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\s*{DescRegex}(\s+{TimePrefix})?\b
  references: [ TimePrefix, WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex ]
TimeRegex2: !nestedRegex
  def: (\b{TimePrefix}\s+)?(t)?{BaseDateTime.HourRegex}(\s*)?:(\s*)?{BaseDateTime.MinuteRegex}((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?((\s*{DescRegex})|\b)
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  def: \b{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})(\s+{TimePrefix})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  def: \b{BasicTime}(\s*{DescRegex})?(\s+{TimePrefix})?\s+{TimeSuffix}\b
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex5: !nestedRegex
  def: \b{BasicTime}((\s*{DescRegex})(\s+{TimePrefix})?|\s+{TimePrefix})
  references: [ TimePrefix, BasicTime, DescRegex ]
TimeRegex6: !nestedRegex
  def: '{BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}\b'
  references: [ BasicTime, DescRegex, TimeSuffix ]
TimeRegex7: !nestedRegex
  def: \b{TimeSuffix}\s+[àa]\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffix, BasicTime, DescRegex ]
TimeRegex8: !nestedRegex
  def: \b{TimeSuffix}\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffix, BasicTime, DescRegex ]
TimeRegex9: !nestedRegex
  def: \b{PeriodHourNumRegex}\s+{FivesRegex}((\s*{DescRegex})|\b)
  references: [ PeriodHourNumRegex, FivesRegex, DescRegex ]
TimeRegex10: !nestedRegex
  def: \b{BaseDateTime.HourRegex}(\s*h\s*){BaseDateTime.MinuteRegex}(\s*{DescRegex})?(\s+{TimePrefix})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
HourRegex: !nestedRegex
  def: \b{BaseDateTime.HourRegex}
  references: [ BaseDateTime.HourRegex ]
PeriodDescRegex: !simpleRegex
  def: (?<desc>pm|am|p\.m\.|a\.m\.|p)
PeriodPmRegex: !simpleRegex
  def: (?<pm>dans l'apr[eè]s-midi|ce soir|d[eu] soir|dans l[ea] soir[eé]e|dans la nuit|d[eu] soir[ée]e)s?
PeriodAmRegex: !simpleRegex
  def: (?<am>d[eu] matin|matin([ée]e)s?
PureNumFromTo: !nestedRegex
  def: ((du|depuis|des?)\s+)?(?<!\d[\/.,:\-])({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{PeriodDescRegex}))?\s*{TillRegex}\s*({HourRegex}|{PeriodHourNumRegex})\s*(?<rightDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex})?
  references: [ HourRegex, PeriodHourNumRegex, PeriodDescRegex, TillRegex, PmRegex, AmRegex ]
PureNumBetweenAnd: !nestedRegex
  def: (entre\s+)({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{PeriodDescRegex}))?\s*{RangeConnectorRegex}\s*({HourRegex}|{PeriodHourNumRegex})\s*(?<rightDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex})?
  references: [ HourRegex, PeriodHourNumRegex, PeriodDescRegex, PmRegex, AmRegex, RangeConnectorRegex ]
SpecificTimeFromTo: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
SpecificTimeBetweenAnd: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
PrepositionRegex: !simpleRegex
  def: (?<prep>^([aà](\s+?la)?|en|sur(\s*l[ea])?|de)$)
TimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>((((dans\s+(l[ea])?\s+)?((?<early>d[eé]but(\s+|-)|t[oô]t(\s+|-)(l[ea]\s*)?)|(?<late>fin\s*|fin de(\s+(la)?)|tard\s*))?(matin([ée]e)?|((d|l)?'?)apr[eè]s[-|\s*]midi|nuit|soir([eé]e)?)))|(((\s+(l[ea])?\s+)?)jour(n[eé]e)?))s?)\b
SpecificTimeOfDayRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+{TimeOfDayRegex})|({TimeOfDayRegex}\s*({NextSuffixRegex}))\b|\b(du )?soir)s?\b
  references: [ TimeOfDayRegex, RelativeRegex, NextSuffixRegex ]
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){TimeUnitRegex}
  references: [ TimeUnitRegex ]
NowRegex: !simpleRegex
  def: \b(?<now>(ce\s+)?moment|maintenant|d[eè]s que possible|dqp|r[eé]cemment|auparavant)\b
SuffixRegex: !simpleRegex
  def: ^\s*((dans\s+l[ea]\s+)|(en\s+)|(d(u|\'))?(matin([eé]e)?|apr[eè]s-midi|soir[eé]e|nuit))\b
DateTimeTimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>matin([eé]e)?|apr[eè]s-midi|nuit|soir)\b
DateTimeSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+{DateTimeTimeOfDayRegex})\b|\b(ce(tte)?\s+)(soir|nuit))\b
  references: [ DateTimeTimeOfDayRegex, RelativeRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?(en|dans|du\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ DateTimeSpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+([àa]|vers|pour))?\s*$'
  references: [ DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: ({HourNumRegex}|{BaseDateTime.HourRegex})\s*(,\s*)?(en|[àa]\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ HourNumRegex, BaseDateTime.HourRegex, DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+([àa]|vers|pour))?\s*({HourNumRegex}|{BaseDateTime.HourRegex})'
  references: [ DateTimeSpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
SpecificEndOfRegex: !simpleRegex
  def: (la\s+)?fin(\s+de\s*|\s*de*l[ea])?\s*$
UnspecificEndOfRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
UnspecificEndOfRangeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
PeriodTimeOfDayRegex: !simpleRegex
  def: \b((dans\s+(le)?\s+)?((?<early>d[eé]but(\s+|-|d[ue]|de la)|t[oô]t)|(?<late>tard\s*|fin(\s+|-|d[eu])?))?(?<timeOfDay>matin|((d|l)?'?)apr[eè]s-midi|nuit|soir([eé]e)?))\b
PeriodSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+{PeriodTimeOfDayRegex})\b|\b(ce(tte)?\s+)(soir|nuit))\b
  references: [ PeriodTimeOfDayRegex, RelativeRegex ]
PeriodTimeOfDayWithDateRegex: !nestedRegex
 def: \b(({TimeOfDayRegex}))\b
 references: [ TimeOfDayRegex]
LessThanRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
MoreThanRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
DurationUnitRegex: !simpleRegex
  def: (?<unit>ann[eé]es?|ans?|mois|semaines?|jours?|heures?|hrs?|h|minutes?|mins?|secondes?|secs?|journ[eé]e)\b
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*(et)\s+(une?\s+)?(?<suffix_num>demi|quart))
PeriodicRegex: !simpleRegex
  def: \b(?<periodic>quotidien(ne)?|journellement|mensuel(le)?|jours?|hebdomadaire|bihebdomadaire|annuel(lement)?)\b
EachUnitRegex: !nestedRegex
  def: (?<each>(chaque|toutes les|tous les)(?<other>\s+autres)?\s*{DurationUnitRegex})
  references: [ DurationUnitRegex ]
EachPrefixRegex: !simpleRegex
  def: \b(?<each>(chaque|tous les|(toutes les))\s*$)
SetEachRegex: !simpleRegex
  def: \b(?<each>(chaque|tous les|(toutes les))\s*)
SetLastRegex: !simpleRegex
  def: (?<last>prochain|dernier|derni[eè]re|pass[ée]s|pr[eé]c[eé]dent|courant|en\s*cours)
EachDayRegex: !simpleRegex
  def: ^\s*(chaque|tous les)\s*(jour|jours)\b
DurationFollowedUnit: !nestedRegex
  def: ^\s*{SuffixAndRegex}?(\s+|-)?{DurationUnitRegex}
  references: [ SuffixAndRegex, DurationUnitRegex ]
NumberCombinedWithDurationUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?)(-)?{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AnUnitRegex: !nestedRegex
  def: \b(((?<half>demi\s+)?(-)\s+{DurationUnitRegex}))
  references: [ DurationUnitRegex ]
DuringRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
AllRegex: !simpleRegex
  def: \b(?<all>toute\s(l['ea])\s?(?<unit>ann[eé]e|mois|semaines?|jours?|journ[eé]e))\b
HalfRegex: !simpleRegex
  def: ((une?\s*)|\b)(?<half>demi?(\s*|-)+(?<unit>ann[eé]e|ans?|mois|semaine|jour|heure))\b
ConjunctionRegex: !simpleRegex
  def: \b((et(\s+de|pour)?)|avec)\b
HolidayRegex1: !nestedRegex
  def: \b(?<holiday>vendredi saint|mercredi des cendres|p[aâ]ques|l'action de gr[âa]ce|mardi gras|la saint-sylvestre|la saint sylvestre|la saint-valentin|la saint valentin|nouvel an chinois|nouvel an|r[eé]veillon de nouvel an|jour de l'an|premier-mai|ler-mai|1-mai|poisson d'avril|r[eé]veillon de no[eë]l|veille de no[eë]l|noël|noel|thanksgiving|halloween|yuandan)(\s+((d[ue]\s+|d'))?({YearRegex}|({ThisPrefixRegex}\s+)ann[eé]e|ann[eé]e\s+({PastSuffixRegex}|{NextSuffixRegex})))?\b
  references: [ YearRegex, ThisPrefixRegex, PastSuffixRegex, NextSuffixRegex ]
HolidayRegex2: !nestedRegex
  def: \b(?<holiday>martin luther king|martin luther king jr|toussaint|st patrick|st george|cinco de mayo|l'ind[eé]pendance(\s+am[eé]ricaine)?|guy fawkes)(\s+(de\s+)?({YearRegex}|{ThisPrefixRegex}\s+ann[eé]e|ann[eé]e\s+({PastSuffixRegex}|{NextSuffixRegex})))?\b
  references: [ YearRegex, ThisPrefixRegex, PastSuffixRegex, NextSuffixRegex ]
HolidayRegex3: !nestedRegex
  def: (?<holiday>(jour\s*(d[eu]|des)\s*(canberra|p[aâ]ques|colomb|bastille|la prise de la bastille|thanks\s*giving|bapt[êe]me|nationale|d'armistice|inaugueration|marmotte|assomption|femme|comm[ée]moratif)))(\s+(de\s+)?({YearRegex}|{ThisPrefixRegex}\s+ann[eé]e|ann[eé]e\s+({PastSuffixRegex}|{NextSuffixRegex})))?
  references: [ YearRegex, ThisPrefixRegex, PastSuffixRegex, NextSuffixRegex ]
HolidayRegex4: !nestedRegex
  def: (?<holiday>(f[eê]te\s*(d[eu]|des)\s*)(travail|m[eè]res?|p[eè]res?))(\s+(de\s+)?({YearRegex}|{ThisPrefixRegex}\s+ann[eé]e|ann[eé]e\s+({PastSuffixRegex}|{NextSuffixRegex})))?\b
  references: [YearRegex, ThisPrefixRegex, PastSuffixRegex, NextSuffixRegex]
DateTokenPrefix: 'le '
TimeTokenPrefix: 'à '
TokenBeforeDate: 'le '
TokenBeforeTime: 'à '
HalfTokenRegex: !simpleRegex
  def: \b(demie)$
QuarterTokenRegex: !simpleRegex
  def: \b((un\s+)?quart)$
ThreeQuarterTokenRegex: !simpleRegex
  def: \b(trois\s+quarts)$
ToTokenRegex: !simpleRegex
  def: \b(moins|[aà]$)\b
AMTimeRegex: !simpleRegex
  def: (?<am>matin([ée]e)?)
PMTimeRegex: !simpleRegex
  def: \b(?<pm>(d'|l')?apr[eè]s-midi|nuit|((\s*ce|du)\s+)?soir)\b
BeforeRegex: !simpleRegex
  def: \b(avant)\b
BeforeRegex2: !simpleRegex
  def: \b(entre\s*(le|la(s)?)?)\b
AfterRegex: !simpleRegex
  def: \b(apres)\b
SinceRegex: !simpleRegex
  def: \b(depuis)\b
AroundRegex: !simpleRegex
  def: \b(vers|à\s+peu\s+près|environ)\b
AgoPrefixRegex: !simpleRegex
  def: \b(y a)\b
LaterRegex: !simpleRegex
  def: \b(plus\s+tard|à\s+partir\s+(de\s+(maintenant|demain)|d'aujourd'hui)|après\s+(aujourd'hui|demain))\b
AgoRegex: !nestedRegex
  def: \b((depuis|il\s+y\s*a)(\s+{AroundRegex})?|auparavant|avant\s+(?<day>hier|aujourd'hui))\b
  references: [ AroundRegex ]
BeforeAfterRegex: !simpleRegex
  def: ^\b$
InConnectorRegex: !simpleRegex
  def: \b(dans|en|sur)\b
SinceYearSuffixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
WithinNextPrefixRegex: !simpleRegex
  def: \b(dans\s+les)\b
TodayNowRegex: !simpleRegex
  def: \b(aujourd'hui|maintenant)\b
MorningStartEndRegex: !simpleRegex
  def: (^(matin))|((matin)$)
AfternoonStartEndRegex: !simpleRegex
  def: (^((d'|l')?apr[eè]s-midi))|(((d'|l')?apr[eè]s-midi)$)
EveningStartEndRegex: !simpleRegex
  def: (^(soir[ée]e|soir))|((soir[ée]e|soir)$)
NightStartEndRegex: !simpleRegex
  def: (^(nuit))|((nuit)$)
InexactNumberRegex: !simpleRegex
  def: \b(quel qu[ée]s|quelqu[ée]s?|plusieurs?|divers)\b
InexactNumberUnitRegex: !nestedRegex
  def: ({InexactNumberRegex})\s+({DurationUnitRegex})
  references: [InexactNumberRegex, DurationUnitRegex]
RelativeTimeUnitRegex: !nestedRegex
  def: (((({ThisPrefixRegex})?)\s+({TimeUnitRegex}(\s*{NextSuffixRegex}|{PastSuffixRegex})?))|((le))\s+({RestrictedTimeUnitRegex}))
  references: [NextSuffixRegex, PastSuffixRegex, ThisPrefixRegex, TimeUnitRegex, RestrictedTimeUnitRegex]
RelativeDurationUnitRegex: !nestedRegex
  def: \b(((?<=({NextSuffixRegex}|{PastSuffixRegex})\s+)({DurationUnitRegex}))|(({DurationUnitRegex})(\s+({NextSuffixRegex}|{PastSuffixRegex}))?)|((le|my))\s+({RestrictedTimeUnitRegex}))\b
  references: [NextSuffixRegex, PastSuffixRegex, ThisPrefixRegex, DurationUnitRegex, RestrictedTimeUnitRegex]
ReferenceDatePeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
UpcomingPrefixRegex: !simpleRegex
  def: .^
  # TODO: modify below regex according to the counterpart in English
NextPrefixRegex: !simpleRegex
  # TODO: implement the relative day regex if needed. If yes, they should be abstracted
  def: .^
PastPrefixRegex: !simpleRegex
  def: .^
  # TODO: modify below regex according to the counterpart in English
PreviousPrefixRegex: !simpleRegex
  # TODO: implement the relative day regex if needed. If yes, they should be abstracted
  def: .^
RelativeDayRegex: !nestedRegex
  def: \b(((la\s+)?{RelativeRegex}\s+journ[ée]e))\b
  references: [RelativeRegex]
ConnectorRegex: !simpleRegex
  def: ^(,|pour|t|vers|le)$
ConnectorAndRegex: !simpleRegex
  def: \b(et\s*(le|las?)?)\b.+
FromRegex: !simpleRegex
  def: ((de|du)?)$
FromRegex2: !simpleRegex
  def: ((depuis|de)(\s*las?)?)$
FromToRegex: !simpleRegex
  def: \b(du|depuis|des?).+(au|à|a)\b.+
SingleAmbiguousMonthRegex: !simpleRegex
  def: ^(le\s+)?(may|march)$
UnspecificDatePeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
PrepositionSuffixRegex: !simpleRegex
  def: \b(du|de|[àa]|vers|dans)$
FlexibleDayRegex: !simpleRegex
  def: (?<DayOfMonth>([A-Za-z]+\s)?[A-Za-z\d]+)
ForTheRegex: !nestedRegex
  def: \b(((pour le {FlexibleDayRegex})|(dans (le\s+)?{FlexibleDayRegex}(?<=(st|nd|rd|th))))(?<end>\s*(,|\.|!|\?|$)))
  references: [FlexibleDayRegex]
WeekDayAndDayOfMonthRegex: !nestedRegex
  def: \b({WeekDayRegex}\s+(le\s+{FlexibleDayRegex})|le\s+(?<DayOfMonth>{DayRegex}|{WrittenDayRegex})\s+{WeekDayRegex})\b
  references: [WeekDayRegex, FlexibleDayRegex, DayRegex, WrittenDayRegex]
WeekDayAndDayRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+(?!(the)){DayRegex}(?!([-:]|(\s+({AmDescRegex}|{PmDescRegex}|{OclockRegex}))))\b
  references: [WeekDayRegex, DayRegex, AmDescRegex, PmDescRegex, OclockRegex]
RestOfDateRegex: !simpleRegex
  def: \b(reste|fin)\s+(d[eu]\s+)?((le|ce(tte)?)\s+)?(?<duration>semaine|mois|l'ann[ée]e)\b
RestOfDateTimeRegex: !simpleRegex
  def: \b(reste|fin)\s+(d[eu]\s+)?((le|ce(tte)?)\s+)?(?<unit>jour)\b
LaterEarlyPeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
WeekWithWeekDayRangeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
GeneralEndingRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
MiddlePauseRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
DurationConnectorRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
PrefixArticleRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[\.]
OrRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
YearPlusNumberRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
NumberAsTimeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
TimeBeforeAfterRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
DateNumberConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+[aà])\s*$
CenturyRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
DecadeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
DecadeWithCenturyRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
RelativeDecadeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
YearSuffix: !nestedRegex
  def: (,?\s*({DateYearRegex}|{FullTextYearRegex}))
  references: [ DateYearRegex, FullTextYearRegex ]
SuffixAfterRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
YearPeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
FutureSuffixRegex: !simpleRegex
  def: \b(dans\s+le\s+futur)\b
ModPrefixRegex: !nestedRegex
  def: \b({RelativeRegex}|{AroundRegex}|{BeforeRegex}|{AfterRegex}|{SinceRegex})\b
  references: [RelativeRegex, AroundRegex, BeforeRegex, AfterRegex, SinceRegex ]
ModSuffixRegex: !nestedRegex
  def: \b({AgoRegex}|{LaterRegex}|{BeforeAfterRegex}|{FutureSuffixRegex}|{PastSuffixRegex})\b
  references: [AgoRegex, LaterRegex, BeforeAfterRegex, FutureSuffixRegex, PastSuffixRegex]
ComplexDatePeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^\b$
AmbiguousPointRangeRegex: !simpleRegex
  def: ^(mar\.?)$
UnitMap: !dictionary
  types: [ string, string ]
  entries:
    annees: Y
    annee: Y
    an: Y
    ans: Y
    mois: MON
    semaines: W
    semaine: W
    journees: D
    journee: D
    jour: D
    jours: D
    heures: H
    heure: H
    hrs: H
    hr: H
    h: H
    minutes: M
    minute: M
    mins: M
    min: M
    secondes: S
    seconde: S
    secs: S
    sec: S
UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    annees: 31536000
    annee: 31536000
    l'annees: 31536000
    l'annee: 31536000
    an: 31536000
    ans: 31536000
    mois: 2592000
    semaines: 604800
    semaine: 604800
    journees: 86400
    journee: 86400
    jour: 86400
    jours: 86400
    heures: 3600
    heure: 3600
    hrs: 3600
    hr: 3600
    h: 3600
    minutes: 60
    minute: 60
    mins: 60
    min: 60
    secondes: 1
    seconde: 1
    secs: 1
    sec: 1
# TODO: modify below regex according to the counterpart in English
SpecialYearPrefixesMap: !dictionary
  types: [ string, string ]
  entries:
    '': ''
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    printemps: SP
    été: SU
    automne: FA
    hiver: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int]
  entries:
    premier: 1
    1er: 1
    deuxième: 2
    2e: 2
    troisième: 3
    troisieme: 3
    3e: 3
    quatrième: 4
    4e: 4
    cinqième: 5
    5e: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries: 
    lundi: 1
    mardi: 2
    mercredi: 3
    jeudi: 4
    vendredi: 5
    samedi: 6
    dimanche: 0
    lun: 1
    mar: 2
    mer: 3
    jeu: 4
    ven: 5
    sam: 6
    dim: 0
    lun.: 1
    mar.: 2
    mer.: 3
    jeu.: 4
    ven.: 5
    sam.: 6
    dim.: 0
MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'janvier': 1
    'fevrier': 2
    'février': 2
    'mars': 3
    'mar': 3
    'mar.': 3
    'avril': 4
    'avr': 4
    'avr.': 4
    'mai': 5
    'juin': 6
    'jun': 6
    'jun.': 6
    'juillet': 7
    'aout': 8
    'août': 8
    'septembre': 9
    'octobre': 10
    'novembre': 11
    'decembre': 12
    'décembre': 12
    'janv': 1
    'janv.' : 1
    'jan' : 1
    'jan.' : 1
    'fevr': 2
    'fevr.': 2
    'févr.': 2
    'févr' : 2
    'fev' : 2
    'fev.' : 2
    'juil': 7
    'jul': 7
    'jul.': 7
    'sep': 9
    'sep.': 9
    'sept.': 9
    'sept': 9
    'oct': 10
    'oct.': 10
    'nov': 11
    'nov.': 11
    'dec': 12
    'dec.': 12
    'déc.': 12
    'déc' : 12
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    'zero': 0
    'un': 1
    'une': 1
    'a': 1
    'deux': 2
    'trois': 3
    'quatre': 4
    'cinq': 5
    'six': 6
    'sept': 7
    'huit': 8
    'neuf': 9
    'dix': 10
    'onze': 11
    'douze': 12
    'treize': 13
    'quatorze': 14
    'quinze': 15
    'seize': 16
    'dix-sept': 17
    'dix-huit': 18
    'dix-neuf': 19
    'vingt-et-un': 21
    'vingt et un': 21
    'vingt': 20
    'vingt deux': 22
    'vingt-deux' : 22
    'vingt trois': 23
    'vingt-trois' : 23
    'vingt quatre': 24
    'vingt-quatre' : 24
    'vingt cinq': 25
    'vingt-cinq': 25
    'vingt six': 26
    'vingt-six' : 26
    'vingt sept': 27
    'vingt-sept': 27
    'vingt huit': 28
    'vingt-huit': 28
    'vingt neuf': 29
    'vingt-neuf': 29
    'trente': 30
    'trente et un': 31
    'trente-et-un': 31
    'trente deux': 32
    'trente-deux': 32
    'trente trois': 33
    'trente-trois': 33
    'trente quatre': 34
    'trente-quatre': 34
    'trente cinq': 35
    'trente-cinq': 35
    'trente six': 36
    'trente-six': 36
    'trente sept': 37
    'trente-sept': 37
    'trente huit': 38
    'trente-huit': 38
    'trente neuf': 39
    'trente-neuf': 39
    'quarante': 40
    'quarante et un': 41
    'quarante-et-un': 41
    'quarante deux': 42
    'quarante-duex': 42
    'quarante trois': 43
    'quarante-trois': 43
    'quarante quatre': 44
    'quarante-quatre': 44
    'quarante cinq': 45
    'quarante-cinq': 45
    'quarante six': 46
    'quarante-six': 46
    'quarante sept': 47
    'quarante-sept': 47
    'quarante huit': 48
    'quarante-huit': 48
    'quarante neuf': 49
    'quarante-neuf': 49
    'cinquante': 50
    'cinquante et un': 51
    'cinquante-et-un': 51
    'cinquante deux': 52
    'cinquante-deux': 52
    'cinquante trois': 53
    'cinquante-trois': 53
    'cinquante quatre': 54
    'cinquante-quatre': 54
    'cinquante cinq': 55
    'cinquante-cinq': 55
    'cinquante six': 56
    'cinquante-six': 56
    'cinquante sept': 57
    'cinquante-sept': 57
    'cinquante huit': 58
    'cinquante-huit': 58
    'cinquante neuf': 59
    'cinquante-neuf': 59
    'soixante': 60
    'soixante et un': 61
    'soixante-et-un': 61
    'soixante deux': 62
    'soixante-deux': 62
    'soixante trois': 63
    'soixante-trois': 63
    'soixante quatre': 64
    'soixante-quatre': 64
    'soixante cinq': 65
    'soixante-cinq': 65
    'soixante six': 66
    'soixante-six': 66
    'soixante sept': 67
    'soixante-sept': 67
    'soixante huit': 68
    'soixante-huit': 68
    'soixante neuf': 69
    'soixante-neuf': 69
    'soixante dix': 70
    'soixante-dix': 70
    'soixante et onze': 71
    'soixante-et-onze': 71
    'soixante douze': 72
    'soixante-douze': 72
    'soixante treize': 73
    'soixante-treize': 73
    'soixante quatorze': 74
    'soixante-quatorze': 74
    'soixante quinze': 75
    'soixante-quinze': 75
    'soixante seize': 76
    'soixante-seize': 76
    'soixante dix sept': 77
    'soixante-dix-sept': 77
    'soixante dix huit': 78
    'soixante-dix-huit': 78
    'soixante dix neuf': 79
    'soixante-dix-neuf': 79
    'quatre vingt': 80
    'quatre-vingt': 80
    'quatre vingt un': 81
    'quatre-vingt-un': 81
    'quatre vingt deux': 82
    'quatre-vingt-duex': 82
    'quatre vingt trois': 83
    'quatre-vingt-trois': 83
    'quatre vingt quatre': 84
    'quatre-vingt-quatre': 84
    'quatre vingt cinq': 85
    'quatre-vingt-cinq': 85
    'quatre vingt six': 86
    'quatre-vingt-six': 86
    'quatre vingt sept': 87
    'quatre-vingt-sept': 87
    'quatre vingt huit': 88
    'quatre-vingt-huit': 88
    'quatre vingt neuf': 89
    'quatre-vingt-neuf': 89
    'quatre vingt dix': 90
    'quatre-vingt-dix': 90
    'quatre vingt onze': 91
    'quatre-vingt-onze': 91
    'quatre vingt douze': 92
    'quatre-vingt-douze': 92
    'quatre vingt treize': 93
    'quatre-vingt-treize': 93
    'quatre vingt quatorze': 94
    'quatre-vingt-quatorze': 94
    'quatre vingt quinze': 95
    'quatre-vingt-quinze': 95
    'quatre vingt seize': 96
    'quatre-vingt-seize': 96
    'quatre vingt dix sept': 97
    'quatre-vingt-dix-sept': 97
    'quatre vingt dix huit': 98
    'quatre-vingt-dix-huit': 98
    'quatre vingt dix neuf': 99
    'quatre-vingt-dix-neuf': 99
    'cent': 100
DayOfMonth: !dictionary
  types: [ string, int ]
  entries:
    '1er': 1
    '2e': 2
    '3e': 3
    '4e': 4
    '5e': 5
    '6e': 6
    '7e': 7
    '8e': 8
    '9e': 9
    '10e': 10
    '11e': 11
    '12e': 12
    '13e': 13
    '14e': 14
    '15e': 15
    '16e': 16
    '17e': 17
    '18e': 18
    '19e': 19
    '20e': 20
    '21e': 21
    '22e': 22
    '23e': 23
    '24e': 24
    '25e': 25
    '26e': 26
    '27e': 27
    '28e': 28
    '29e': 29
    '30e': 30
    '31e': 31
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries: 
    demi: 0.5
    quart: 0.25
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries:
    fathers: [ peres, pères, fêtedespères, fetedesperes ]
    mothers: [ fêtedesmères, fetedesmeres ]
    thanksgiving: [ lactiondegrace, lactiondegrâce, jourdethanksgiving, thanksgiving ]
    martinlutherking: [ journeemartinlutherking, martinlutherkingjr ]
    washingtonsbirthday: [ washingtonsbirthday, washingtonbirthday ]
    canberra: [ canberraday ]
    labour: [ fetedetravail, travail, fetedutravail ]
    columbus: [ columbusday ]
    memorial: [ jourcommémoratif, jourcommemoratif ]
    yuandan: [ yuandan, nouvelanchinois ]
    maosbirthday: [ maosbirthday ]
    teachersday: [ teachersday, teacherday ]
    singleday: [ singleday ]
    allsaintsday: [ allsaintsday ]
    youthday: [ youthday ]
    childrenday: [ childrenday, childday ]
    femaleday: [ femaleday ]
    treeplantingday: [ treeplantingday ]
    arborday: [ arborday ]
    girlsday: [ girlsday ]
    whiteloverday: [ whiteloverday ]
    loverday: [ loverday ]
    christmas: [ noel, noël ]
    xmas: [ xmas ]
    newyear: [ nouvellesannees, nouvelan ]
    newyearday: [ jourdunouvelan ]
    newyearsday: [ jourdel'an, jourpremierdelannee, jourpremierdelannée ]
    inaugurationday: [ jourd'inaugueration, inaugueration ]
    groundhougday: [ marmotte ]
    valentinesday: [ lasaint-valentin, lasaintvalentin ]
    stpatrickday: [ stpatrickday ]
    aprilfools: [ poissond'avril ]
    stgeorgeday: [ stgeorgeday ]
    mayday: [ premier-mai, ler-mai, 1-mai ]
    cincodemayoday: [ cincodemayo ]
    baptisteday: [ bapteme, baptême ]
    usindependenceday: [ l'independanceamericaine, lindépendanceaméricaine ]
    independenceday: [ l'indépendance, lindependance ]
    bastilleday: [ laprisedelabastille, bastille ]
    halloweenday: [ halloween ]
    allhallowday: [ allhallowday ]
    allsoulsday: [ allsoulsday ]
    guyfawkesday: [ guyfawkesday ]
    veteransday: [ veteransday ]
    christmaseve: [ reveillondenoel, réveillondenoël, veilledenoel, veilledenoël ]
    newyeareve: [ réveillondenouvelan, reveillondenouvelan, lasaint-sylvestre, lasaintsylvestre ]
NightRegex: !simpleRegex
  def: \b(minuit|nuit)\b
WrittenDecades: !dictionary
  types: [ string, int ]
  # TODO: modify below dictionary according to the counterpart in English
  entries:
    '': 0
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  # TODO: modify below dictionary there're special cases for written decades
  entries:
    '': 0
DefaultLanguageFallback: DMY
DurationDateRestrictions: []
# Cases collected from mined data
AmbiguityFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    '^\d{4}$': '(\d\.\d{4}|\d{4}\.\d)'
    '^([eé]t[eé])$': '(?<!((l\s*[''`]\s*)|(cet(te)?|en)\s+))[eé]t[eé]\b'
    '^(mer)$': '(?<!((le|ce)\s+))mer\b'
    '^(avr|ao[uû]t|d[eé]c|f[eé]vr?|janv?|jui?[ln]|mars?|mai|nov|oct|sept?)$': '([$%£&!?@#])(avr|ao[uû]t|d[eé]c|f[eé]vr?|janv?|jui?[ln]|mars?|mai|nov|oct|sept?)|(avr|ao[uû]t|d[eé]c|f[eé]vr?|janv?|jui?[ln]|mars?|mai|nov|oct|sept?)([$%£&@#])'
# Used to exclude duration matches (e.g. "pour 3 heures") from time extractions
AmbiguityTimeFiltersDict: !dictionary
  types: [ string, string ]
  entries:
    'heures?$': '\b(pour|durée\s+de|pendant)\s+(\S+\s+){1,2}heures?\b'
# For TimeOfDay resolution
MorningTermList: !list
  types: [ string ]
  entries: 
    - matinee
    - matin
    - matinée
AfternoonTermList: !list
  types: [ string ]
  entries: 
    - apres-midi
    - apres midi
    - après midi
    - après-midi
EveningTermList: !list
  types: [ string ]
  entries: 
    - soir
    - soiree
    - soirée
DaytimeTermList: !list
  types: [ string ]
  entries: 
    - jour
    - journee
    - journée
NightTermList: !list
  types: [ string ]
  entries: 
    - nuit
SameDayTerms: !list
  types: [ string ]
  entries: 
    - 'aujourd''hui'
    - auj
PlusOneDayTerms: !list
  types: [ string ]
  entries: 
    - demain
    - a2m1
    - lendemain
    - jour suivant
MinusOneDayTerms: !list
  types: [ string ]
  entries: 
    - hier
    - dernier
PlusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - après demain
    - après-demain
    - apres-demain
MinusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - avant-hier
    - avant hier
# For DatePeriodParserConfiguration Logic
FutureStartTerms: !list
  types: [ string ]
  entries:
    - cette
FutureEndTerms: !list
  types: [ string ]
  entries:
    - prochaine
    - prochain
LastCardinalTerms: !list
  types: [ string ]
  entries:
    - dernières
    - dernière
    - dernieres
    - derniere
    - dernier
MonthTerms: !list
  types: [ string ]
  entries:
    - mois
MonthToDateTerms: !list
  types: [ string ]
  entries:
    - mois à ce jour
WeekendTerms: !list
  types: [ string ]
  entries:
    - fin de semaine
    - le weekend
WeekTerms: !list
  types: [ string ]
  entries:
    - semaine
YearTerms: !list
  types: [ string ]
  entries:
    - années
    - ans
    - an
    - l'annees
    - l'annee
YearToDateTerms: !list
  types: [ string ]
  entries:
    - année à ce jour
    - an à ce jour
...