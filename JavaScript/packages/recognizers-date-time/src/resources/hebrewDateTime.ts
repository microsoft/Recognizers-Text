// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// ------------------------------------------------------------------------------

import { BaseDateTime } from "./baseDateTime";
export namespace HebrewDateTime {
    export const LangMarker = `Heb`;
    export const CheckBothBeforeAfter = false;
    export const TillRegex = `(?<till>\\b(עד)\\b|${BaseDateTime.RangeConnectorSymbolRegex})`;
    export const RangeConnectorRegex = `(?<and>עד|${BaseDateTime.RangeConnectorSymbolRegex})`;
    export const LastNegPrefix = `(?<!(w(ill|ould|on\\s*'\\s*t)|m(ay|ight|ust)|sh(all|ould(n\\s*'\\s*t)?)|c(an(\\s*'\\s*t|not)?|ould(n\\s*'\\s*t)?))(\\s+not)?\\s+)`;
    export const RelativeRegex = `\\b(?<order>הבא|הקודם|הנוכחי|האחרון|הראשון|הבאה|הקודמת|הנוכחית|האחרונה)\\b`;
    export const StrictRelativeRegex = `\\b(?<order>הבא|הקודם|הנוכחי|האחרון|הראשון|הבאה|הקודמת|הנוכחית|האחרונה)\\b`;
    export const UpcomingPrefixRegex = `((ה)?(בא?))`;
    export const NextPrefixRegex = `\\b(קרוב?|${UpcomingPrefixRegex})\\b`;
    export const AfterNextSuffixRegex = `\\b(after\\s+(the\\s+)?next)\\b`;
    export const PastPrefixRegex = `((this\\s+)?past)\\b`;
    export const PreviousPrefixRegex = `(الماضي(ה)?|קודם(ה)?)\\b`;
    export const ThisPrefixRegex = `(קודם(ה)?)\\b`;
    export const RangePrefixRegex = `(בין)`;
    export const CenturySuffixRegex = `(^century)\\b`;
    export const ReferencePrefixRegex = `(זהה)\\b`;
    export const FutureSuffixRegex = `\\b(בעתיד)\\b`;
    export const PastSuffixRegex = `^\\b$`;
    export const DayRegex = `(?<day>(?:3[0-1]|[1-2]\\d|0?[1-9]))`;
    export const ImplicitDayRegex = `(the\\s*)?(?<day>(?:3[0-1]|[0-2]?\\d)(?:th|nd|rd|st))\\b`;
    export const MonthNumRegex = `(?<month>1[0-2]|(0)?[1-9])\\b`;
    export const WrittenOneToNineRegex = `(?:אחת|שתיים|שלוש|ארבע|חמש|שש|שבע|שמונה|תשע)`;
    export const WrittenElevenToNineteenRegex = `(אחת עשרה|שתים עשרה|שלוש עשרה|ארבע עשרה|חמש עשרה|שש עשרה|שבע עשרה|שמונה עשרה|תשע עשרה)`;
    export const WrittenTensRegex = `(עשר|עשרים|שלושים|ארבעים|חמישים|שישים|שיבעים|שמונים|תישעים)`;
    export const WrittenNumRegex = `(?:${WrittenOneToNineRegex}|${WrittenElevenToNineteenRegex}|${WrittenTensRegex}(\\s+${WrittenOneToNineRegex})?)`;
    export const WrittenCenturyFullYearRegex = `(?<firsttwoyearnum>(אלף|אלפיים))(\\s*(שלוש|ארבע|חמש|שש|שבע|שמונה|תשע)\\s*(מאה|מאות|מאתיים)(\\s+ו)?)?)(?<lasttwoyearnum>(${WrittenElevenToNineteenRegex})|((${WrittenOneToNineRegex})?(\\s+ו\\s*)?)(${WrittenTensRegex})?)?`;
    export const WrittenCenturyOrdinalYearRegex = `(?<fullyear>(${WrittenElevenToNineteenRegex}|מאה|מאות|מאתיים)\\s+((${WrittenOneToNineRegex})\\s+(ו)\\s*${WrittenTensRegex})`;
    export const CenturyRegex = `\\b(?<century>${WrittenCenturyFullYearRegex}|${WrittenCenturyOrdinalYearRegex}(\\s*מאה)?(\\s*ו)?)\\b`;
    export const LastTwoYearNumRegex = `(?:zero\\s+${WrittenOneToNineRegex}|${WrittenElevenToNineteenRegex}|${WrittenTensRegex}(\\s+${WrittenOneToNineRegex})?)`;
    export const FullTextYearRegex = `(?<firsttwoyearnum>${CenturyRegex})\\s*(?<lasttwoyearnum>${LastTwoYearNumRegex})|(?<firsttwoyearnum>${WrittenCenturyFullYearRegex})|${WrittenCenturyOrdinalYearRegex}`;
    export const OclockRegex = `(?<oclock>(ה)?שעה)`;
    export const SpecialDescRegex = `((?<ipm>)p\\b)`;
    export const AmDescRegex = `(ב)?(בוקר|${BaseDateTime.BaseAmDescRegex})`;
    export const PmDescRegex = `(ב)?(אחר הצהריים|אחרה\"צ|צהריים|${BaseDateTime.BasePmDescRegex})`;
    export const AmPmDescRegex = `(:?${BaseDateTime.BaseAmPmDescRegex})`;
    export const DescRegex = `(:?(:?(${OclockRegex}\\s+)?(?<desc>(${AmPmDescRegex}|${AmDescRegex}|${PmDescRegex}|${SpecialDescRegex})))|${OclockRegex})`;
    export const OfPrepositionRegex = `(\\bof\\b)`;
    export const TwoDigitYearRegex = `\\b(?<![$])(?<year>([0-9]\\d))(?!(\\s*((\\:\\d)|${AmDescRegex}|${PmDescRegex}|\\.\\d)))\\b`;
    export const YearRegex = `(?:${BaseDateTime.FourDigitYearRegex}|${FullTextYearRegex})`;
    export const WeekDayRegex = `(?<weekday>(ראשון|שני|שני|שלישי|רביעי|חמישי|שישי|שבת))`;
    export const SingleWeekDayRegex = `(?<weekday>(ראשון|שני|שני|שלישי|רביעי|חמישי|שישי|שבת))`;
    export const NextRegex = `(?<next>הבא)`;
    export const RelativeMonthRegex = `(?<relmonth>(ל\\s+)?(חודש)(\\s+)?(${NextRegex})?)`;
    export const WrittenMonthRegex = `(?<month>ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר)`;
    export const MonthSuffixRegex = `(?<msuf>(?:(in|of|on)\\s+)?(${RelativeMonthRegex}|${WrittenMonthRegex}))`;
    export const DateUnitRegex = `((?<unit>(((ה)?(יום(ا)?|שבוע(ا)?|חודש(ا)?|שנה(ا)?|מאה))|סופש|סוף השבוע))|(?<plural>((ה)?(ימים|שבועות|חודשים|שנים|יומיים|שנתיים)))|((?<=\\s+\\d{1,4})[ymwd]))\\b`;
    export const DateTokenPrefix = `ב `;
    export const TimeTokenPrefix = `ב `;
    export const TokenBeforeDate = `ב `;
    export const TokenBeforeTime = `ב `;
    export const HalfTokenRegex = `^(אמצע)`;
    export const QuarterTokenRegex = `^(רבע)`;
    export const ThreeQuarterTokenRegex = `^(שלושת רבעי|שלושה רבעים)`;
    export const ToTokenRegex = `\\b(ל)$`;
    export const ToHalfTokenRegex = `\\b(ל\\s+(אמצע|חצי))$`;
    export const ForHalfTokenRegex = `\\b(ל(s+)?(חצי|אמצע))$`;
    export const FromRegex = `\\b(from(\\s+the)?)$`;
    export const BetweenTokenRegex = `\\b(between(\\s+the)?)$`;
    export const OrdinalNumberRegex = `((ה)?אחת עשרה|(ה)?שתיים עשרה|(ה)?שלוש עשרה|(ה)?ארבע עשרה|(ה)?חמש עשרה|(ה)?שש עשרה|(ה)?שבע עשרה|(ה)?שמונה עשרה|(ה)?תשע עשרה|(ה)?עשרים|(ה)?עשרים ואחת|(ה)?עשרים ושתיים|(ה)?עשרים ושלוש|(ה)?עשרים וארבע|(ה)?עשרים וחמש|(ה)?עשרים ושש|(ה)?עשרים ושבע|(ה)?עשרים ושמונה|(ה)?עשרים ותשע|(ה)?ראשון|(ה)?שני|(ה)?שלישי|(ה)?רביעי|(ה)?חמישי|(ה)?שישי|(ה)?שביעי|(ה)?שמיני|(ה)?תשיעי|(ה)?עשירי)`;
    export const HebrewMonthRegex = `(?<month>תשרי|חשוון|כסלו|טבת|שבט|אדר|ניסן|אייר|סיוון|תמוז|אב|אלול)`;
    export const MonthRegex = `(?<month>${HebrewMonthRegex}|ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר)`;
    export const SimpleCasePreMonthRegex = `((בין|מ)\\s+)((${DayRegex}-${DayRegex})\\s+)((מ|ב)\\s+)?((חודש|${HebrewMonthRegex})\\s+)(${RelativeRegex})?(${YearRegex})?`;
    export const SimpleCasesRegex = `(((מ|מה)\\s+)?((${DayRegex}|${OrdinalNumberRegex})\\s+)((לחודש|${HebrewMonthRegex})\\s+)?((עד)\\s*)((${DayRegex}|${OrdinalNumberRegex})\\s+)((ל|ב)\\s+)?(חודש|${HebrewMonthRegex})?(\\s+(${RelativeRegex}))?(\\s+${YearRegex})?)|(${SimpleCasePreMonthRegex})`;
    export const MonthFrontSimpleCasesRegex = `(((חודש\\s+)?${HebrewMonthRegex})\\s+(בין|מ)\\s+(${DayRegex}|${OrdinalNumberRegex})\\s+[ו]\\s*(${DayRegex}|${OrdinalNumberRegex}))|${HebrewMonthRegex})`;
    export const MonthFrontBetweenRegex = `\\b${MonthSuffixRegex}\\s+(between\\s+)(${DayRegex})\\s*${RangeConnectorRegex}\\s*(${DayRegex})((\\s+|\\s*,\\s*)${YearRegex})?\\b`;
    export const BetweenRegex = `((בין|מ)\\s+)((${DayRegex}|${OrdinalNumberRegex})\\s*)((לחודש|${HebrewMonthRegex})\\s+)?((עד|ו|-)\\s*)((${DayRegex}|${OrdinalNumberRegex})\\s+)((ל|ב)\\s+)?(חודש|${HebrewMonthRegex})?(\\s*([,،-])\\s*)?(\\s*(${RelativeRegex}))?(\\s+${YearRegex})?`;
    export const MonthWithYear = `((${HebrewMonthRegex})[\\.]?(\\s*)[/\\\\\\-\\.,]?(\\s*(של ה|ב|של))?(\\s*)(${YearRegex}))|((${HebrewMonthRegex})\\s+?(${RelativeRegex})?)`;
    export const SpecialYearPrefixes = `(calendar|(?<special>fiscal|school))`;
    export const OneWordPeriodRegex = `\\b((((the\\s+)?month of\\s+)?(${StrictRelativeRegex}\\s+)?${MonthRegex})|(month|year) to date|(?<toDate>((un)?till?|to)\\s+date)|(${RelativeRegex}\\s+)?(my\\s+)?((?<business>working\\s+week|workweek)|week(end)?|month|fortnight|((${SpecialYearPrefixes}\\s+)?year))(?!((\\s+of)?\\s+\\d+(?!(${BaseDateTime.BaseAmDescRegex}|${BaseDateTime.BasePmDescRegex}))|\\s+to\\s+date))(\\s+${AfterNextSuffixRegex})?)\\b`;
    export const MonthNumWithYear = `\\b((${BaseDateTime.FourDigitYearRegex}(\\s*)[/\\-\\.](\\s*)${MonthNumRegex})|(${MonthNumRegex}(\\s*)[/\\-](\\s*)${BaseDateTime.FourDigitYearRegex}))\\b`;
    export const WeekOfMonthRegex = `(\\b(?<wom>(الأسبوع)\\s+((?<cardinal>الأول|الثاني|الثالث|الرابع|الخامس|الأخير)\\s+)((من هذا|هذا|من)\\s+)?(شهر\\s+)?(الشهر|${HebrewMonthRegex})[,]?(\\s+${YearRegex})?)\\b)|(((الأسبوع|أسبوع)\\s+)(ב\\s+)?${DayRegex}\\s+(${HebrewMonthRegex}))`;
    export const WeekOfYearRegex = `(?<woy>(الأسبوع)\\s+(?<cardinal>الأول|الثاني|الثالث|الرابع|الخامس|الأخير)\\s+((من هذا|هذا|من)\\s+)?(العام|من عام|عام)\\s*(${YearRegex}|${RelativeRegex})?)`;
    export const FollowedDateUnit = `^\\s*${DateUnitRegex}`;
    export const NumberCombinedWithDateUnit = `\\b(?<num>\\d+(\\.\\d*)?)(\\s)?(-)?${DateUnitRegex}`;
    export const QuarterTermRegex = `(الربع[- ]+(?<cardinal>الأول|الثاني|الثالث|الرابع))`;
    export const RelativeQuarterTermRegex = `\\b(الربع)\\s+(?<orderQuarter>${StrictRelativeRegex})\\b`;
    export const QuarterRegex = `(${YearRegex}\\s+)?(${QuarterTermRegex})(((\\s+(من عام|من))?\\s+(${YearRegex}))|(\\s+(هذا|من هذا|)\\s+العام))?`;
    export const QuarterRegexYearFront = `(?:${YearRegex}|${RelativeRegex}\\s+year)('s)?(?:\\s*-\\s*|\\s+(the\\s+)?)?${QuarterTermRegex}`;
    export const HalfYearTermRegex = `(?<cardinal>first|1st|second|2nd)\\s+half`;
    export const HalfYearFrontRegex = `(?<year>((1[5-9]|20)\\d{2})|2100)(\\s*-\\s*|\\s+(the\\s+)?)?h(?<number>[1-2])`;
    export const HalfYearBackRegex = `(the\\s+)?(h(?<number>[1-2])|(${HalfYearTermRegex}))(\\s+of|\\s*,\\s*)?\\s+(${YearRegex})`;
    export const HalfYearRelativeRegex = `(the\\s+)?${HalfYearTermRegex}(\\s+of|\\s*,\\s*)?\\s+(${RelativeRegex}\\s+year)`;
    export const AllHalfYearRegex = `(${HalfYearFrontRegex})|(${HalfYearBackRegex})|(${HalfYearRelativeRegex})`;
    export const EarlyPrefixRegex = `\\b(?<EarlyPrefix>بداية|مطلع|وقت مبكر|(?<RelEarly>قبل))\\b`;
    export const MidPrefixRegex = `\\b(?<MidPrefix>ב منتصف|منتصف)\\b`;
    export const LaterPrefixRegex = `\\b(?<LatePrefix>نهاية|باقي|بقية|أواخر|(?<RelLate>ב وقت لاحق|لاحقا ב|بعد))\\b`;
    export const PrefixPeriodRegex = `(${EarlyPrefixRegex}|${MidPrefixRegex}|${LaterPrefixRegex}|${RelativeRegex})`;
    export const PrefixDayRegex = `\\b((?<EarlyPrefix>early)|(?<MidPrefix>mid(dle)?)|(?<LatePrefix>later?))(\\s+in)?(\\s+the\\s+day)?$`;
    export const SeasonDescRegex = `(?<seas>(ה)?ربيع|(ה)?صيف|(ה)?خريف|(ה)?شتاء)`;
    export const SeasonRegex = `\\b(?<season>(هذا\\s+)?(منتصف\\s+)?((${SeasonDescRegex})(\\s+${PrefixPeriodRegex})?(\\s*عام\\s*)?(\\s*${YearRegex})?))\\b`;
    export const WhichWeekRegex = `\\b(week)(\\s*)(?<number>5[0-3]|[1-4]\\d|0?[1-9])\\b`;
    export const WeekOfRegex = `(the\\s+)?((week)(\\s+(of|(commencing|starting|beginning)(\\s+on)?))|w/c)(\\s+the)?`;
    export const MonthOfRegex = `(من)(\\s*)(شهر)`;
    export const DateYearRegex = `(?<year>${BaseDateTime.FourDigitYearRegex}|(?<!,\\s?)${TwoDigitYearRegex}|${TwoDigitYearRegex}(?=(\\.(?!\\d)|[?!;]|$)))`;
    export const YearSuffix = `((\\s*،\\s*|,|\\sمن)?\\s*(${DateYearRegex}|${FullTextYearRegex}))`;
    export const OnRegex = `(?<=\\bב\\s+)${DayRegex}\\b`;
    export const OrdinalDayOfMonthRegex = `(?=يوم\\s+)?(الأحد|الإثنين|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)\\s+(ב\\s+)((?:3[0-1]|[1-2]\\d|0?[1-9])|((ה)?حادي عشر|ل(ה)?ثاني عشر|(ה)?ثالث عشر|(ה)?رابع عشر|(ה)?خامس عشر|(ה)?خمسة عشر|(ה)?سادس عشر|(ה)?سابع عشر|(ה)?ثامن عشر|(ה)?تاسع عشر|(ה)?عشرون|(ה)?عشرين|(ה)?حادي والعشرون|(ה)?حادية والعشرين|(ה)?حادي والعشرين|(ה)?ثاني والعشرون|(ה)?ثانية والعشرين|(ה)?ثالث والعشرون|(ה)?رابع والعشرون|(ה)?خامس والعشرون|(ה)?سادس والعشرون|(ה)?تاسع والعشرون|(ה)?سابع والعشرون|(ה)?رابع والعشرون|الثامن|الأول|الثالث|الرابع|الخامس|السادس|الثاني|العاشر|السابع))`;
    export const WeekDayofMonthRegex = `(?=يوم\\s+)?(الأحد|الإثنين|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)\\s+(ב\\s+)?((?:3[0-1]|[1-2]\\d|0?[1-9])|(الأول|الثاني|الثالث|الرابع|الخامس))`;
    export const RelaxedOnRegex = `(${OrdinalDayOfMonthRegex}|${WeekDayofMonthRegex})`;
    export const PrefixWeekDayRegex = `(\\s*((,?\\s*on)|[-—–]))`;
    export const HebrewWeekRegex = `(?<ArabicWeek>الأسبوعين|الاسبوعين|أسابيع|الاسبوع|الأسبوع|الإسبوع|أسبوعين|أسبوعي|اسبوعين|اسبوعي|أسبوع|الاسابيع|الأسابيع)`;
    export const ThisRegex = `(?=يوم\\s+)?(${WeekDayRegex})(\\s+)?(من|هذا|)(\\s+)?(هذا)?(\\s+)(${HebrewWeekRegex})((\\s+)(${RelativeRegex}))?`;
    export const LastDayDateRegex = `(?=يوم\\s+)?(${WeekDayRegex})\\s+(الماضي|السابق|الأخير)`;
    export const LastWeekDateRegex = `(${HebrewWeekRegex})\\s+(الماضي|السابق|الأخير)\\s+(${WeekDayRegex})`;
    export const LastMonthYearDateRegex = `(قبل\\s+)(\\d+ )?((بضعة|بضع|عدة)\\s+)?(سنتين|شهرين|الشهور|أشهر|اشهر|شهر|الشهر|أيام|عامين|عام|أعوام|سنة|سنين|سنوات)`;
    export const SpecificDayRegex = `((قبل|بعد)\\s+)?((اليوم|يوم)\\s+)?(((?<=ب)الأمس|أمس|الأمس|البارحة)|(آخر يوم|الماضي|السابق|الأخير|يومين)|(${DayRegex}\\s+${MonthRegex}))`;
    export const LastDateRegex = `(${LastDayDateRegex}|${LastWeekDateRegex})`;
    export const NextDayRegex = `(هذا يوم\\s+|بعد\\s+)?(?=(ה)?يوم\\s+)?(${WeekDayRegex})((\\s+)(${NextRegex}))?`;
    export const NextWeekDayRegex = `((بعد )|(ב هذا ?=)|(هذا ?=))?((ال|لل|ل)?أسبوع(ين)?|${HebrewWeekRegex}|اليوم|يومي|الغد|غداً|غد|غدا)(يوم)?(${HebrewWeekRegex})?(\\s*(الآتي|الأخير|التالي|القادم|من الآن|الحالي|المقبل|الحاضر))?(\\s*${HebrewWeekRegex})?`;
    export const NextWeekRegex = `(?=بعد )?(هذا )?(${HebrewWeekRegex})\\s*(${NextRegex})?\\s+?(يوم)?(\\s+)?(${WeekDayRegex})?`;
    export const NextDateRegex = `(${NextWeekRegex}|${NextDayRegex})`;
    export const CardinalDayOfMonthRegex = `(((?<=ב )|(إلى |لل|يوم ))((((ה)?عاشر|(ה)?حادي(ה)? والعشرين|(ה)?ثاني(ה)? والعشرين|(ה)?ثالث(ה)? والعشرين|(ה)?رابع(ה)? والعشرين|(ה)?خامس(ה)? والعشرين|(ה)?سادس(ה)? والعشرين|(ה)?سابع(ה)? والعشرين|(ה)?ثامن(ה)? والعشرين|(ה)?تاسع(ה)? والعشرين|(ה)?ثلاثين|(ה)?حادي(ה)? والثلاثين|(ה)?أول|(ה)?ثاني|(ה)?ثالث|(ה)?رابع|(ה)?خامس|(ה)?سادس|(ה)?سابع|(ה)?ثامن|(ה)?تاسع))|(${DayRegex})))|((?<=يوم )(${DayRegex})[\\./-]\\s+(${MonthRegex}))`;
    export const SpecialDayRegex = `(${NextWeekDayRegex}|${CardinalDayOfMonthRegex}|${SpecificDayRegex}|${LastMonthYearDateRegex})`;
    export const SpecialDayWithNumRegex = `\\b((?<number>${WrittenNumRegex})\\s+days?\\s+from\\s+(?<day>yesterday|tomorrow|tmr|today))\\b`;
    export const RelativeDayRegex = `\\b(((the\\s+)?${RelativeRegex}\\s+day))\\b`;
    export const SetWeekDayRegex = `\\b(?<prefix>on\\s+)?(?<weekday>morning|afternoon|evening|night|(sun|mon|tues|wednes|thurs|fri|satur)day)s\\b`;
    export const WeekDayOfMonthRegex = `(?<wom>(the\\s+)?(?<cardinal>first|1st|second|2nd|third|3rd|fourth|4th|fifth|5th|last)\\s+(week\\s+${MonthSuffixRegex}[\\.]?\\s+(on\\s+)?${WeekDayRegex}|${WeekDayRegex}\\s+${MonthSuffixRegex}))`;
    export const RelativeWeekDayRegex = `\\b(${WrittenNumRegex}\\s+${WeekDayRegex}\\s+(from\\s+now|later))\\b`;
    export const SpecialDate = `(?=\\b(on|at)\\s+the\\s+)${DayRegex}\\b`;
    export const DatePreposition = `\\b(ב|عند|من)`;
    export const DateExtractorYearTermRegex = `(\\s+|\\s*,\\s*|\\s+من\\s+)${DateYearRegex}`;
    export const CardinalDayRegex = `(?=يوم\\s+)?((ال|لل|ل)?عاشر|(ال|لل|ل)?حادي(ה)? و(ה)?عشر[يو]ن|واحد و(ה)?عشر[يو]ن|(ال|لل|ل)?ثاني(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?ثالث(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?رابع(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?خامس(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?سادس(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?سابع(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?ثامن(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?تاسع(ה)? و(ה)?عشر[يو]ن|(ال|لل|ل)?ثلاثين|(ال|لل|ل)?حادي(ה)? والثلاثين|(ال|لل|ل)?أول|(ال|لل|ل)?ثاني|(ال|لل|ل)?ثالث|(ال|لل|ل)?رابع|(ال|لل|ل)?خامس|(ال|لل|ل)?سادس|(ال|لل|ل)?سابع|(ال|لل|ل)?ثامن|(ال|لل|ل)?تاسع)`;
    export const DateExtractor1 = `(${CardinalDayRegex})(\\s+يوم\\s+)(${WeekDayRegex})(\\s+)(ב|من)(\\s+)(هذا|هذه)?(\\s+)?(الشهر|${MonthRegex})(${DateExtractorYearTermRegex}\\b)?`;
    export const DateExtractor3 = `\\b(${WeekDayRegex}(\\s+|\\s*,\\s*|\\s*،\\s*))?(${DayRegex}|${CardinalDayRegex})[\\.]?(\\s+|\\s*,\\s*|\\s+من\\s+|\\s*-\\s*)?${MonthRegex}[\\.]?((\\s+(ב|عند|عام|سنة|من عام|من سنة))?${DateExtractorYearTermRegex})?\\b`;
    export const DateExtractor4 = `\\b${MonthNumRegex}\\s*[/\\\\\\-]\\s*${DayRegex}[\\.]?\\s*[/\\\\\\-]\\s*${DateYearRegex}`;
    export const DateExtractor5 = `\\b${DayRegex}\\s*[/\\\\\\-\\.]\\s*(${MonthNumRegex}|${MonthRegex})\\s*[/\\\\\\-\\.]\\s*${DateYearRegex}(?!\\s*[/\\\\\\-\\.]\\s*\\d+)`;
    export const DateExtractor6 = `(?<=${DatePreposition}\\s+)(${StrictRelativeRegex}\\s+)?(${WeekDayRegex}\\s+)?${MonthNumRegex}[\\-\\.]${DayRegex}(?![%])\\b`;
    export const DateExtractor7L = `\\b(${WeekDayRegex}\\s+)?${MonthNumRegex}\\s*/\\s*${DayRegex}${DateExtractorYearTermRegex}(?![%])\\b`;
    export const DateExtractor7S = `(${MonthRegex}\\s*[-\\./]\\s*${DayRegex})|(\\b(${WeekDayRegex}\\s+)?${MonthNumRegex}\\s*[/\\.]\\s*${DayRegex}(?![%])\\b)`;
    export const DateExtractor8 = `(?<=${DatePreposition}\\s+)(${StrictRelativeRegex}\\s+)?(${WeekDayRegex}\\s+)?${DayRegex}[\\\\\\-]${MonthNumRegex}(?![%])\\b`;
    export const DateExtractor9L = `\\b(${WeekDayRegex}\\s+)?${DayRegex}\\s*/\\s*${MonthNumRegex}${DateExtractorYearTermRegex}(?![%])\\b`;
    export const DateExtractor9S = `\\b(${WeekDayRegex}\\s+)?${DayRegex}\\s*[/-]\\s*${MonthNumRegex}(?![%])\\b`;
    export const DateExtractorA = `\\b(${WeekDayRegex}\\s+)?${BaseDateTime.FourDigitYearRegex}\\s*[/\\\\\\-\\.]\\s*(${MonthNumRegex}|${MonthRegex})\\s*[/\\\\\\-\\.]\\s*${DayRegex}`;
    export const OfMonth = `^\\s*(يوم\\s+)?من\\s*${MonthRegex}`;
    export const MonthEnd = `${MonthRegex}\\s*(ב)?\\s*$`;
    export const WeekDayEnd = `(هذا\\s+)?${WeekDayRegex}\\s*[,،]?\\s*$`;
    export const WeekDayStart = `^[\\.]`;
    export const RangeUnitRegex = `\\b(?<unit>years?|months?|weeks?)\\b`;
    export const HourNumRegex = `\\b(?<hournum>الأولى|(ה)?واحدة|(ה)?ثانية|(ה)?ثالثة|(ה)?رابعة|(ה)?خامسة|(ה)?سادسة|(ה)?سابعة|(ה)?ثامنة|(ה)?تاسعة|(ה)?عاشرة|(ה)?حادية عشر(ה)?|(ה)?ثانية عشر(ה)?|خمسة عشر|أحد عشر)\\b`;
    export const MinuteNumRegex = `\\b(?<minnum>أربع|خمس|ست|سبع|ثمان|تسع|عشر|عشرة|أحد عشر|إثني عشر|إثنا عشر|ثلاثة عشر|خمسة عشر|ثمانية عشر|أربعة عشر|ستة عشر|سبعة عشر|(ה)?حادية عشر(ה)?|تسعة عشر|عشرون|ثلاثون|أربعون|خمسون|عشرين|ثلاث(ين)?|أربعين|خمسين|واحد|إثنان|ثلاثة|خمسة|ثمانية)\\b`;
    export const DeltaMinuteNumRegex = `(?<deltaminnum>عشرة|أحد عشر|اثنا عشر|ثلاثة عشر|خمسة عشر|ثمانية عشر|أربعة|ستة|سبعة|تسعة|عشرين|أربعة عشر|ستة عشر|سبعة عشر|تسعة عشر| ثلاثون|أربعون|خمسين|أربعين|خمسون|واحد|اثنان|ثلاثة|خمسة|ثمانية|ثلاث(ين)?|أربع|خمس|ست|سبع|ثمان|تسع|(ה)?واحدة|(ה)?ثانية|(ה)?ثالثة|(ה)?رابعة|(ה)?خامسة|(ה)?سادسة|(ה)?سابعة|(ה)?ثامنة|(ה)?تاسعة|(ה)?عاشرة|(ה)?حادية عشر(ה)?|(ה)?ثانية عشر(ה)?)`;
    export const PmRegex = `(?<pm>(?:(ב|حول)\\s|ل)?(وقت\\s)?(بعد الظهر|بعد الظهيرة|(ה)?مساء|مساءً|منتصف(\\s|-)الليل|الغداء|الليل|ليلا))`;
    export const PmRegexFull = `(?<pm>(?:(ב|حول)\\s|ل)?(وقت\\s)?(بعد الظهر|بعد الظهيرة|(ה)?مساء|مساءً|منتصف(\\s|-)الليل|الغداء|الليل|ليلا))`;
    export const AmRegex = `(?<am>(?:(ב|حول)\\s|ل)?(وقت\\s)?((ה)?صباح|صباحا|صباحًا))`;
    export const LunchRegex = `\\b(موعد الغذاء|وقت الغذاء)\\b`;
    export const NightRegex = `\\bمنتصف(\\s|-)الليل\\b`;
    export const CommonDatePrefixRegex = `^[\\.]`;
    export const LessThanOneHour = `(?<lth>((ה)?ربع|ثلاثة أرباع|(ה)?نصف)|(${BaseDateTime.DeltaMinuteRegex}(\\s(دقيقة|دقائق))?)|(${DeltaMinuteNumRegex}(\\s(دقيقة|دقائق))?))`;
    export const WrittenTimeRegex = `(?<writtentime>((ה)?ساعة\\s)?${HourNumRegex}\\s+(ו(\\s)?)?(${MinuteNumRegex}|{LessThanOneHour}|(${MinuteNumRegex}\\s+(ו(\\s)?)?(?<tens>عشرون|ثلاثون|أربعون|خمسون|عشرين|ثلاثين|أربعين|خمسين))))`;
    export const TimePrefix = `(?<prefix>(إلا|حتى|ו|قبل)?(\\s)?${LessThanOneHour})`;
    export const TimeSuffix = `(?<suffix>${AmRegex}|${PmRegex}|${OclockRegex})`;
    export const TimeSuffixFull = `(?<suffix>${AmRegex}|${PmRegexFull}|${OclockRegex})`;
    export const BasicTime = `\\b(?<basictime>${WrittenTimeRegex}|${HourNumRegex}|(${MinuteNumRegex}(\\s(دقيقة|دقائق))?)|${BaseDateTime.HourRegex}:${BaseDateTime.MinuteRegex}(:${BaseDateTime.SecondRegex})?|${BaseDateTime.HourRegex}(?![%\\d]))`;
    export const MidnightRegex = `(?<midnight>منتصف(\\s|(\\s?-\\s?))الليل)`;
    export const MidmorningRegex = `(?<midmorning>منتصف(\\s|(\\s?-\\s?))الصباح)`;
    export const MidafternoonRegex = `(?<midafternoon>منتصف(\\s|(\\s?-\\s?))بعد الظهر)`;
    export const MiddayRegex = `(?<midday>(وقت الغداء\\s)?(منتصف(\\s|(\\s?-\\s?)))?(النهار|(الساعة\\s)?((((12\\s)?الظهر)|(12\\s)?الظهيرة)|(12\\s)?ظهرا))(\\sوقت الغداء)?)`;
    export const MidTimeRegex = `(?<mid>(${MidnightRegex}|${MidmorningRegex}|${MidafternoonRegex}|${MiddayRegex}))`;
    export const AtRegex = `\\b(?:(?:(?<=\\bב\\s+)?(?:${WrittenTimeRegex}|${HourNumRegex}|${BaseDateTime.HourRegex}(?!\\.\\d)|${MidTimeRegex}))|${MidTimeRegex})\\b`;
    export const IshRegex = `\\b(((${BaseDateTime.HourRegex}|${WrittenTimeRegex})(\\s|-))?(وقت\\s)?((الظهيرة|الظهر|ظهر(ا|اً))))\\b`;
    export const TimeUnitRegex = `([^A-Za-z]{1,}|\\b)((?<unit>((ה)?(ساعة|دقيقة|ثانية)))|(?<plural>((ה)?(ساعات|دقائق|ثوان|ساعتين|دقيقتين|ثانيتين|ساعتان|دقيقتان|ثانيتان))))\\b`;
    export const RestrictedTimeUnitRegex = `(?<unit>(ה)?ساعة|(ה)?دقيقة)\\b`;
    export const FivesRegex = `(?<tens>(?:fifteen|(?:twen|thir|fou?r|fif)ty(\\s*five)?|ten|five))\\b`;
    export const HourRegex = `\\b${BaseDateTime.HourRegex}`;
    export const PeriodHourNumRegex = `(?<hour>((واحد|اثنان|اثنين|إثنين|ثلاثة|أربعة|إثنان)?(ו(\\s+)?(عشرون|عشرين)))|أحد عشر|إثني عشر|((ثلاثة|خمسة|ثمانية|أربعة|ستة|سبعة|تسعة)(عشر)?)|صفر|واحد|اثنان|إثنان|ثنان|اثنين|عشرة|الأولى|(ה)?واحدة|(ה)?ثانية|(ה)?ثالثة|(ה)?رابعة|(ה)?خامسة|(ה)?سادسة|(ה)?سابعة|(ה)?ثامنة|(ה)?تاسعة|(ה)?عاشرة|(ה)?حادية عشر(ה)?|(ה)?ثانية عشر(ה)?|خمسة عشر)`;
    export const ConnectNumRegex = `\\b${BaseDateTime.HourRegex}(?<min>[0-5][0-9])\\s*${DescRegex}`;
    export const TimeRegexWithDotConnector = `(${BaseDateTime.HourRegex}(\\s*\\.\\s*)${BaseDateTime.MinuteRegex})`;
    export const TimeRegex1 = `\\b(${TimePrefix}\\s+)?(${WrittenTimeRegex}(\\s${TimePrefix})?|${HourNumRegex}|${BaseDateTime.HourRegex})(\\s*|[.])${DescRegex}`;
    export const TimeRegex2 = `(\\b${TimePrefix}\\s+)?(t)?${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex}((\\s*)?:(\\s*)?${BaseDateTime.SecondRegex})?(?<iam>a)?((\\s*${DescRegex})|\\b)`;
    export const TimeRegex3 = `(\\b${TimePrefix}\\s+)?${BaseDateTime.HourRegex}\\.${BaseDateTime.MinuteRegex}(\\s*${DescRegex})`;
    export const TimeRegex4 = `\\b(${TimePrefix}\\s+)?${BasicTime}(\\s*${DescRegex})?\\s+${TimeSuffix}(\\s*${DescRegex})?\\b`;
    export const TimeRegex5 = `\\b(${DescRegex}\\s)?${BasicTime}((\\s*${DescRegex})((\\s+${TimePrefix})?)|(\\s+${TimePrefix}(\\s+${TimePrefix})?))(\\s${DescRegex})?`;
    export const TimeRegex6 = `${BasicTime}(\\s*${DescRegex})?\\s+${TimeSuffix}\\b`;
    export const TimeRegex7 = `\\b(${DescRegex}\\s)?(وقت الغداء\\s)?${TimeSuffixFull}\\s+(ב\\s+)?${BasicTime}(\\s${DescRegex})?(\\sوقت الغداء)?(\\s${TimePrefix})?((\\s*${DescRegex})|\\b)?`;
    export const TimeRegex8 = `.^`;
    export const TimeRegex9 = `\\b${PeriodHourNumRegex}(\\s+|-)${FivesRegex}((\\s*${DescRegex})|\\b)`;
    export const TimeRegex10 = `\\b(${TimePrefix}\\s+)?${BaseDateTime.HourRegex}(\\s*h\\s*)${BaseDateTime.MinuteRegex}(\\s*${DescRegex})?`;
    export const TimeRegex11 = `\\b((?:(${TimeTokenPrefix})?${TimeRegexWithDotConnector}(\\s*${DescRegex}))|(?:(?:${TimeTokenPrefix}${TimeRegexWithDotConnector})(?!\\s*per\\s*cent|%)))`;
    export const FirstTimeRegexInTimeRange = `\\b${TimeRegexWithDotConnector}(\\s*${DescRegex})?`;
    export const PureNumFromTo = `(${RangePrefixRegex}\\s+)?(الساعة\\s+)?((${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|${HourRegex}|${PeriodHourNumRegex})(\\s*(?<leftDesc>${DescRegex}))?\\s*${TillRegex}\\s*(\\s+الساعة\\s+)?((${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|${HourRegex}|${PeriodHourNumRegex})(\\s+${TimePrefix})?(?<rightDesc>\\s*(${PmRegex}|${AmRegex}|${DescRegex}))?(\\s+اليوم)?`;
    export const PureNumBetweenAnd = `(بين\\s+)(الساعة\\s+)?((${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|${HourRegex}|${PeriodHourNumRegex})(\\s*(?<leftDesc>${DescRegex}))?\\s*${RangeConnectorRegex}(\\s*)?(\\s+الساعة\\s+)?((${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|${HourRegex}|${PeriodHourNumRegex})(\\s+${TimePrefix})?(?<rightDesc>\\s*(${PmRegex}|${AmRegex}|${DescRegex}))?(\\s+اليوم)?`;
    export const SpecificTimeFromTo = `(${RangePrefixRegex}\\s+)?(الساعة\\s+)?(?<time1>((${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|(${HourRegex}|${PeriodHourNumRegex})(\\s*(?<leftDesc>${DescRegex}))?))\\s*${TillRegex}\\s*(\\s+الساعة\\s+)?(?<time2>((${TimeRegexWithDotConnector}(?<rightDesc>\\s*${DescRegex}))|(${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|(${HourRegex}|${PeriodHourNumRegex})(\\s+${TimePrefix})?(\\s*(?<rightDesc>${DescRegex}))?))(\\s+اليوم)?`;
    export const SpecificTimeBetweenAnd = `(بين\\s+)(الساعة\\s+)?(?<time1>((${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|(${HourRegex}|${PeriodHourNumRegex})(\\s*(?<leftDesc>${DescRegex}))?))\\s*${RangeConnectorRegex}(\\s*)?(\\s+الساعة\\s+)?(?<time2>((${TimeRegexWithDotConnector}(?<rightDesc>\\s*${DescRegex}))|((${BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${BaseDateTime.MinuteRegex})|${HourRegex}|${PeriodHourNumRegex})(\\s+${TimePrefix})?(\\s*(?<rightDesc>${DescRegex}))?))(\\s+اليوم)?`;
    export const SuffixAfterRegex = `\\b(((at)\\s)?(or|and)\\s+(above|after|later|greater)(?!\\s+than))\\b`;
    export const PrepositionRegex = `(?<prep>^(at|on|of)(\\s+the)?$)`;
    export const LaterEarlyRegex = `((?<early>(\\s+|-)الباكر)|(?<late>وقت متأخر(\\s+|-))|أواخر(\\s+|-)|وقت مبكر(\\s+|-)|أول(\\s+|-)|آخر(\\s+|-))`;
    export const MealTimeRegex = `\\b((ב|عند)\\s+)?(وقت\\s)?(?<mealTime>(ה)?إفطار|(ה)?فطور|(ה)?عشاء|(ה)?غذاء)\\b`;
    export const UnspecificTimePeriodRegex = `(${MealTimeRegex})`;
    export const TimeOfDayRegex = `\\b(?<timeOfDay>((((ב|عند)\\s+)?${LaterEarlyRegex}?(من\\s+)?(الصباح|بعد الظهر|الليل|المساء|الظهر|الأمسيات)${LaterEarlyRegex}?)|${MealTimeRegex}|(((ב|عند|خلال)\\s+)?(النهار|((ساعة|ساعات)(\\s)?العمل)))))\\b`;
    export const SpecificTimeOfDayRegex = `\\b((${StrictRelativeRegex}\\s+${TimeOfDayRegex})\\b|\\btoni(ght|te))s?\\b`;
    export const TimeFollowedUnit = `^\\s*${TimeUnitRegex}`;
    export const TimeNumberCombinedWithUnit = `\\b(?<num>\\d+(\\.\\d*)?)(\\s)?(-)?${TimeUnitRegex}`;
    export const BusinessHourSplitStrings = [ "business","hour" ];
    export const NowRegex = `\\b(?<now>(right\\s+)?now|at th(e|is) minute|as soon as possible|asap|recently|previously)\\b`;
    export const NowParseRegex = `\\b(${NowRegex}|^(date)$)\\b`;
    export const SuffixRegex = `^\\s*(in the\\s+)?(morning|afternoon|evening|night)\\b`;
    export const NonTimeContextTokens = `(building)`;
    export const DateTimeTimeOfDayRegex = `\\b(?<timeOfDay>morning|(?<pm>afternoon|night|evening))\\b`;
    export const DateTimeSpecificTimeOfDayRegex = `\\b((${RelativeRegex}\\s+${DateTimeTimeOfDayRegex})\\b|\\btoni(ght|te))\\b`;
    export const TimeOfTodayAfterRegex = `^\\s*(,\\s*)?(in\\s+)?${DateTimeSpecificTimeOfDayRegex}`;
    export const TimeOfTodayBeforeRegex = `${DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+(at|around|in|on))?\\s*$`;
    export const SimpleTimeOfTodayAfterRegex = `(?<!${NonTimeContextTokens}\\s*)\\b(${HourNumRegex}|${BaseDateTime.HourRegex})\\s*(,\\s*)?(in\\s+)?${DateTimeSpecificTimeOfDayRegex}\\b`;
    export const SimpleTimeOfTodayBeforeRegex = `\\b${DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+(at|around))?\\s*(${HourNumRegex}|${BaseDateTime.HourRegex})\\b`;
    export const SpecificEndOfRegex = `(the\\s+)?end of(\\s+the)?\\s*$`;
    export const UnspecificEndOfRegex = `\\b(the\\s+)?(eod|(end\\s+of\\s+day))\\b`;
    export const UnspecificEndOfRangeRegex = `\\b(eoy)\\b`;
    export const PeriodTimeOfDayRegex = `\\b((in\\s+(the)?\\s+)?${LaterEarlyRegex}?(this\\s+)?${DateTimeTimeOfDayRegex})\\b`;
    export const PeriodSpecificTimeOfDayRegex = `\\b(${LaterEarlyRegex}?this\\s+${DateTimeTimeOfDayRegex}|(${StrictRelativeRegex}\\s+${PeriodTimeOfDayRegex})\\b|\\btoni(ght|te))\\b`;
    export const PeriodTimeOfDayWithDateRegex = `\\b((${PeriodTimeOfDayRegex}(\\s+(on|of))?))\\b`;
    export const LessThanRegex = `\\b(أقل\\s+من)\\b`;
    export const MoreThanRegex = `\\b(أكثر\\s+من)\\b`;
    export const DurationUnitRegex = `(?<unit>${DateUnitRegex}|(ה)?ساعة|(ה)?ساعات|(ה)?دقيقة|(ה)?دقائق|(ה)?ثانية|(ה)?ثوان|(ה)?ليلة|(ה)?ليال)|ساعت(ين)?(ان)?|دقيقت(ين)?(ان)?|ثانيت(ين)?(ان)?|ليلت(ين)?(ان)?\\b`;
    export const SuffixAndRegex = `(?<suffix>\\s*(ו)\\s+(?<suffix_num>نصف|ربع))`;
    export const PeriodicRegex = `\\b(?<periodic>((?<multiplier>semi|bi|tri)(\\s*|-))?(daily|monthly|weekly|quarterly|yearly|annual(ly)?))\\b`;
    export const EachUnitRegex = `\\b(?<each>(each|every|any|once an?)(?<other>\\s+other)?\\s+(${DurationUnitRegex}|(?<specialUnit>quarters?|weekends?)|${WeekDayRegex})|(?<specialUnit>weekends))`;
    export const EachPrefixRegex = `\\b(?<each>(each|every|once an?)\\s*$)`;
    export const SetEachRegex = `\\b(?<each>(each|every)(?<other>\\s+other)?\\s*)(?!the|that)\\b`;
    export const SetLastRegex = `(?<last>following|next|upcoming|this|${LastNegPrefix}last|past|previous|current)`;
    export const EachDayRegex = `^\\s*(each|every)\\s*day\\b`;
    export const DurationFollowedUnit = `(^\\s*${DurationUnitRegex}\\s+${SuffixAndRegex})|(^\\s*${SuffixAndRegex}?\\s+?${DurationUnitRegex})`;
    export const NumberCombinedWithDurationUnit = `((?<num>\\d+(\\.\\d*)?(\\s)?)?(${DurationUnitRegex})(\\s${WrittenOneToNineRegex})?(\\sو)?(\\s)?(?<num>\\d+(\\.\\d*)?(\\s)?)?((${DurationUnitRegex})?(\\s${WrittenOneToNineRegex})?)(\\sو)?(\\s)?(?<num>\\d+(\\.\\d*)?(\\s)?)?(${DurationUnitRegex})(\\s${WrittenOneToNineRegex})?)`;
    export const AnUnitRegex = `\\b((?<half>(1/2|½|نصف)))\\s+${DurationUnitRegex}(\\s(أخرى))?`;
    export const DuringRegex = `\\b((((خلال|على مدى|مدة)\\s)|ل)+)(?<unit>(ה)?عام(ين)?|(ה)?سنتين|(ה)?سنة|(ה)?شهر(ين)?|الأشهر|(ה)?أسبوع(ين)?|(ה)?يوم(ين)?)\\b`;
    export const AllRegex = `(?<all>(طوال\\s+))?(?<unit>(ה)?عام|(ה)?سنة|(ה)?شهر|(ה)?أسبوع|(ה)?أسابيع|(ה)?أيام|(ה)?يوم)(?<all>(\\s+كامل(ה)?))?`;
    export const HalfRegex = `\\b((نصف)\\s+)?(?<unit>(ה)?ساعة|ساعتين|دقيقة|دقيقتين|ثانية|ثانيتين|(ה)?عام(ين)?|(ה)?سنة|(ה)?شهر(ين)?|(ה)?أسبوع(ين)?|(ה)?يوم(ين)?)(?<half>(\\s+)?(ו)?نصف)?\\b`;
    export const ConjunctionRegex = `\\b((ו(\\s+ل)?)|مع)\\b`;
    export const ArabicThisYearRegex = `(\\s*)?(هذا|هذه)?(لعام|عام|العام|سنة)?(\\s*)?`;
    export const ArabicEidDay = `?(يوم |عيد |ليلة | ليل)?(?=\\s*)`;
    export const HolidayList1 = `((?=\\s*)${ArabicEidDay}(إثنين الرماد|رأس السنة الهجرية|الحج|يواندان|الفطر|رأس السنة الجديدة|الأضحى|الأب|الشكر|عيد الميلاد|المولد النبوي|الفصح)()${ArabicThisYearRegex}(العام|السنة)?(${YearRegex})?(${RelativeRegex})?)`;
    export const HolidayList2 = `((?=\\s*)${ArabicEidDay}(الشباب|الأطفال|الفتيات|العشاق|الأرض|الافتتاح|جرذ الأرض|الحب|الذكرى|الخريف|القمر|الربيع|الفانوس)()${ArabicThisYearRegex}(العام|السنة)?(${YearRegex})?(${RelativeRegex})?)`;
    export const HolidayList3 = `((?=\\s*)${ArabicEidDay}(حقوق الإنسان|العالمي للأعمال الخيرية|يوم التحرير الأفريقي|حرية الصحافة العالمية|الاستقلال|الرؤساء|كل الأرواح|الشجرة|مارتن لوثر كينج| هالوين|العمال العالمي|الأم)()${ArabicThisYearRegex}(العام|السنة)?(${YearRegex})?(${RelativeRegex})?)`;
    export const HolidayRegex = `(${HolidayList1})|(${HolidayList2})|(${HolidayList3})`;
    export const AMTimeRegex = `(?<am>morning)`;
    export const PMTimeRegex = `\\b(?<pm>afternoon|evening|night)\\b`;
    export const NightTimeRegex = `(night)`;
    export const NowTimeRegex = `(now|at th(e|is) minute)`;
    export const RecentlyTimeRegex = `(recently|previously)`;
    export const AsapTimeRegex = `(as soon as possible|asap)`;
    export const InclusiveModPrepositions = `(?<include>((on|in|at)\\s+or\\s+)|(\\s+or\\s+(on|in|at)))`;
    export const AroundRegex = `(?:\\b(?:around|circa)\\s*?\\b)(\\s+the)?`;
    export const BeforeRegex = `((\\b${InclusiveModPrepositions}?(?:before|in\\s+advance\\s+of|prior\\s+to|(no\\s+later|earlier|sooner)\\s+than|ending\\s+(with|on)|by|(un)?till?|(?<include>as\\s+late\\s+as))${InclusiveModPrepositions}?\\b\\s*?)|(?<!\\w|>)((?<include><\\s*=)|<))(\\s+the)?`;
    export const AfterRegex = `((\\b${InclusiveModPrepositions}?((after|(starting|beginning)(\\s+on)?(?!\\sfrom)|(?<!no\\s+)later than)|(year greater than))(?!\\s+or equal to)${InclusiveModPrepositions}?\\b\\s*?)|(?<!\\w|<)((?<include>>\\s*=)|>))(\\s+the)?`;
    export const SinceRegex = `(?:(?:\\b(?:since|after\\s+or\\s+equal\\s+to|starting\\s+(?:from|on|with)|as\\s+early\\s+as|(any\\s+time\\s+)from)\\b\\s*?)|(?<!\\w|<)(>=))(\\s+the)?`;
    export const SinceRegexExp = `(${SinceRegex}|\\bfrom(\\s+the)?\\b)`;
    export const AgoRegex = `\\b(ago|before\\s+(?<day>yesterday|today))\\b`;
    export const LaterRegex = `\\b(?:later(?!((\\s+in)?\\s*${OneWordPeriodRegex})|(\\s+${TimeOfDayRegex})|\\s+than\\b)|من الآن|من الان|(from|after)\\s+(?<day>tomorrow|tmr|today))\\b`;
    export const BeforeAfterRegex = `\\b((?<before>before)|(?<after>from|after))\\b`;
    export const ModPrefixRegex = `\\b(${RelativeRegex}|${AroundRegex}|${BeforeRegex}|${AfterRegex}|${SinceRegex})\\b`;
    export const ModSuffixRegex = `\\b(${AgoRegex}|${LaterRegex}|${BeforeAfterRegex}|${FutureSuffixRegex}|${PastSuffixRegex})\\b`;
    export const InConnectorRegex = `\\b(in)\\b`;
    export const SinceYearSuffixRegex = `(^\\s*${SinceRegex}(\\s*(the\\s+)?year\\s*)?${YearSuffix})`;
    export const WithinNextPrefixRegex = `\\b(within(\\s+the)?(\\s+(?<next>${NextPrefixRegex}))?)\\b`;
    export const TodayNowRegex = `\\b(today|now)\\b`;
    export const MorningStartEndRegex = `(^(morning|${AmDescRegex}))|((morning|${AmDescRegex})$)`;
    export const AfternoonStartEndRegex = `(^(afternoon|${PmDescRegex}))|((afternoon|${PmDescRegex})$)`;
    export const EveningStartEndRegex = `(^(evening))|((evening)$)`;
    export const NightStartEndRegex = `(^(over|to)?ni(ght|te))|((over|to)?ni(ght|te)$)`;
    export const InexactNumberRegex = `بضع(ה)?|عدة|(?<NumTwoTerm>((ل))?عدد(\\s+من)?)`;
    export const InexactNumberUnitRegex = `(${InexactNumberRegex})\\s+(${DurationUnitRegex})|(ב\\s+)?((ה)?يومين|(ה)?أيام|(ה)?أسابيع|(ה)?أشهر|(ה)?سنوات|(ה)?أعوام|(ה)?سنين)\\s+(العديدة|القليلة|الثلاثة|الأربعة|الخمسة|الستة|السبعة|الثمانية|التسعة|العشرة)`;
    export const RelativeTimeUnitRegex = `(?:(?:(?:${NextPrefixRegex}|${PreviousPrefixRegex}|${ThisPrefixRegex})\\s+(${TimeUnitRegex}))|((the|my))\\s+(${RestrictedTimeUnitRegex}))`;
    export const RelativeDurationUnitRegex = `(?:(?:(?<=(${NextPrefixRegex}|${PreviousPrefixRegex}|${ThisPrefixRegex})\\s+)(${DurationUnitRegex}))|((the|my))\\s+(${RestrictedTimeUnitRegex}))`;
    export const ReferenceDatePeriodRegex = `\\b${ReferencePrefixRegex}\\s+(?<duration>week|month|year|decade|weekend)\\b`;
    export const ConnectorRegex = `^(-|,|for|t|around|@)$`;
    export const FromToRegex = `(\\b(from).+(to|and|or)\\b.+)`;
    export const SingleAmbiguousMonthRegex = `^(the\\s+)?(may|march)$`;
    export const SingleAmbiguousTermsRegex = `^(the\\s+)?(day|week|month|year)$`;
    export const UnspecificDatePeriodRegex = `^(week|month|year)$`;
    export const PrepositionSuffixRegex = `\\b(on|in|at|around|from|to)$`;
    export const FlexibleDayRegex = `(?<DayOfMonth>([A-Za-z]+\\s)?[A-Za-z\\d]+)`;
    export const ForTheRegex = `\\b((((?<=for\\s+)the\\s+${FlexibleDayRegex})|((?<=on\\s+)(the\\s+)?${FlexibleDayRegex}(?<=(st|nd|rd|th))))(?<end>\\s*(,|\\.(?!\\d)|!|\\?|$)))`;
    export const WeekDayAndDayOfMonthRegex = `\\b${WeekDayRegex}\\s+(the\\s+${FlexibleDayRegex})\\b`;
    export const WeekDayAndDayRegex = `\\b${WeekDayRegex}\\s+(?!(the))${DayRegex}(?!([-:]|(\\s+(${AmDescRegex}|${PmDescRegex}|${OclockRegex}))))\\b`;
    export const RestOfDateRegex = `\\b(باقي|بقية)\\s+(?<duration>الشهر|العام|الأسبوع|العقد)\\b`;
    export const RestOfDateTimeRegex = `\\b(rest|remaining)\\s+(of\\s+)?((the|my|this|current)\\s+)?(?<unit>day)\\b`;
    export const AmbiguousRangeModifierPrefix = `(from)`;
    export const NumberEndingPattern = `^(?:\\s+(?<meeting>meeting|appointment|conference|((skype|teams|zoom|facetime)\\s+)?call)\\s+to\\s+(?<newTime>${PeriodHourNumRegex}|${HourRegex})([\\.]?$|(\\.,|,|!|\\?)))`;
    export const OneOnOneRegex = `\\b(1\\s*:\\s*1(?!\\d))|(one (on )?one|one\\s*-\\s*one|one\\s*:\\s*one)\\b`;
    export const LaterEarlyPeriodRegex = `(\\b((${PrefixPeriodRegex})\\s*\\b\\s*(?<suffix>${OneWordPeriodRegex}|(?<FourDigitYear>${BaseDateTime.FourDigitYearRegex}))|(${UnspecificEndOfRangeRegex}))\\b)|(${PrefixPeriodRegex}\\s+(من هذا|من|هذا)\\s+(الشهر|الأسبوع|العام|الاسبوع)(\\s+${PrefixPeriodRegex})?)`;
    export const WeekWithWeekDayRangeRegex = `\\b(?<week>(هذا\\s+)?(الأسبوع)\\s+((${NextPrefixRegex}|${PreviousPrefixRegex})\\s+)?)(((بين)\\s+${WeekDayRegex}\\s+(ו)\\s*${WeekDayRegex})|(من)\\s+${WeekDayRegex}\\s+(إلى)\\s+${WeekDayRegex})\\b`;
    export const GeneralEndingRegex = `^\\s*((\\.,)|\\.|,|!|\\?)?\\s*$`;
    export const MiddlePauseRegex = `\\s*(,)\\s*`;
    export const DurationConnectorRegex = `^\\s*(?<connector>\\s+|ו|،|,)\\s*$`;
    export const PrefixArticleRegex = `\\bإلى\\s+`;
    export const OrRegex = `\\s*((\\b|,\\s*)(or|and)\\b|,)\\s*`;
    export const SpecialYearTermsRegex = `\\b(((ה)?سنة|(ה)?عام)(\\s+${SpecialYearPrefixes})?)`;
    export const YearPlusNumberRegex = `\\b(${SpecialYearTermsRegex}\\s*((?<year>(\\d{2,4}))|${FullTextYearRegex}))\\b`;
    export const NumberAsTimeRegex = `\\b(${WrittenTimeRegex}|${PeriodHourNumRegex}|${BaseDateTime.HourRegex})\\b`;
    export const TimeBeforeAfterRegex = `\\b(((?<=\\b(ب|((قبل|ב موعد لا يتجاوز| بعد)\\s))(وقت\\s+)?)(${WrittenTimeRegex}|${HourNumRegex}|${BaseDateTime.HourRegex}|${MidTimeRegex}))|${MidTimeRegex})\\b`;
    export const DateNumberConnectorRegex = `^\\s*(?<connector>\\s+at)\\s*$`;
    export const DecadeRegex = `(?<decade>(ה)?عشرات|(ה)?عشرينيات|(ה)?عشرينات|(ה)?ثلاثينات|(ה)?أربعينيات|(ה)?أربعينات|(ה)?خمسينيات|(ה)?خمسينات|(ה)?ستينات|(ה)?سبعينيات|(ה)?سبعينات|(ה)?ثمانينات|(ה)?تسعينات|الألفين|ألفين)`;
    export const DecadeWithCenturyRegex = `(${DecadeRegex})((\\s+القرن(\\s+(الثماني عشر|التاسع عشر)))|(\\s+(ו${DecadeRegex})))?`;
    export const RelativeDecadeRegex = `\\b(?<number>(الثلاثة|الأربعة|الخمسة|الستة|السبعة|الثمانية|التسعة|العشر|\\d+)\\s+)?((ה)?عقدين|(ה)?عقد|(ה)?عقود)\\s+(الماضيين|الماضية|الماضي|القادمين|القادمة|القادم)\\b`;
    export const YearPeriodRegex = `(((من|بين)\\s+)?${YearRegex}\\s*(${TillRegex}|${RangeConnectorRegex})\\s*${YearRegex})`;
    export const StrictTillRegex = `(?<till>\\b(to|(un)?till?|thru|through)\\b|${BaseDateTime.RangeConnectorSymbolRegex}(?!\\s*(h[1-2]|q[1-4])(?!(\\s+of|\\s*,\\s*))))`;
    export const StrictRangeConnectorRegex = `(?<and>\\b(and|through|to)\\b|${BaseDateTime.RangeConnectorSymbolRegex}(?!\\s*(h[1-2]|q[1-4])(?!(\\s+of|\\s*,\\s*))))`;
    export const StartMiddleEndRegex = `\\b((?<StartOf>((the\\s+)?(start|beginning)\\s+of\\s+)?)(?<MiddleOf>((the\\s+)?middle\\s+of\\s+)?)(?<EndOf>((the\\s+)?end\\s+of\\s+)?))`;
    export const ComplexDatePeriodRegex = `(?:((from|during|in)\\s+)?${StartMiddleEndRegex}(?<start>.+)\\s*(${StrictTillRegex})\\s*${StartMiddleEndRegex}(?<end>.+)|((between)\\s+)${StartMiddleEndRegex}(?<start>.+)\\s*(${StrictRangeConnectorRegex})\\s*${StartMiddleEndRegex}(?<end>.+))`;
    export const FailFastRegex = `${BaseDateTime.DeltaMinuteRegex}|\\b(?:${BaseDateTime.BaseAmDescRegex}|${BaseDateTime.BasePmDescRegex})|${BaseDateTime.BaseAmPmDescRegex}|\\b(?:zero|${WrittenOneToNineRegex}|${WrittenElevenToNineteenRegex}|${WrittenTensRegex}|${WrittenMonthRegex}|${SeasonDescRegex}|${DecadeRegex}|centur(y|ies)|weekends?|quarters?|hal(f|ves)|yesterday|to(morrow|day|night)|tmr|noonish|\\d(-|——)?ish|((the\\s+\\w*)|\\d)(th|rd|nd|st)|(mid\\s*(-\\s*)?)?(night|morning|afternoon|day)s?|evenings?||noon|lunch(time)?|dinner(time)?|(day|night)time|overnight|dawn|dusk|sunset|hours?|hrs?|h|minutes?|mins?|seconds?|secs?|eo[dmy]|mardi[ -]?gras|birthday|eve|christmas|xmas|thanksgiving|halloween|yuandan|easter|yuan dan|april fools|cinco de mayo|all (hallow|souls)|guy fawkes|(st )?patrick|hundreds?|noughties|aughts|thousands?)\\b|${WeekDayRegex}|${SetWeekDayRegex}|${NowRegex}|${PeriodicRegex}|\\b(${DateUnitRegex}|${ImplicitDayRegex})`;
    export const UnitMap: ReadonlyMap<string, string> = new Map<string, string>([["قرن", "10Y"],["حقبة", "10Y"],["قرون", "10Y"],["حقبات", "10Y"],["قرنين", "20Y"],["قرنان", "20Y"],["حقبتان", "20Y"],["حقبتين", "20Y"],["سنة", "Y"],["العام", "Y"],["عام", "Y"],["سنوات", "Y"],["أعوام", "Y"],["عامان", "2Y"],["سنتان", "2Y"],["سنتين", "2Y"],["عامين", "2Y"],["الشهر", "MON"],["شهر", "MON"],["أشهر", "MON"],["شهور", "MON"],["شهرا", "MON"],["شهرين", "2MON"],["شهران", "2MON"],["quarters", "3MON"],["quarter", "3MON"],["semesters", "6MON"],["semestres", "6MON"],["semester", "6MON"],["semestre", "6MON"],["أسبوع", "W"],["أسابيع", "W"],["أسبوعا", "W"],["أسبوعان", "2W"],["أسبوعين", "2W"],["نهاية الأسبوع", "WE"],["يوم", "D"],["أيام", "D"],["يوما", "D"],["يومان", "2D"],["يومين", "2D"],["ليال", "D"],["ليلة", "D"],["ساعة", "H"],["ساعات", "H"],["ساعتان", "2H"],["ساعتين", "2H"],["دقيقة", "M"],["دقائق", "M"],["دقيقتان", "2M"],["دقيقتين", "2M"],["ثانية", "S"],["ثوان", "S"],["ثانيتان", "2S"],["ثانيتين", "2S"]]);
    export const UnitValueMap: ReadonlyMap<string, number> = new Map<string, number>([["قرن", 315360000],["حقبة", 315360000],["قرون", 315360000],["حقبات", 315360000],["قرنين", 630720000],["حقبتين", 630720000],["قرنان", 630720000],["حقبتان", 630720000],["سنة", 31536000],["العام", 31536000],["عام", 31536000],["سنوات", 31536000],["أعوام", 31536000],["عامان", 63072000],["سنتان", 63072000],["سنتين", 63072000],["عامين", 63072000],["الشهر", 2592000],["شهر", 2592000],["أشهر", 2592000],["شهور", 2592000],["شهرا", 2592000],["شهرين", 5184000],["شهران", 5184000],["نهاية الأسبوع", 172800],["أسبوع", 604800],["أسابيع", 604800],["أسبوعا", 604800],["أسبوعان", 1209600],["أسبوعين", 1209600],["يوم", 86400],["أيام", 86400],["يوما", 86400],["يومان", 172800],["يومين", 172800],["ليلة", 86400],["ليال", 86400],["ساعة", 3600],["ساعات", 3600],["ساعتان", 7200],["ساعتين", 7200],["دقيقة", 60],["دقائق", 60],["دقيقتان", 120],["دقيقتين", 120],["ثانية", 1],["ثوان", 1],["ثانيتان", 2],["ثانيتين", 2]]);
    export const SpecialYearPrefixesMap: ReadonlyMap<string, string> = new Map<string, string>([["fiscal", "FY"],["school", "SY"],["fy", "FY"],["sy", "SY"]]);
    export const SeasonMap: ReadonlyMap<string, string> = new Map<string, string>([["الربيع", "SP"],["ربيع", "SP"],["الصيف", "SU"],["صيف", "SU"],["الخريف", "FA"],["خريف", "FA"],["الشتاء", "WI"],["شتاء", "WI"]]);
    export const SeasonValueMap: ReadonlyMap<string, number> = new Map<string, number>([["SP", 3],["SU", 6],["FA", 9],["WI", 12]]);
    export const CardinalMap: ReadonlyMap<string, number> = new Map<string, number>([["الأول", 1],["الثاني", 2],["الثالث", 3],["الرابع", 4],["الخامس", 5]]);
    export const DayOfWeek: ReadonlyMap<string, number> = new Map<string, number>([["الاثنين", 1],["الإثنين", 1],["monday", 1],["الثلاثاء", 2],["tuesday", 2],["الأربعاء", 3],["wednesday", 3],["الخميس", 4],["thursday", 4],["الجمعة", 5],["friday", 5],["السبت", 6],["saturday", 6],["الأحد", 0],["sunday", 0],["إثنين", 1],["ثلاثاء", 2],["أربعاء", 3],["خميس", 4],["جمعة", 5],["سبت", 6],["أحد", 0]]);
    export const MonthOfYear: ReadonlyMap<string, number> = new Map<string, number>([["1", 1],["2", 2],["3", 3],["4", 4],["5", 5],["6", 6],["7", 7],["8", 8],["9", 9],["10", 10],["11", 11],["12", 12],["يناير", 1],["فبراير", 2],["مارس", 3],["أبريل", 4],["مايو", 5],["يونيو", 6],["يوليو", 7],["أغسطس", 8],["سبتمبر", 9],["أكتوبر", 10],["نوفمبر", 11],["ديسمبر", 12],["محرم", 1],["صفر", 2],["ربيع الأول", 3],["ربيع الثاني", 4],["جمادى الأول", 5],["جمادى الثاني", 6],["رجب", 7],["شعبان", 8],["رمضان", 9],["شوال", 10],["ذو القعدة", 11],["ذو الحجة", 12],["كانون الثاني", 1],["شباط", 2],["آذار", 3],["نيسان", 4],["أيار", 5],["حزيران", 6],["تموز", 7],["آب", 8],["أيلول", 9],["تشرين الأول", 10],["تشرين الثاني", 11],["كانون الأول", 12],["01", 1],["02", 2],["03", 3],["04", 4],["05", 5],["06", 6],["07", 7],["08", 8],["09", 9]]);
    export const Numbers: ReadonlyMap<string, number> = new Map<string, number>([["صفر", 0],["واحد", 1],["الواحدة", 1],["اثنان", 2],["الثانية", 2],["ثلاثة", 3],["ثلاث", 3],["الثالثة", 3],["أربعة", 4],["الرابعة", 4],["خمسة", 5],["الخامسة", 5],["ستة", 6],["السادسة", 6],["سبعة", 7],["السابعة", 7],["ثمانية", 8],["الثامنة", 8],["تسعة", 9],["التاسعة", 9],["عشرة", 10],["العاشرة", 10],["أحد عشر", 11],["الحادية عشر", 11],["اثنا عشر", 12],["ثلاثة عشر", 13],["أربعة عشر", 14],["خمسة عشر", 15],["ستة عشر", 16],["سبعة عشر", 17],["ثمانية عشر", 18],["تسعة عشر", 19],["عشرون", 20],["عشرين", 20],["واحد وعشرون", 21],["اثنان وعشرون", 22],["ثلاثة وعشرون", 23],["أربعة وعشرون", 24],["خمسة وعشرون", 25],["ستة وعشرون", 26],["سبعة وعشرون", 27],["ثمانية وعشرون", 28],["تسعة وعشرون", 29],["الثلاثين", 30],["ثلاثين", 30],["واحد وثلاثون", 31],["اثنان وثلاثون", 32],["ثلاثة وثلاثون", 33],["أربعة وثلاثون", 34],["خمسة وثلاثون", 35],["ستة وثلاثون", 36],["سبعة وثلاثون", 37],["ثمانية وثلاثون", 38],["تسعة وثلاثون", 39],["أربعون", 40],["واحد وأربعون", 41],["اثنان وأربعون", 42],["ثلاثة وأربعون", 43],["أربعة وأربعون", 44],["خمسة وأربعون", 45],["ستة وأربعون", 46],["سبعة وأربعون", 47],["ثمانية وأربعون", 48],["تسعة وأربعون", 49],["خمسون", 50],["واحد وخمسون", 51],["اثنان وخمسون", 52],["ثلاثة وخمسون", 53],["أربعة وخمسون", 54],["خمسة وخمسون", 55],["ستة وخمسون", 56],["سبعة وخمسون", 57],["ثمانية وخمسون", 58],["تسعة وخمسون", 59],["ستين", 60],["واحد وستون", 61],["اثنان وستون", 62],["ثلاثة وستون", 63],["أربعة وستون", 64],["خمسة وستون", 65],["ستة وستون", 66],["سبعة وستون", 67],["ثمانية وستون", 68],["تسعة وستون", 69],["السبعون", 70],["واحد وسبعون", 71],["اثنان وسبعون", 72],["ثلاثة وسبعون", 73],["أربعة وسبعون", 74],["خمسة وسبعون", 75],["ستة وسبعون", 76],["سبعة وسبعون", 77],["ثمانية وسبعون", 78],["تسعة وسبعون", 79],["ثمانون", 80],["واحد وثمانون", 81],["اثنان وثمانون", 82],["ثلاثة وثمانون", 83],["أربعة وثمانون", 84],["خمسة وثمانون", 85],["ستة وثمانون", 86],["سبعة وثمانون", 87],["ثمانية وثمانين", 88],["تسعة وثمانون", 89],["تسعون", 90],["واحد وتسعون", 91],["اثنان وتسعون", 92],["ثلاثة وتسعون", 93],["أربعة وتسعون", 94],["خمسة وتسعون", 95],["ستة وتسعون", 96],["سبعة وتسعون", 97],["ثمانية وتسعون", 98],["تسعة وتسعون", 99],["مائة", 100]]);
    export const DayOfMonth: ReadonlyMap<string, number> = new Map<string, number>([["1st", 1],["1th", 1],["2nd", 2],["2th", 2],["3rd", 3],["3th", 3],["4th", 4],["5th", 5],["6th", 6],["7th", 7],["8th", 8],["9th", 9],["10th", 10],["11th", 11],["11st", 11],["12th", 12],["12nd", 12],["13th", 13],["13rd", 13],["14th", 14],["15th", 15],["16th", 16],["17th", 17],["18th", 18],["19th", 19],["20th", 20],["21st", 21],["21th", 21],["22nd", 22],["22th", 22],["23rd", 23],["23th", 23],["24th", 24],["25th", 25],["26th", 26],["27th", 27],["28th", 28],["29th", 29],["30th", 30],["31st", 31],["01st", 1],["01th", 1],["02nd", 2],["02th", 2],["03rd", 3],["03th", 3],["04th", 4],["05th", 5],["06th", 6],["07th", 7],["08th", 8],["09th", 9]]);
    export const DoubleNumbers: ReadonlyMap<string, number> = new Map<string, number>([["half", 0.5],["quarter", 0.25]]);
    export const HolidayNames: ReadonlyMap<string, string[]> = new Map<string, string[]>([["easterday", ["easterday","easter","eastersunday"]],["ashwednesday", ["ashwednesday"]],["palmsunday", ["palmsunday"]],["maundythursday", ["maundythursday"]],["goodfriday", ["goodfriday"]],["eastersaturday", ["eastersaturday"]],["eastermonday", ["eastermonday"]],["ascensionday", ["ascensionday"]],["whitesunday", ["whitesunday","pentecost","pentecostday"]],["whitemonday", ["whitemonday"]],["trinitysunday", ["trinitysunday"]],["corpuschristi", ["corpuschristi"]],["earthday", ["earthday"]],["fathers", ["fatherday","fathersday"]],["mothers", ["motherday","mothersday"]],["thanksgiving", ["thanksgivingday","thanksgiving"]],["blackfriday", ["blackfriday"]],["cybermonday", ["cybermonday"]],["martinlutherking", ["mlkday","martinlutherkingday","martinlutherkingjrday"]],["washingtonsbirthday", ["washingtonsbirthday","washingtonbirthday","presidentsday"]],["canberra", ["canberraday"]],["labour", ["labourday","laborday"]],["columbus", ["columbusday"]],["memorial", ["memorialday"]],["yuandan", ["yuandan"]],["maosbirthday", ["maosbirthday"]],["teachersday", ["teachersday","teacherday"]],["singleday", ["singleday"]],["allsaintsday", ["allsaintsday"]],["youthday", ["youthday"]],["childrenday", ["childrenday","childday"]],["femaleday", ["femaleday"]],["treeplantingday", ["treeplantingday"]],["arborday", ["arborday"]],["girlsday", ["girlsday"]],["whiteloverday", ["whiteloverday"]],["loverday", ["loverday","loversday"]],["christmas", ["christmasday","christmas"]],["xmas", ["xmasday","xmas"]],["newyear", ["newyear"]],["newyearday", ["newyearday"]],["newyearsday", ["newyearsday"]],["inaugurationday", ["inaugurationday"]],["groundhougday", ["groundhougday"]],["valentinesday", ["valentinesday"]],["stpatrickday", ["stpatrickday","stpatricksday","stpatrick"]],["aprilfools", ["aprilfools"]],["stgeorgeday", ["stgeorgeday"]],["mayday", ["mayday","intlworkersday","internationalworkersday","workersday"]],["cincodemayoday", ["cincodemayoday"]],["baptisteday", ["baptisteday"]],["usindependenceday", ["usindependenceday"]],["independenceday", ["independenceday"]],["bastilleday", ["bastilleday"]],["halloweenday", ["halloweenday","halloween"]],["allhallowday", ["allhallowday"]],["allsoulsday", ["allsoulsday"]],["guyfawkesday", ["guyfawkesday"]],["veteransday", ["veteransday"]],["christmaseve", ["christmaseve"]],["newyeareve", ["newyearseve","newyeareve"]],["juneteenth", ["juneteenth","freedomday","jubileeday"]]]);
    export const WrittenDecades: ReadonlyMap<string, number> = new Map<string, number>([["hundreds", 0],["tens", 10],["twenties", 20],["thirties", 30],["forties", 40],["fifties", 50],["sixties", 60],["seventies", 70],["eighties", 80],["nineties", 90]]);
    export const SpecialDecadeCases: ReadonlyMap<string, number> = new Map<string, number>([["noughties", 2000],["aughts", 2000],["two thousands", 2000]]);
    export const DefaultLanguageFallback = `MDY`;
    export const SuperfluousWordList = [ "preferably","how about","maybe","perhaps","say","like" ];
    export const DurationDateRestrictions = [ "today","now" ];
    export const AmbiguityFiltersDict: ReadonlyMap<string, string> = new Map<string, string>([["^(morning|afternoon|evening|night|day)\\b", "\\b(good\\s+(morning|afternoon|evening|night|day))|(nighty\\s+night)\\b"],["\\bnow\\b", "\\b(^now,)|\\b((is|are)\\s+now\\s+for|for\\s+now)\\b"],["\\bmay\\b", "\\b((((!|\\.|\\?|,|;|)\\s+|^)may i)|(i|you|he|she|we|they)\\s+may|(may\\s+((((also|not|(also not)|well)\\s+)?(be|ask|contain|constitute|e-?mail|take|have|result|involve|get|work|reply|differ))|(or may not))))\\b"],["\\b(a|one) second\\b", "\\b(?<!an?\\s+)(a|one) second (round|time)\\b"],["\\b(breakfast|brunch|lunch(time)?|dinner(time)?|supper)$", "(?<!\\b(at|before|after|around|circa)\\b\\s)(breakfast|brunch|lunch|dinner|supper)(?!\\s*time)"],["^\\d+m$", "^\\d+m$"]]);
    export const MorningTermList = [ "morning" ];
    export const AfternoonTermList = [ "afternoon" ];
    export const EveningTermList = [ "evening" ];
    export const MealtimeBreakfastTermList = [ "breakfast" ];
    export const MealtimeBrunchTermList = [ "brunch" ];
    export const MealtimeLunchTermList = [ "lunch","lunchtime" ];
    export const MealtimeDinnerTermList = [ "dinner","dinnertime","supper" ];
    export const DaytimeTermList = [ "daytime" ];
    export const NightTermList = [ "night" ];
    export const SameDayTerms = [ "today","otd" ];
    export const PlusOneDayTerms = [ "tomorrow","tmr","day after" ];
    export const MinusOneDayTerms = [ "yesterday","day before" ];
    export const PlusTwoDayTerms = [ "day after tomorrow","day after tmr" ];
    export const MinusTwoDayTerms = [ "day before yesterday" ];
    export const FutureTerms = [ "this","next" ];
    export const LastCardinalTerms = [ "الأخير" ];
    export const MonthTerms = [ "month" ];
    export const MonthToDateTerms = [ "month to date" ];
    export const WeekendTerms = [ "weekend" ];
    export const WeekTerms = [ "week" ];
    export const YearTerms = [ "year" ];
    export const GenericYearTerms = [ "y" ];
    export const YearToDateTerms = [ "year to date" ];
    export const DoubleMultiplierRegex = `^(bi)(-|\\s)?`;
    export const HalfMultiplierRegex = `^(semi)(-|\\s)?`;
    export const DayTypeRegex = `((week)?da(il)?ys?)$`;
    export const WeekTypeRegex = `(week(s|ly)?)$`;
    export const WeekendTypeRegex = `(weekends?)$`;
    export const MonthTypeRegex = `(month(s|ly)?)$`;
    export const QuarterTypeRegex = `(quarter(s|ly)?)$`;
    export const YearTypeRegex = `((years?|annual)(ly)?)$`;
}
